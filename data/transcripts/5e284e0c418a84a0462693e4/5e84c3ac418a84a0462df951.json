{
  "pid": "5e284e0c418a84a0462693e4",
  "eid": "5e84c3ac418a84a0462df951",
  "title": "29. Terminal Emulators",
  "task_id": "gpjbqkmda7lenk2a",
  "transcription": [
    {
      "time": "00:00:00",
      "text": "欢迎收听IPM podcast网络旗下的IT技术主题娱乐节目内核恐慌。我们号称hard call，但是也没有干货，想听的人听，不想听的人就别听。本节目的网址是kero panic dot FM，我们推荐大家使用podcast客户端订阅节目，详情请访问IPN dot IOS flash FAQ。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:17",
      "text": "欢迎你为本节目捐款，捐款地址是kernel panic dot FM flash donate。捐款金额随意，只要是八的正整数倍就可以。捐款不会为你带来什么，不捐也不会让你失去什么。我们的口号是everything is theoretically impossible until IT is done。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:34",
      "text": "OK, 今天是我们的第29期节目，哼我是吴涛。然后今天我们在深圳创业界拥有巨大影响力的投资人，我要为大家宣传一下IPN旗下的新业务。可以这么说。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:58",
      "text": "你你你你你真的用了那个梗，好吧，很多人不知道。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:03",
      "text": "你这样说好吧，还以为这是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:05",
      "text": "既成事实，是假设在未来发生OK好吧，OK好，那就扯淡了。今天我我们尝试一个新业务，也我个人尝试一个新业务。哼就是一个拉皮条的业务。然后这边后期有些朋友的公司，他们有这个招聘的需求，然后刚好我们节目应该还有一些开发者、程序员、听众也在找工作的。然后看我觉得可以做一个什么牵线搭桥的事儿。对，然后我们这个就试试。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:42",
      "text": "这次我们这里主要有两个岗位，或者两个职位，目前正在招聘。然后这两个公司都是我比较熟悉，都没有问题，都很不错的公司。也欢迎大家去考虑一下OK这两个需求。第一个是在广州的，在那个TIT就是微信的那个团队所在那个园区里面的一家小小的创业公司OK。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:10",
      "text": "所以是不是微信的团队，而是微信。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:13",
      "text": "团队所在的园区旁边隔壁的对面隔壁是我以前在知乎的同事，他们出后来做了一个跟体育社区相关的一个产品，好像现他们现在在招这个python的后端工程师。所以如果你对什么tornado、flask这些名词比较熟悉，比较感冒的话，然后就欢迎考虑一下。然后另外一个职位是在北京中关村，这个是一个做跨境奢侈品电商的这么一个小一个创业团队。他们的这个招聘需求是他们要招一个架构师，然后要求大概是这样。我大概念一下算法这些数据结构这些基本的知识就不说了。机器学习有加分，然后搜索优化有要有加分，如果你能做个搜索引擎的话就更好了。然后他们是用这个reals的，所以如果你对reals了解的话，会大大的加分。然后他们搜索的实现是由那个elastic search来做的，所以这边如果有经验的话，也就是有有很大的加分了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:29",
      "text": "两个职位，一个是在广州的python后端开发后后端工程师，一个是在北京的rials的系统架构师，都是要在要真人出席的这两个暂时没有办法远程，所以如果就是你考虑一下地域的原因了，如果你对这两个职位有兴趣的话，欢迎给我来信。我专门开了个邮箱叫做talent at real board dot com TALENT at RIOBARD does COM。你可以发来一个你的一个简单的介绍，然后把你的简历也发过来，你可以自我介绍一下自己的情况怎么样子。然后我们这个拉皮条，我这个拉皮条跟别人不太一样，我会帮他们做第一轮的初审和店面。所以你先接触的对象是这个面试官，是我本人，可以聊一下。所以如果大家对这个事情有兴趣的话，可以我们试试对OK这个广告时间到此为止。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:29",
      "text": "OK我相信从此就会有很多少女朝这个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:34",
      "text": "他如果是女生的话，这个就大大的加分了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:38",
      "text": "然后骗局四和主和real主播电话聊天的机会。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:44",
      "text": "要需要这样吗？那你要拿一份，对的，拿一份能过得了我法眼的简历才行。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:50",
      "text": "还要附照片。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:52",
      "text": "能附照片最好。女生的话。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:54",
      "text": "OK其实我想知道究竟要多少次是多少次节目之后才会有北上广深之外的地方出现。",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:06",
      "text": "你说这个职位的需求。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:08",
      "text": "北上可能还有一个杭州，我觉得中国IT.",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:12",
      "text": "就还蛮多的。以后我们这个业务，因为我们现在试点都是介绍的朋友的公司这样，如果有这个以后我们节目组确实推荐的这个人才不错，那搞不好也有别的公司过来要求说，我花钱在你们这打广告行不行？",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:27",
      "text": "你也可以考虑对吧？不过这也是需要我们的real主播来certify一下的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:33",
      "text": "我们是双向审查的，就是说我帮公司先做这个初筛对吧？不推荐不靠谱的人，当然我们也要是要先是一个审查公司的，不推荐不靠谱的公司的。没错，就这点我们还是要先保证的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:47",
      "text": "其实刚才两个广告我有一个内心的OS，就是你忘记了最重要的一项薪水如何。",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:56",
      "text": "这个薪水都应该就至少是高于市场平均数的，这个不用担心，具体是按这个什么来着，会有一个范围。但是是按这个还是要看你的人和。对，因为对薪资不光是这个就工资那块，还有包括因为是创业公司的话，还有像股权期权那些问题。所以具体到时候就我负责的部分是说帮你们选择这个公司，然后帮你办公司，选择这个人才。但至于说你们后面的这个谈不谈得拢这个价钱和这个酬劳的问题，那就你们自己去努力了。OKOK大概是这样。好的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:32",
      "text": "今天进入节目的正题，首先是上一期的follow up，两条很短的follow up。首先是一位叫做朱思涵的朋友，我不知道念对了没有？思函之舞的朋友说，两位主播你好。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:48",
      "text": "这期介绍了许多shell程序，考虑到历史长河中各类shell的数量，有所遗漏也是正常。这里补充一个，清华大学校友在本科期间用go语言写的l wish，包含了对ZSH的一些特性，并且对pipeline进行了许多实用的改进。作为一个自称的即系统级编程语言，一个可靠的shell项目也无疑是表明自己足够靠的重要指标。怎么样够浪语言的？使用者real先生，你对这个LV是有所耳闻吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:21",
      "text": "我之前看到过，在那个店里面看过那个项目。对，当时感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:25",
      "text": "昙花一现。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:27",
      "text": "对于这种都是实验性质的项目，然后肯定还是如果你要日常用的话，你要自己想办法整一整。不过我还挺开心的，有一个狗血的笑，大家可以用一下。因为像大部分的笑都是谁写的？",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:43",
      "text": "应该其实有一个还有一个python写的是叫叫什么来着？就叫golkar之类的。GAUKE. 我不知道刮ker greg k不知道好像是python写的，我记得但。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:59",
      "text": "对，没错。除了这种特例，我印象中大部分的我们日常用的shell像什么bash.",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:04",
      "text": "大部分都是C或者C加加现在的对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:09",
      "text": "然后还蛮开心有这么一个比较新的语言写的这个小我在想什么时候有人用给我写个操作系统出来。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:16",
      "text": "说不定已经有了somewhere .",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:18",
      "text": "in the place。他说那不就是那个plan带吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:24",
      "text": "OK, 下一条。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:26",
      "text": "反馈是这个叫Thomas怎么。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:31",
      "text": "念好啊，对，菜或者炒。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:34",
      "text": "我觉得这是月。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:36",
      "text": "维托马丁。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:39",
      "text": "对，他说是香港的听众。对，两位主持人好，我是香港的听众。有关第28期内dos年代的commander应该是norton commander，而不是total commander。这个我们说错了。对，所以偷偷come是哪里？偷偷那是windows上面OK还是一家，接着念这一则反馈提到modern不得不提提norton guide。",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:05",
      "text": "由于当时还流行运行一些TSR，对TSR terminate and stay resident program，TSR城市让电脑使用者用hot key呼出来。使用norton guide有许多不同的手册，让使用者呼出不同的使用手册。记得当时note guide内还有一本关于dos batch command的手册。此外north n utilities the batch in hana使得dos batch program变得强很多，可以输出有颜色的文字。这个我想起来了，以前玩那个叫什么来着？",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:43",
      "text": "你说内存修改器是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:46",
      "text": "对对对，那内存修改其实就是通过这种方式唤醒出来的对吧？因为当时多少下面是都是单进程的程序，所以他怎么弄，怎么把那个内存修改器。",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:56",
      "text": "它其实就是把它藏在内存的一个地方，然后你键盘中断可以呼叫那个地方，就等于把那个那那把你跳出去，弄到前台来，然后。对，这是一个非常愚蠢的，我都非常简单的多任务系统。",
      "speaker": "发言人1"
    },
    {
      "time": "00:10:13",
      "text": "可以理解为它还是单，它跟你有点像现在那个IOS那种你手动多任务。对，就你看手动启它不可以在同一个屏幕上出现两个程序同时运行，但是一次用一个，这对跟IOS差不多。他这个就刚才我想起那个TSR城市的时候，我就想起这个事儿。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:10:35",
      "text": "modern guide就所以它其它就是一套F1，就相当于就是一套使用手册。可以让你在写batch的时候，你写写批处理程序的时候，忘记了一个什么怎么写，然后按一个快捷键这个批处理程序的。这最近。",
      "speaker": "发言人1"
    },
    {
      "time": "00:10:51",
      "text": "不是挺火的一个麦，就mac上面那个应用叫dash。对你你买了吗？买了买文档的工具。",
      "speaker": "发言人2"
    },
    {
      "time": "00:10:58",
      "text": "而而且但是但是很简单，你不买的话，它没有什么程序上的功能损失。但是他把字体给你换成call me thanks，我去。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:11",
      "text": "是这样的吗？我最开始没买的时候是启动的时候要等30秒。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:15",
      "text": "他变着法儿折磨你，反正就是你功能上没有什么损失，但是这各种各样你都不爽，然后并。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:22",
      "text": "起来已经凶残了，用common sense来做对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:27",
      "text": "而且图标也换了好几次OK.",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:29",
      "text": "不过那个那个也我觉得这个东西挺好用的，每次查文档能节省不少时间，就推荐你买一个好啊。不过对他对那个对有一些文档支持都不是特别好。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:43",
      "text": "我觉得对有些文档还是得上网看，说实话。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:47",
      "text": "对，特别是那种更新的比较勤快的那种。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:51",
      "text": "而且其实上一次apple store出的那个事儿，就是那个数字签名损坏导致我的，但是好像不能用。后来我也再没有你也中了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:01",
      "text": "对我也中OK，我重新下载一个呗。说到上网查这个文档，我想起一件事儿，当年我也是写过PHP的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:09",
      "text": "你知道吗？黑历史爆出来了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:12",
      "text": "对对对，黑历史。那个时候他们读高中，还得自己折腾学学写。然后那个APHH的文档是在他是在那个PHP岛内的官网上面。然后他那个文章有些写的很模，因为他那个函数很多，有些文章做的很模糊。其实最有用的是那个评论，那个PHP的对他评论区超有用。他那些人会告诉你那个文章的坑，就有些文章是错的，对我这个还挺棒。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:40",
      "text": "但有时候PHP的评论区也是，就是有可能在最上面的那个解决方案是非常愚蠢的，然后下面会有人指出来，但是很多人不会看到下面就说就直接place the top most one，然后错误的代码就到处流转，就是成为平均还败平等的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:58",
      "text": "那个那个社区还挺有意思，就是这种整个操作模式。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:01",
      "text": "对，PHP其实可能是就是因为流传流行程度太广了。这个模式简直是独一无二的你没有办法在其他任何一个程序的禹编程语言的社区里面找到这样一个在官方网的文档上面帮那个评论比正文有用的语言，这也是奇葩。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:21",
      "text": "后来不是就就这这算什么，算stack flow，算是就把这个东西正式化了。对，那比较有意思。对，那行，谢谢两位朋友的来信。上一期其实我们有一个话题没有讲完，因为时间的关系比较长了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:41",
      "text": "讲了两个多小时有点累了。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:43",
      "text": "我们今天把那个补上，补上那块就是那个terminal emulator叫终端模拟器对吧？错了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:51",
      "text": "终端仿真器仿真，我们口语人都说模拟器。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:56",
      "text": "但是所以这个也要我们要做一个什么考据了，和simulate有什么区别？",
      "speaker": "发言人2"
    },
    {
      "time": "00:14:02",
      "text": "Simulate是说要你要你要把它事无巨细的模拟出来，就是你你包括内部原理都要把它做出一个以假乱真的东西来。就就叫得完完全全。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:14",
      "text": "从头到尾都复刻一遍，才算是simulate模拟器。",
      "speaker": "发言人2"
    },
    {
      "time": "00:14:18",
      "text": "才算是simulation。对，simulation就是比如说你模拟一个宇宙，你是要把它里面什么常数，什么重力，乱七八糟的全都要模拟出来才叫simulation。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:30",
      "text": "OK那那而emulate对仿真emulator.",
      "speaker": "发言人2"
    },
    {
      "time": "00:14:34",
      "text": "指则只是做出那个样子的，就是他最终的那个look feel一样就可以了。比如说那个mame那个街机模拟器，OK就我们叫它街机模拟器。但它实际上做的是事情是仿真。它并不是真的做一套那个街机的硬件，或者说用软件去模拟街机的硬件出来，而是去读那个街机的room，然后把这个room跑起来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:55",
      "text": "所以最终这两个的区别就是说模拟器叫做API不仿真器的API comparable对吧？然后模拟器等于是把在买到重新写一遍。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:07",
      "text": "模拟器相当于binary compatible。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:11",
      "text": "对对对，因为他和这个API就是interface compatible的区别。对，大概就是这样。OK有意思。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:18",
      "text": "但是口语里面我一直我们一直都说终端。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:22",
      "text": "模拟器是我我我改了，我现在跟你说终端真好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:26",
      "text": "终端仿真器OK仿真。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:29",
      "text": "这个名字好，还挺那个挺港台的对。好吧，所以终端仿真器到底。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:41",
      "text": "是个什么鬼？我们上期介绍终端对吧？就是终端早期是一个实体的，或者说加引号物理的这么一个东西摆在那儿。它是一个有机械电子元件的一个计算机，它不是计算机摆在那儿，它它只是一个可以，它相当于一个键盘和显示屏的结合体。但是它没有大脑，他的他他所做的唯一的事情就是把你输入的东西传输到这个main frame，就是大猩猩。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:14",
      "text": "上面对对，就那个时候因为电脑还是共享的，就没有之后PC这个概念还没有出来。",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:20",
      "text": "对，所以说其实实际上我们现在很多事情都是在复古。就比如说这个浏览器其实本身就是一种服务，浏览器本身并不具备处理信息的能力，它只是把你的输入和远程服务器的输出显示在一个窗口里而已。而这个窗口的实例版本就可以理解为以前的早期的terminal。然后terminal stimulate就是把terminal的跟远程的大型机打交道的这一套机制仿真出来，然后用一个软件来实现，这就是我们所谓的terminals。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:59",
      "text": "Emily OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:00",
      "text": "对对，然后上一期我再找一个，我试图说一个术语叫CUI。后来我终于查到它到底是什么，就是character user和这个graphic user interface是不一样的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:15",
      "text": "就就基就故意对应的是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:18",
      "text": "酷酷E对CUI。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:21",
      "text": "其实我们经常都是是是CLI的，common line interface。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:25",
      "text": "对，而command line interface和contactor user interface又不太一样。然后因为common .",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:31",
      "text": "line它也可能是图形的，只是说它的这个执行的方式是通过命令行的形式来实现。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:39",
      "text": "而CUI则反过来是说你能够看到的user interface整个就是一个矩阵上面的一些字符。对，比如说什么win就是一个CUI对吧？但是你在你至少你在那个编辑模式和那个命令模式的时候，它是一个correctly ACE。对，因为你可以在任何地方移动，然后你可以下达命令。但是当你进入那个打了冒号之后，那模式叫e mode EX mode，这就是一个命令行模式。对，此时它是它有一个CLI。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:10",
      "text": "所以这里有个很明显，其实就刚才我们就是那个听众反馈里面一个叫做norton n commander，它算是一个COI，但它不是一个CLI.",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:18",
      "text": "它是一个COI的程序，但它不是CLI对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:22",
      "text": "因为它的那个界面是用那些字符绘制出来的一个像窗口，像图形的一个概念，但是它并不是基于命令行的。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:32",
      "text": "所以这或者说现在最常有最有可能遇到的COI就是那个linux或者是free BSD的那个安装界面，还是COI。对对对，installed对，感觉非常的复古。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:46",
      "text": "其实一一我一直是一直在有一个问题，我后来专门查了才得到这个解就是答疑解惑。你知道有些在那个机房里面，那个服务器它是没有显示器的。OK对，然后就是我们现在你去买一个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:04",
      "text": "那些blade.",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:07",
      "text": "不那个叫机架。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:09",
      "text": "blade还是另外一个东西，就是recommend service。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:13",
      "text": "那blade肯定也是没有的，他们通常都没有。然后你看他们用的那个处理器，用的是那个一般是比如说英特尔那个叫至强处理器，也是不是就不像我们PC里面现在那个要什么有有集成显卡的那种东西，或者是板载显卡它都是没有。所以他们是怎么输出的是吧？对，他们当然也有些也有V接的口，你可以接个显示器上去，插个USB键盘也可以用。但是有些我发现是不是连这一块其实也可以省掉，因为你想那个服务器它大部分时候并不是需要连个显示器一直连着的，所以其实我发现有些是用这个叫做council。就上次我们讲那个RS232是吧？SRJS232那个串口。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:54",
      "text": "就是一个jack。对，水晶头不是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:56",
      "text": "不是水晶头，不是水晶头。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:59",
      "text": "串口。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:00",
      "text": "serial real port。对，是通过那个。然后有一些主板，它那个BIOS它是支持把那个因为我们插一个微接的屏幕，他看到的也是最开始boot的时候也是一个CUI对吧，character interface对吧，它就是可以支持把那个导到那个串口的那个serial port导出来的。这样的话你再插一个读串口的机器，但现在是一般没有，现在笔记本都没有串口的接口了，可能买个USB转串口的那个读插到那个机上的串口上面去，然后再开一个托儿terminal emulator。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:34",
      "text": "对，就可以把那台服务器上显示的那个东西弄出来。这个东西这个设备叫什么玩意儿来着？那个那个叫council port。对，这个是这样的。然后我想想，他他读的那个东西叫什么，我也想不起来。我觉得这个还挺好的。因为我一直在想家里搞个X86的1个小那种那种微型主机，然后他要跑来做这个服务器网关这些东西，那上面然后不用接显示器，但我没有显示器，我想你的显示器到时候是有点问题，我怎么去调它对吧？对，有这么一个东西还挺好。然后我就找了一圈，发现那个就是消费级的这种产品，家用主板基本上都不支持的一个功能，就只能作罢了OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:21",
      "text": "如果可以的话，那就是60年代的技术又一次来来拯救屁股。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:27",
      "text": "对，我们还是不断的在把那个几十年前的老东西把它包一层一层包起来接着用。",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:36",
      "text": "就越基础的技术越可靠，越越底层的技术越可靠。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:41",
      "text": "其实你真的这么觉得吗？我一直在想，如果说我因为现在我们不需要那些各种什么TTY了，对吧？我们也不需要这个叫什么什么终端，就理论上还是不需要这个终端模拟器的。我们如果这个东西推倒从头再来，我们还会这样层层包吗？因为层层包的话其实是有那个复杂度是加的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:01",
      "text": "是我觉得角度是这样的，如果你的前提是所有的legacy的设备全部存在不复存在了，那重新重启炉灶，按以现有的知识积累和技术水平重启炉灶，那肯定不需要。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:14",
      "text": "对，就会我觉得会至少加多少，简单干净很多。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:18",
      "text": "对我的点就是因为世界上还有这么多legacy的东西存在。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:22",
      "text": "所以没有办法什么老化又起作用了。If in break，don't fix IT.",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:30",
      "text": "yeah. 我想我想还有一句什么话是谁说的是stroke shop说的，就是那个C加加之父说的。我不确定是不是他说的，但是他说过这么一句话，就是类似于什么问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:42",
      "text": "我不是他说，但是他这个好远，没事，你说，我们知道了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:52",
      "text": "就是他说过类似一句什么所谓legacy code，和你想要把它删掉重新写的那些code相比，mexico才是真正work并且scalable。对在你总觉得这堆破烂玩意儿应该被替换掉之前，应该考虑到其实你写出来的替换掉那个东西可能根本就跑不起来的这个潜在危险性。这句话好犬儒。",
      "speaker": "发言人1"
    },
    {
      "time": "00:23:23",
      "text": "感觉对，好吧，不要重新发明轮子也是另外一种解释。",
      "speaker": "发言人2"
    },
    {
      "time": "00:23:33",
      "text": "没错。然后我们上次还提到一个概念就是council，而council其实又是一个比common interface更更泛化的概念。你说至少我是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:23:48",
      "text": "在中文翻译成叫控制台。对，最开始我这个我可以说上次我去在加州那个叫第三酒店博物馆OK那个叫什么more .",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:00",
      "text": "computer .",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:02",
      "text": "history museum，计算机历史博物馆里面。",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:07",
      "text": "开放那个，没什么非常无聊的笑话说吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:12",
      "text": "对，然后见过康索那个词的对应的本来的那个东西了，就正儿八经是一个控制台。就你想象一下以前那个那个新闻联播里面，你想象一下当时发这个什么神舟几号来着。那个时候你看那个空那个那个就叫什么叫那个那个房间叫什么？很多人做的那个房间。",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:34",
      "text": "指指挥室。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:35",
      "text": "对，还是就是那个房间总控室。对他前面不是一堆人，有一堆那种白色的柜子，上面有很多屏幕，很多按钮。对，那个东西是对，那个那个有很多按钮可以搬来搬去，可以按来按去，那个桌子就叫council，叫控制台。对。然后后来只是说我们在这个计算机里面，早期计算虚拟化。对早期计算机确实也是有那么多按钮和一大堆灯，闪亮的灯对是要搬的，但后来我们现在把它就是虚拟成一个窗口了之后，就变成一个任何一个有这种控制监控功能的都变成一个council，就是说就是OSC里面自带一个counter的应用，你知道吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:16",
      "text": "对，这个一开始还迷惑我了好久，我心想这是一个council APP，为什么不能做terminal用。后来发现我。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:23",
      "text": "还有一个看他这个看到其实是看log的对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:27",
      "text": "这个还是有点迷惑性。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:30",
      "text": "对，这个是council的概念，就本源算是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:34",
      "text": "而且你知道现在的PC game和的对应物是什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:37",
      "text": "是the game，对，所以主机也是他的游戏。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:41",
      "text": "主机也是console这个词。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:43",
      "text": "我这个又是什么来头？",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:45",
      "text": "我觉得就是因为那个council在早期的游戏机有早期游戏机的形式就是一个控制台，就是一个有很多按钮，然后分下来两个手柄的一个控制台。那个雅达利不就是一个巨大的摇杆，然后有一个按键，这个东西其实就是一个council。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:05",
      "text": "你是说红白机也算是council吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:07",
      "text": "恐怕计算是康总。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:09",
      "text": "然后另最最典型。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:11",
      "text": "的比如说街机，街机本身就是一个带显示器的控制台。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:17",
      "text": "对，这个算。对，还有个摇杆没错。所以后来的这个像PS几234也就像一点council game的话。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:28",
      "text": "对，应该是这么来的。我觉得OK然后console这个词也在很多的很多软件甚至游戏里面出现，比如说quick或者是放那个辐射4也有看到。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:42",
      "text": "它那个功能是什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:46",
      "text": "要其实就是要其实是在程序那个程序员那边调试的对，然后你可以随便改这个游戏的那就是ID那个quick里面就是等等，quick的无敌模式是在康组里面看忘了，应该是OK好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:05",
      "text": "还有其实大概可以理解，就是他们做了一个rapper对吧？在在game游戏里面做了一个rap，可以实时的改游戏的一些东西，就不自带那个游戏修改器吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:16",
      "text": "没错，而且我觉得将来这个虚拟现实里面肯定也会有这么一个东西。就是你你在讯息，你在带着VR眼镜看。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:24",
      "text": "好像还写两行代码，就天天出现一个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:26",
      "text": "然后对。你已婚了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:31",
      "text": "real你不能这样。出现一个美女有什么问题吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:37",
      "text": "好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:38",
      "text": "出现一个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:39",
      "text": "帅哥好吧，OK这会儿是更正式不正确还是。然后你在虚拟现实里面先按一下呼出council键，就可以在眼前凭空出现一个巨大的吃不了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:55",
      "text": "这不是上帝吗？要有光。对，上帝模式，什么environment到light等于on，对，就有光play .",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:06",
      "text": "go OK。然后我们上一期提到了shell，那那shell可以说是一个在command是一个提供了command interface的，跑在terminals emulate里面的一个程序。哼对吧？但是windows command line并不是一个shell.",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:33",
      "text": "理解，那他是什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:36",
      "text": "我觉得不是一个需要把我不知道这个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:40",
      "text": "他那个具体是这是一个问题。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:42",
      "text": "这是一个问题。你觉得对，因为你看dos本身是一个最开始的时候是一个操作系统。然后这个操作系统为你提供了一个界面，就是一个common interface。但是dos并没有内核跟他没有这个程序区分差区分对吧？他也从来没有说过自己是一个，而且他也不是他有一个他也并不是一个可以替换的东西，对吧？你在dos上面并没有一个不能用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:12",
      "text": "其他shell.",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:13",
      "text": "对，就因为它没有这个shell的概念，所以它根本不是一个shell。我可以这么理解吗？明白，但是power shell却是一个shell。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:22",
      "text": "可以这么理解吗？他自己都叫shell了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:24",
      "text": "对，power shell is a task automation and configure management framework. 然后他有一个consisting of a common line shell，and然后可以使用这个脚本语言来操纵点点net framework。所以它它可以理解为是有shell跟那个内核的区分的，虽然它还是不支持你换成其他的shell。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:50",
      "text": "仅此一家别无分店。",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:52",
      "text": "没错。好吧，然后上一期我们其实应该给出一个链接，叫TTYD miss five。这个链接我们会贴在这个show note里面，然后它它非常详细的介绍了，从好像也不是特别详细，但是他介绍了从60年代的讨论一下股。对，从这个teletype一直到今天所有的terminal similar or的一些共同的特性。比如说它他告诉你怎样才能，比如说你有一个80乘40的窗口，然后你通过输入指定TTY的一些特征，可以让这个窗口变成比如说80乘20。然后你会发现在这个窗户里面开始的所有的CUI的程序，比如说vim它就会只占这个窗口的一半大小。",
      "speaker": "发言人1"
    },
    {
      "time": "00:30:46",
      "text": "然后他介绍了什么是这个嗯终端仿真器的raw mode，就是原始模式。它它不再是因为非原始模式之下，这个终端仿真器会提供一些line editing功能，就是比如说前进也行，翻译字符前进光标之类的这些功能只会在这个line editing模式之下提供。然后如果你进入这个原生模式，燃油模式的话，就这些东西都没有了。然后一些比如说全屏的editor，e max，VI全都是在这个原生模式下进行控制这个光标的全面屏移动，还是蛮有意思的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:29",
      "text": "如果你有一有心去做，比如说我也不知道nail mac的那个naf，sorry nail vm的开发的话，可以去看一看。对。所以我们这一期还要介绍一下，比较知名的中原防震器。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:55",
      "text": "你用的哪个？",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:57",
      "text": "我在家里面肯定是就是在反正在外mac上面我觉得别无第二家。基本上90%的人都在用items OK。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:07",
      "text": "对我也在用item 2。对，准确的说是一版。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:10",
      "text": "items 2。对，第二版这个是一个功能非常饱满的terminal m im然后oyston本身带一个terminal f对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:22",
      "text": "对它有一个自带的终端。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:25",
      "text": "中文叫什么仿真器？不，它叫终端，就叫终端。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:29",
      "text": "好像就叫终端。对它就叫终端的点APP。对，在中文版里面应该是这样写的，英文版叫terminal APP。然后他那个其实也还蛮好用的，就是在这些自带原生的这些终端仿真器里面，他那个还算不错的。不过他那个比较坑的在于我一直没搞清他那个分屏有什么用。就是他们有个split window吗？不是split什么来着？等一下terminal.",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:57",
      "text": "支持split window。真的，它有一个叫split pain.",
      "speaker": "发言人1"
    },
    {
      "time": "00:33:01",
      "text": "就是它把一个分板分板对。但是这个分板很奇怪的一点就是说是同一个窗口，但你可以看它不同的部位。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:12",
      "text": "那可能就是让人去追溯前面发生了什么来着。",
      "speaker": "发言人1"
    },
    {
      "time": "00:33:16",
      "text": "就有可能我想出来唯一的一个用途就是说比如说你这个历史了一堆东西，然后你其实你只要他，你要看他前面的一个东西，然后你下面要照着打，或者是要有一个什么什么文件的名字或者目录，你要照着去进入，对吧？OK你得如果你要是你如果你记不住的话，如果那个比较长的话，你得翻来翻去，打完再翻上去，打完再翻上去。对，然后当然你可以把它分开之后，你看显示同一个屏幕，你可以在就比如说把上部的那个滚到前面去，然后下面的还在下面打，因为它整个这个过程是一个类似于卷轴的模式。我就想能只能想出这么一个应用，但是感觉很鸡肋，就没有什么用处，特别是你用了那个叫什么用的那个t max这种multiplex之后，这个东西就完全废掉了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:08",
      "text": "但t max毕竟是最近几年才出来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:12",
      "text": "对我就说有这么一个东西，然后他那个也比较囧，在于他好像只能上下分，不能左右分。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:19",
      "text": "对，他们第一默认是就直接把它上下分成两半。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:24",
      "text": "对，所以就不知道他们这个怎么想的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:28",
      "text": "我觉得可能苹果在做这个时候也没有想过这个东西会变这么重要。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:35",
      "text": "他没觉得这个是一个常用的应用，对吧？我估计也是这东西肯定就是那种一个人写完之后也不就不不管，我也不怎么维护了。你看他这么多年升级也没什么变化，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:47",
      "text": "而且你看90%的卖用户，只有在非常极端。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:52",
      "text": "的情况下。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:54",
      "text": "才会去按照网上的教程打开terminal，然后输入一些他根本不知道是什么意思的这个命令，来完成一些他不想要的功能。当然这种情况现在是越来越普遍了。我觉得经常有一些功能让你恨不得我靠这个功能怎么可以做默认值，我一定要把它关掉，然后又找不到在哪关。最后网上一搜发现只能在这个terminal里面关，还挺讨厌的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:20",
      "text": "我们都用这个替代版，就是item 2。这个的一大好处在于它可以把窗口，它这个不叫pen，它叫split window，应该是一会儿没接。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:35",
      "text": "好像还是叫派。反正它在tab里面支持有很多也。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:40",
      "text": "它也叫也叫spray。但是它这个就不一样，比如说他把一个窗口你分成两个之后，它两边是左右是各独立的独自的一个share就是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:49",
      "text": "完全新的是一个新的题材。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:52",
      "text": "对，就没有任何关系，这样的话就比较适合。比如说因为你屏幕一般是一个长方形的东西，你不可能说然后你一般打一行也不会超过一整屏，所以一般会把视频分成左右两两半来打。如果你这个窗口是全屏的情况下，所以它这个东西就比较好用。而且它还支持除了左右split，就是左右钗成左右还是拆成上下。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:14",
      "text": "对你还可以把这个屏整个屏幕分成一个田字形，如果你基本上这就是team max能team max能做的东西它都能做。然后每一个分开的匹配是一个单独的TTY。",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:28",
      "text": "对，而且它还有个很暗黑的，应该是最近几个版本加加的一个新功能，就是它可以跟那个t max深度整合，它分这几个pain，它就等于是t max里面的，t max里面这个应该叫window，是吧？还是叫什么来？好像也叫KOK。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:44",
      "text": "我记得有个命令叫kill pain，然后是配音的I最主要是一个问题就是说。",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:50",
      "text": "因为t max里面它是一个CU本来它是一个CUI的一个程序，它是一个字符界面的，然后他那个就是两个pain。这个pain中文叫什么？一定要。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:03",
      "text": "查一下版，就是平板的意思。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:08",
      "text": "我觉得窗格OK方块，方格就是把一个简单的把一个窗口分成几个小小块，来用这么一个小格子，它的那个界限它是有一个字符来构成的。这样的话有一个很不爽的一个原因，就是在图形界面太占地方，太太对，太浪费空间了。那就相当就显示一个总宽，大概就是100一两百个字符。然后你还要牺牲掉一个字符位来给它占占那个叫什么，在那个分隔线就觉得很不就觉得很不划算。然后它如果你用这个item 2的这个t max的整合的话，它就变成一根竖线，就只占一两个像素了，这感觉还挺好的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:48",
      "text": "没错。但是如果你是4K显示器，然后全屏工作的话，那用天把C线摆上，至少我个人是很少有这功能。OK因为我习惯了那个t max快捷键，就是跟那个DV一样是分段式的。你要先按一个前缀键，然后再按一个命令。然后如果你要在你要使用item 2的那一些快捷键的话，那就是什么command括号。对，来来切换而且阔，而且我印象没错，印象里没错的话，那个can加方括号的切换的方向跟我的希望他去的方向正好是反的，就是我我command左括号希望他去下一上一个pain，他会去下一个配。如果没记错的话，就应该如果你有对你你开四个配音，然后按comment左括号，你会发现那个转的方向跟你的想象的方向好像是不一样。但我也很久没用了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:51",
      "text": "所以对它跟它那个旋转的方式，跟你分屏的顺序有关系，这个就比较它比较坑爹的一个地方。对，因为它会有一个它是一个树状的一个结构。对，所以你跟你怎么切那个，先切哪个再切哪个是有关系的。就是说你看的是一个田字形结构，它其实并不是一个这四个配它并不是在同一个hierarch就是对层级上面的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:16",
      "text": "这个可以，然后t max里面就会有点疑惑，因为就是问题，因为t max里面切换配是用方向就是HJKL切换的。可以。对，然后这样就没有那个只你只要指定一个绝对方向就可以了，而不是这个先先而不是根据先后顺序来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:37",
      "text": "哼对，有意思。然后那个item还有一个也是最新版，里面还是再加一个一个挺暗黑的功能，叫做这叫什么来着？叫做hot key window OK你有用过吗？这个就是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:54",
      "text": "按一个键，它就会drop down，从那个全局的屏幕上面drop down下来一个。对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:00",
      "text": "就有时候你要运行很快的运行几个东西，然后你就懒得去管窗口的话，去管理窗口的话，这个是一个也挺非常好用的功能。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:09",
      "text": "这个其实是linux上面的一些terminal unit先弄出来的对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:15",
      "text": "然后那个action抄过来的对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:17",
      "text": "没错，还是挺有用的，但我是没用过。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:21",
      "text": "我还蛮常用这个功能。有时候差异OK很快。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:24",
      "text": "那我的我的那个terminal就是一直跑着。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:27",
      "text": "然后一直从type过去，一直都是全屏。好吧，OK, 所以mac上面大致上就要要不就是用这个系统自带的，要么就是用这个item to。还有别的吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:42",
      "text": "还其实还有一些非常古早的terminal新闻。比如说一个比如说一个叫z turn的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:49",
      "text": "就现在已经没有人用了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:51",
      "text": "对，可能两三年前还更新过。它是而且它是从OS ten之前就有的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:00",
      "text": "如果macos s一就有了。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:04",
      "text": "可能是从OS7开始就有。如果听众们对mac OS一的历史不是很了解的话，OS1跟OS nine是完全没有关系的。OS其实是一个叫做next step的操作，被换了商标然后装在mac上面跑。而在OS一之前的OSN、OS、OS87这些全都是一个类似于windows 95的这么一个操作系统。这是一个单任务的，是一个委多任务的操作的。哼不对，证书也不对。那个正确的term是什么来着？非抢占式多任务是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:46",
      "text": "叫proof non primitive。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:52",
      "text": "就是a .",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:52",
      "text": "prime就是抢占式非抢占式。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:56",
      "text": "CoOperative就是协作是多perty没错，协作是多，就是你一个程序在跑到一半的时候，如果你必须不停的去看有没有人需要，你停下来。对，如果你不愿意停下来的话，那整个系统是可以被你带着一一起一一起卡死的对，这是这么一个事。而这个操作系统上面，因为它根本就不是unix它所以它理所当然的没有terminal，或者没有这个terminal emulate这种东西。哼因为你没有什么，它就它没有一个东西是可以称之为内核。哼然后你要在上面写程序的话，那你也你也不会从这个控制台的程序开始写。你是直接在一个比如说什么coal oria，或者是苹果自己的那个卖很贵的一个开发工具，叫什么我忘了。Anyway，反正你需要再用一套图形化的开发工具来学编程，而不是在一个控制台里面去。然后那个时代你如果想要做一些比如说telnet或者是用什么拨号上网下文件，BBS这种东西，那你必须使用z term这种真正的终端仿真器。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:15",
      "text": "OK对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:17",
      "text": "还是但现在已经没有人用了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:19",
      "text": "我相信我是你念这个V的时候特别好玩。为什么特别像贼OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:28",
      "text": "贼头贼头猜猜，Z的变法在英语里和美语里是不一样的，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:38",
      "text": "对，很不一样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:40",
      "text": "英语是什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:41",
      "text": "That应该that对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:44",
      "text": "然后美语是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:46",
      "text": "ZZ对，OK就是有个口音差别还是蛮大。其实终端模拟器，终端仿真器老是改不过来，终端仿仿真器在linux上面其实挺泛滥的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:04",
      "text": "对，在unix下面的终端仿真器简直是百花齐放。因为它是怎么说呢？是所有这些unix下面的唯一一个最最必不可少不可或缺的东西。就不管你是使用哪种linux，你无论如何至少要用到终端，所以终端仿真器也是特别的百花齐放。比如说最原始的就是x windows上面的那个x term。哼如果你装一个linux系统，这只装它的那个base system，不装GUI的话，然后你一个包往上装。当你装好XORG的时候，基本上你就会有什么s clock、XI和x term。这是这是三个基本上就可以验证window x note是不是正常装好的程序。对，X2x term的这个功能也非常简单。首先它不支持two type，他的所有字都是点阵字体。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:09",
      "text": "OK不，这跟他的那个图形环境有关系吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:13",
      "text": "没错，就x windows其实默认什么也不行，就是只能显示点和线什么的。原始的这个叫什么图形界面。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:26",
      "text": "对，不知道。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:28",
      "text": "然后XM你只要稍微有一点追求就不会使用x term，只能这么说了。对，然后在X超越x term，但是只依赖x notes的东西，基本上就是什么最知名的一个叫做RXVT。RXVT好搞不好是来自于virtual terminal.",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:54",
      "text": "没有那个，对，应该是CVT。对，应该是RR什么。这个我是当年用的最迷糊的，因为这个名字完全没法记对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:05",
      "text": "对，这个是需要很多次死记硬背才可以记下来的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:11",
      "text": "你完全不明白它它到底是什么意思，然后你就用。而且它还有好有几个变种，一个什么URXVT跟他有什么关系，我一直没搞明白。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:21",
      "text": "OKURXVT的全的正确名称应该是RXVT unicode.",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:27",
      "text": "这样就明白他是是干什么用的。就支持unique的这个没错。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:31",
      "text": "早期的x term其实就只支持真正的terminal的那个叫什么VT20，是一个我具体是干嘛的我也不知道，我毕竟只是80年代出生的人，不是60年出生。如果我早出生20年，可能会知道VT200到底是什么东西。但现在我只能猜测VT200就是一个终端机的型号OK然后这个终端机型号的这个终端机的一些电气特性和不是电气特性，是一些数据特性被被仿真出来的。也就是说它其实是一种协议OK然后这个RXVT就模仿了VT102，应该是对，然后X模拟的是VT220，那到底是什么意思我也不知道。",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:25",
      "text": "所以这是属于上古时期的物留下来的神物。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:31",
      "text": "对relic。",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:35",
      "text": "然后要说刚才那那几个都其实并不好用，而且配置也很麻烦。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:42",
      "text": "我也不知道RURURXVT还是有一对拥趸的，尤其是你在使用一些比较bar born的窗口管理器的时候，就是你不你不是如果你不喜欢给到我们或者是KT1，然后你要用一些比较原始的那个或者比较简单的窗口管理器的话，UXUXVT还是挺受欢迎。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:06",
      "text": "因为它比较轻量级。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:08",
      "text": "对吧？对它轻量级，它只是纯C写的，然后它又支持unique，那基本上多了你也不需要对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:16",
      "text": "这两个其实都不算太常用，因为这就没有什么主流的X发行版，把它们当做默认的终端模拟器，终端仿真器。所以我们目前见得最多的两个反而是什么？一个是像我N2就是debian这一系列发布的那个对吧？是怎么怎么念的。然后一个是KDE，他也有驾照，他们叫council，但是不是C开头，是K开头的那个council。对，这两个东西，这两个就怎么说呢？我用的那个移动那个那个gone怎么念这个东西？",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:58",
      "text": "Gone我是念gone glom。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:00",
      "text": "对，terminal这个就比较用的比较多，中规中矩，就没有什么特别出彩的特性，但是就长得很正常。对，所以我们其实KDE的环境我都没怎么用过，不过你我也很少用OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:15",
      "text": "所以KDE太花了。我觉得。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:17",
      "text": "这个是当年windows .",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:20",
      "text": "95时代XP时代的那种审美风格，一直流传到现在。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:24",
      "text": "也是我当时他们还是很潮的，他们那个KT当时因为当时是Michael s刚出来，不有那个水滴那种水晶透明的效果。对，然后那个那个KD的桌面就说这个不错，我们把它发扬光大的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:42",
      "text": "全抄袭花花绿绿。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:44",
      "text": "的这种感觉。你开了一你在一个那感觉像什么呢？感觉像是在一个灯光明亮的糖果店的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:53",
      "text": "没错，对，但是又很怎么说呢？",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:56",
      "text": "有点很三俗pitch。对，我们要被喷了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:02",
      "text": "没事儿，这K第一德国人写的怕什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:09",
      "text": "也漂亮。所以你在公司还用这个linux桌面，对吧？你用的那个终端仿真器是什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:18",
      "text": "我现在用的是x face terminal.",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:20",
      "text": "就是一个O.",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:21",
      "text": "K唯一的它它依赖的是GDK，而不是那。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:26",
      "text": "就没有那么重，就稍微轻一点点，其实也不算特别轻。就是说在不损失功能和这个美观性情况之下，它已经做的比较小巧了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:37",
      "text": "对，而且它毕竟是x face自带的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:39",
      "text": "对对对，但我在以前我上学的时候，学校不是有那种叫做lab net，就是实验室的那种机房网络。他因为新机器性能不是太好。我也跑的那个X叫那叫什么x face XX帮C一对X5邦图吧，应该是这个K发现曙光图，曙光图是这么念吗？属邦图吗？是徐不是徐帮主吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:01",
      "text": "主帮土。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:03",
      "text": "然后里面也是用那个x face terminal，这个比较小巧。然后我感觉他就其实在这么多的linux发行版里面，就是从界面风格来讲，我还觉得x face的这套还比较挺清新的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:18",
      "text": "对，然后就是mint或者是LXD都还比较淡xd XC.",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:25",
      "text": "我说不上来，总觉得他的那个审美哪里有点奇怪。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:29",
      "text": "就比较幼稚。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:30",
      "text": "稍微有点对对对，但就不像x face那种比较你看这是至少是一个正儿八经的设计师做出来的产品。还有其实里面还有一些很比相对来说也没有一个发行版自带，但是用户也蛮多的，不算特别小众的这种终端仿真器。然后有几个比较知名的，像是这个terminator对terminal.",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:52",
      "text": "实际上是一个从gnome terminal改过来的一个比较功能强大的terminal。它它最知名的一点其实也就是把那个开很多pain，然后可以把这些pain排成一个grade，然后grade形状也是可以排弄得乱七八糟的，什么上面两个，中间三个，下面四个这种。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:16",
      "text": "对，这个x face terminal支持这种多种方格配的吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:22",
      "text": "我用的这个版本是不支持。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:24",
      "text": "我印象中好像没有版本支持，跟那个XX .",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:28",
      "text": "face x face的其实很多东西大部分东西都很简单，就只有最基本的功能。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:33",
      "text": "对对对，就是各种能就能凑合用，但是这让人用的很不爽。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:39",
      "text": "对，但反正t mox，t max无所谓了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:45",
      "text": "还有像这个叫什么quack quick我也不知道怎么念。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:50",
      "text": "但OK对，这就是我说那个可能应该是用python写的terminal，有意思。然后他跟也是tie的这怎么样？",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:03",
      "text": "Tiled的，那个符号就是一一数字一左边那个对波拉哈，然后这。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:09",
      "text": "两个也是两个比较受欢迎的在各种上面的替代品。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:16",
      "text": "OK其实我一直在用电视都有一个，但这跟其实你大部分的事情都是一样。就是同一一个你要完成同一个功能的话，它有至少大家。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:29",
      "text": "都选择是吧？对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:31",
      "text": "至少有一两打了这种可以选择。但是男友的没有一个特别好的，就是用了这么多之后，你觉得哪个特别适合你？",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:40",
      "text": "在这种情况下我就会去google上搜the best terminal illness or and linux.",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:46",
      "text": "然后发现是一个three.",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:48",
      "text": "然后是什么？然后是给出一个top ten list，然后发现里面每个都不好用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:55",
      "text": "对，这个就比较惨。我不知道为什么，可能是因为程序员用那个终端的场合比较多哈，大家都想去自己掺和一把。但是我觉得做这种东西还是需要一点什么来着，你点这个积累和智慧，就不是所有的人写出来东西都好使了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:16",
      "text": "最最重要的是忍耐力。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:21",
      "text": "忍住不要写一不是不要自己写一个吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:23",
      "text": "因为linux的哲学就是这样。你你你用着不爽，那你改，你你你那就。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:30",
      "text": "fox世界了是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:32",
      "text": "对，你自己你要不爽，你自己多少，我又没有跟你收钱。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:36",
      "text": "对吧？然后我免费。",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:37",
      "text": "弄出来给你用，你还你还你要又要用又要婊，何必？有本事你自己写一个，对吧？你在其他平台上就哼你在其他平台上就很难这样去去怼你的用户。但是linux就是一个你默认的那个你默认你的用户同时也是一个工程师。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:58",
      "text": "对，就像我们上一次那个标题的那本书。In the beginning there was common line，那个是怎么说呢？其实是一个关于操作系统的，一部传记体的散文，就介绍了这个操作系统的源流。其中里面他他把这个车和操作系统相提并论。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:24",
      "text": "不是，或者说他做了一个比喻，我觉得还是挺有意思的。就是他说windows的的车其实就是一堆性能一般，但是服务很好，然后看起来还OK就中庸一堆车，然后买的人也最多。大部分人如果需要买车的话，那么不动脑子就直接去windows的店买辆车开走。然后这个苹果的车就是一堆看起来非常漂亮，然后让人觉得很前卫很帅，但是封的很死。你根本不知道这些车是怎么运作的，然后也很快，然后也很贵对吧？就那些一些比较有钱的人就直接去苹果店，开一台苹果车走。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:08",
      "text": "而这个linux是什么呢？Linux是一个坦克厂，坦克维修厂前面排着一辆又一辆的坦克。然后他里面也没有人来招呼你这立这个牌子，说免费开走。然后你可以对，你可以免费开一辆坦克走。但是如果他半路抛锚了，你就得自己下来把它修好。大概是这种感觉，然后为什么为什么这个时候。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:41",
      "text": "脑子里面出现是二战时期的德国？好想起来看看那个电影坦克大战OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:48",
      "text": "这个其实让我想到我第一次读到这段文字的时候，脑子里面想到的是那个eve，就是中文叫星战前。星战前你的那个多人在线网游，就是在这个网游里面，你开一辆开自己的宇宙飞船，然后去采矿，去去做生意，去搞运输，去杀人越货，去哼打仗什么的。然后这里面有四个派系，四个派系的那个船的风格完全不一样。一个其中一个就是非常漂亮，非常流线型。然后我觉得苹果就很像这个牌子，那个A开头叫什么网？然后windows则是一个比较中规中矩的，就是那种司空见惯的想象中的未来人类的飞船的样子。然后还有一个派系，他们的飞船就感觉就像一堆破烂儿拼起来的，然后那个感觉就是linux社区。对，居然还能飞，不对称，然后大量的平板，大量的什么，你就觉得那个那个船都是用胶布粘起来，然后还是一样跑。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:01",
      "text": "好，扯远了，哈拉回来。对就刚才讲到那个那个像t max也好，还有刚才讲的各种终端仿真器里面都提到这个分窗。不是分就是一个窗口分成多个小板块来用的这么一个场景。然后让我想起之前你在这个听众群里面有好像是有谁问过你一个问题，说你怎么用这个terminal，怎么放到这个I3里面去的。因为这其实照逻辑来看，如果你要分把一个创一个屏幕的空间分割成多个的话，这就是那个window manager要做的事儿。就是可以在S3里面，哪怕你用这个多个就不需要支持这个pain，就是sleep pin这种的中终端仿真器也是可以的，你甚至连tap都不需要，对吧？你需要的只是通过I三来管理那个窗口就好了。所以为什么你用I3的时候还是要用这个再开多个tab，然后那个tab里面再开t max。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:55",
      "text": "我觉得是这样的，就是可以把它视为窗口和管理器是一个逻辑层级。然后terminal emulator是一个逻辑层级，t max又是一个逻辑层。然后三个逻辑层级所使用的快捷键是不一样的。比如说我要在三个屏幕之间切换的话，我是用command加123，哼这是一套快捷键。第二个快捷键是我如果在某一个terminal emulate里面要在各个tab之间切换，但是control加page down，page up.",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:28",
      "text": "哼这是第二套快捷键。第三套快捷键是在t max里面，我用我的前缀是CTRL加Q但是t max默认的应该是control加B，然后比如说control加Q加l control加Q然后L是切换到右边的那个pay里面。这样就是在在这个肌肉记忆和思维逻辑层面，都你都把这个去三个逻辑层级分的很清楚，对吧？因为在我在切换窗口，有时候我切换的是本地的计算机或者是远程的计算机。而在的终端仿真器里面切换tab的时候，我是在切换我SSH到哪一个机器上面，或者是一比如说我这个tab里面做的是测试，另一个tab里面做的开发对吧？然后在t max里面我做的则是在一个terminal内部的不同的工具之间的切换。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:33",
      "text": "哼这里可能有有两个层级，一个是说首先你不可能把远端的窗口挪到本地来管理，除非你要用XX window那个系统。但是现在应该没有什么人在用了所以这个我们的理解还是有。对，还是有吗？OK我没见到过的对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:52",
      "text": "还是有啊。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:53",
      "text": "就是你你能就是你要区分远端的不同程序的输入焦点之间的切换和本地窗口的切换。这个我可以理解。但是你本地的这个终端模拟器里面的多个tab，你为什么不用这个I3的多窗口这种模式来管理呢？",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:10",
      "text": "为什么要用tab而不用I3的windows manager？",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:14",
      "text": "没错，因为其实tape是没有type的快捷键的话，他没有那么灵活。你。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:19",
      "text": "不能说从洁癖的角度讲，我希望我的本地的机器上只跑一个terminal，就单一进程对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:32",
      "text": "然后就开多个tape是难道你看多个窗口也是单一进程吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:38",
      "text": "你确定吗？我觉得每次说我们在开会时。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:44",
      "text": "我就会多多一个进程。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:46",
      "text": "多一个会应该是这样的，会多一个新的terminal，simple出来。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:52",
      "text": "email出来的。Ok那多一个type不也是吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:58",
      "text": "多一个type是在同一个里面多一个进程。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:02",
      "text": "那这个只是UI的表现层，但并不一定实际上是这样子的。OK好吧，比如说最简单一个例子，现在像现在这个chrome也好，sfar也好，它也是一个多标签页的一个窗一个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:13",
      "text": "而且你可以把一标签页拖出来形成一个新窗口。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:15",
      "text": "对吧？对它都其实每个标签页那你你拖出来形成新的窗口都不一样。其实每个标签它就是独立的一个进程，这两者之间并没有逻辑。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:25",
      "text": "不不不，chrome肯定是多进程的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:27",
      "text": "我知道，但是你像那个surfer，以前它有标签，有标签也可以拖出来，这个时候它并不是这个标签，也并不是单独的一个进程了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:35",
      "text": "我觉得那可能还是从心理上，是从觉得每一个窗口应该是一个就一定要有个归属感。但是一个是对应每一个窗口是对应一个单一的APP .",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:45",
      "text": "OK OK明白，所以你没有两个网页放到并排来使用的，对比的情况也有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:54",
      "text": "但是这种时候是会非常少见的。我觉得这种时候宁可开一个新的那个还是要看场景，应该说还是要看场景。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:04",
      "text": "对我就比较好奇为什么是这种结果。但是如果这样的话，会不会有一个就刚才讲的就都是用那个快捷键来控制不同层级的，但是你的那个逻辑上是分成分了三四层了，三窗口层、type层和就T3层。对，但你快捷键的并是并不分层的，你会不会觉得这个快捷键的要考虑潜在的冲突的情况太多了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:28",
      "text": "快键为什么不是分层？我刚才不是说了三层吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:30",
      "text": "Command加对他都是command的键。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:34",
      "text": "不不不，command加123.",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:36",
      "text": "然后切换这个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:37",
      "text": "切换tab是用control加page up.",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:40",
      "text": "page down. 对，没错，都是用control这个command control。Ok但是你还要在在t max里面。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:47",
      "text": "还有一个t max里面，则是t max的这个台阶机制和其他两者是不一样的。它是一个二段式的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:56",
      "text": "所以对完了你还里面之后，但你还想你在提什么？你还跑vim吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:05",
      "text": "Vim的为什么用不到control加Q？",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:09",
      "text": "那我就说那你都会用到come back，come on, come one, 会不会用到web里面，好像用不到。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:14",
      "text": "我也用过。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:15",
      "text": "但不管怎么说，就是说你在比如说在这里面自定义快捷键的时候，或者你在自定义其它快捷键的时候，会遇到说有这么一个因为成绩太多，你你按你按一个快捷键会出现在两个地方矛盾的情况。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:30",
      "text": "唯一的问题就是那个默认的control加B和默认control加B是给我造成的问题。因为control加B在vim里面有用。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:43",
      "text": "所以你选一个control QQ避开了这个wam的，就一个没用的键就可以了是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:51",
      "text": "对我我以前用过control加A但是后来我发现control a其实也是被使用的，就是给那个当前的字符加一，虽然不知道它具体有什么用，我还是把它选成了Q对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:04",
      "text": "所以还是有这个问题的。然后对这个问题可能在I3里面，就是linux里面还好。因为nex里面绝大部分的那个就是故意，图形界面那一层，它是不用这个我们叫meta键的。对，因为它不能保证你的键盘上一定有那个键，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:23",
      "text": "那这只能说这个键的代号叫什么mollify modifier three还modifier。",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:30",
      "text": "对，就比如说你可以把单独把那个键用于这个窗口管理。当然这个也比较巧，因为在很多windows键盘上，那个键叫win键，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:40",
      "text": "对，这是一个比较取巧的方法。",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:42",
      "text": "对窗口的键用来管理这个S3的窗口设置，它比如说改变布局，改变切换这个focus，这都没有问题。但其实你发现在mac上面就是command键、alt键和control键都是以相当大的比例在实际使用中的。就经常会发现你想的一个快餐组合在你开的某一个应用里面就不幸被用过了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:06",
      "text": "这样就很就而且max最让人讨厌的一点就是它的全它的那个快捷键很多都是全局的。你这个APP里面使用这个快捷键到另外一个APP里面就完全用不了了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:18",
      "text": "就会有冲突吗？是对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:20",
      "text": "OK，这个我还没有留意到。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:22",
      "text": "当然我就是有点担心，刚才你说像那种情况嵌套那么多层，感觉这个光是想按哪个快捷键，在哪一层按都已经快炸。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:32",
      "text": "我觉得三层已经是我的极限了，再再拖一层所以。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:36",
      "text": "你没有在。怎么说来着？就本机不是或者这么说，你有试过从连到远端的一个t max之后，再从那个跳板机连到另外一台机器再再开一个t max吗？有这样的话你就会发现两个t max那个control q冲突了，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:55",
      "text": "对，此时就要。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:57",
      "text": "全要穿透。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:00",
      "text": "对，此时就需要先，因为此时起起不起，此时起作用的应该是外层的control Q。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:09",
      "text": "对，然后你再按一下就可以穿透到下面那一层了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:14",
      "text": "真的吗？是这样吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:15",
      "text": "对，就是你你按第一次control q的时候是给外层。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:19",
      "text": "我靠，我一直不知道，我一直都是很蠢的control q然后C新建一个窗口，然后把本地的这个control q改成别的，然后real conflict，然后远程就可以用。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:32",
      "text": "不对，对，这个是更好的，因为不然的话你每次按control都要按两次，也很累。Ok对吧？就是我所以我所以我很关心刚才你说那么多层怎么去管理的问题。OK所以我有时候我就在想，是不是说反而把这些都就不要搞那么两三层、334层这种就直接拉平到一层里面，赖三的管理会不会好好一些？因为I3其实就是这么一个flat的一个东西了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:59",
      "text": "对吧？对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:01",
      "text": "也是个办法，仅供一个想法，不一定。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:05",
      "text": "你可以去试试。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:06",
      "text": "OK天天正事儿没干，在那里各自想我到底是用三层的还是两层的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:12",
      "text": "有时候觉得自己在折腾工具上面花的时间真是太多了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:17",
      "text": "你那个什么剑很锋利，没砍死几个人工欲。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:21",
      "text": "工欲善其事必先利其器，结果我现在这个气已经立的差不多了，这是一点没做刀。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:29",
      "text": "刀头快被你磨光了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:31",
      "text": "对我已经变成了一个刀具鉴赏家，没杀几个人。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:38",
      "text": "刚刚我们扯了这个mac SN上和这个media上面的终端仿真器，windows上面有什么东西吗？现在算power share算是一个shell，它还需要一个东西去搞的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:51",
      "text": "对，其实这需要区分场景，就是你要在windows上面做units相关的东西吗？如果需要的话，那你可能会需要一些比较。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:02",
      "text": "有一个场景我至少是比较熟悉，就是很多比如说做这个PHP的开发者，他是在用windows的对吧？哼然后他但是他部署的时候是要部署到这个linux系统上面去的。所以他一定是需要一个比如常用的叫做普提，或者一个叫什么什么term来着。What有一个windows上面连这个就是连这个远端的，就是SSH到远端的，然后能够他带这个终端仿真器功能的工具。忘了叫什么term来的，a term.",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:38",
      "text": "我我还我我还只知道菩提这一个东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:41",
      "text": "不，菩提不好用，菩提其实很难用的。好，就是有一些很奇怪的原因。他的那个他那个窗口跟那个叫做叫什么命令行，是在命令行吗？命令行那个应用的窗口是一样的。他他很奇怪，比如说他那个字体大小这个对吧，就只能选择那几种。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:03",
      "text": "这倒是对我觉得windows的这个terminal的最讨厌的一点就是字体只有三四种，选择可能fix .",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:13",
      "text": "this。对，还有什么korea korea对吧？Councillors应该还有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:22",
      "text": "councillors后来有的。对对对，然后就是默认的那个，对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:26",
      "text": "默认字体叫什么fixes？",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:29",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:29",
      "text": "fixes对，然后他们是有一个叫什么term的一个应用，他们也经常，我看他们有时候会用。然后你还记得当年跑我们玩那个BBS的时候，也有人用那个东西去登BBS吗？就telnet.",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:44",
      "text": "登BBS不是用telnet吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:47",
      "text": "Telnet也不好用，也跟那个putty和命令行那个那个窗口一样的毛病。就是那个字体就窓口管大小，它你是不能改它大小的，它都是80乘以20是定死了的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:58",
      "text": "OK对它。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:59",
      "text": "有一些这种图形故意的应用。然后它是可以去修改字体大小，可以调节窗口大小的，就相对来说好用一些。应该proc term，应该是叫这个东西。我想想我sir.",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:14",
      "text": "OK这个我听过，ster搞不好我还用过。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:20",
      "text": "对，这个应该是有很多人就是跑BBS的时候用过的，但有有一些是类似这种的软件。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:25",
      "text": "System是一个与f term功能相仿的通用仿真终端软件，是中国大陆地区发展的第一个在BBS上支持鼠标操作的BBS软件。对对对，这是一个很这是一个国产软件。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:38",
      "text": "对，什么是华中大学？当时那个人在华中理工华中理工大学研究生。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:45",
      "text": "97年的时候OK有意思。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:50",
      "text": "对，这个还是有些什么暴露年龄的历史。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:53",
      "text": "我还记得他的。好，各位可以看到图标，我想起来这个东西我还真的用过，好古早的记忆。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:01",
      "text": "对，所以windows上面其实我们也不太熟到底有什么终端，某仿真器对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:07",
      "text": "对，至少搜来一个叫做council 2的东西，好像口碑不错，支持什么其实就是clear type。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:15",
      "text": "对对对，这个很重要，这个用户体验很重要。就好像我们在这个item就怎么来的，就刚你说那个铺贴之余，这个windows就相当于这个什么RXVT，至于0 ux感觉一样，就非常古早的那种东西没错。",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:36",
      "text": "对，然后还如果但如果你要在windows上面装一个名minimum mean，叫什么mean？SYS minis和min GW的关系。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:51",
      "text": "是什么C？",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:53",
      "text": "对对对，sign和G天哪。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:59",
      "text": "迷W.",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:00",
      "text": "没错。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:02",
      "text": "我不知道怎么念。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:02",
      "text": "反正是这么写的。Win w.",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:04",
      "text": "我也不是0W。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:06",
      "text": "对，他的这个意思就是minimal gu for linux和windows。对，而且两者其实不一样的东西就是c win是一个linux跑在windows上面有点像是不对。寄生虫。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:25",
      "text": "segway应该是一个是一个gu的user。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:32",
      "text": "对，是一个有点。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:33",
      "text": "windows的windows核对。而这个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:36",
      "text": "min GW则是一个开发原生程序的的node的套装。对，就是用这个min GW开发出来的程序是原生的windows的程序，而sign上面的东西则是能够在windows上面跑的poses程序。",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:01",
      "text": "好乱。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:02",
      "text": "如果没理解错的话。对对你你可能需要把我刚才说的这句话重听两遍才明白到底是什么意思。但对，大概就是这样OK。",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:13",
      "text": "所以我很好奇，真的现在还有人这么干吗？我觉得可能更好的方式是在windows上装虚拟机虚拟虚拟机，然后用一个什么什么term连进去，可能会好一点。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:28",
      "text": "还是取决于场景。我觉得但我也的确想不出来有什么应用场景会使用到mean GW或者是secret的。如果听各位听众有什么非常典型的用意，不妨告诉我们的。但是目前来看，好像我基本上接触到signin和min GW。就是在什么各种工具的这个兼容列表里面说什么，有一个bug在win基本会min GW里面会出现，然后已经把它废掉。然后除此之外再没有接触到活人在使用它的产品。但如果你有这个需求的话，基本上装了那个min GW之后，会有个叫做mini TTY的东西，然后它就是一个原生的windows下面的终端防电器。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:22",
      "text": "而且是跑这个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:24",
      "text": "零跑shell专用的，基本上哼你没办法在他在他里面跑着跑一个dos command line。哼。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:37",
      "text": "刚才讲了主流的桌面系统上面的终端仿真器，我们现在看一下，现在不是移动很火，对吧？在这个移动设备上有什么方法可以去远程一个服务器的？",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:49",
      "text": "我用了很久了，是一个叫做ISSH的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:54",
      "text": "我也有我之前也有也也有用这个O.",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:57",
      "text": "K你觉得怎么样？觉得怎么说呢？就是有点丑，键盘太小了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:04",
      "text": "键盘反正那个没办法，你屏幕只有那么大，你这个你有啥法儿，但我觉得它不好看。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:10",
      "text": "我觉得在在手机上跑一个特别有音乐，这本身就是一个很奇葩的行为。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:16",
      "text": "但有时候救急，比如说你在外面这个服务器挂掉了，你要连上去看重启一下怎么办。对你就作为一个正常的运维，你不应该让这种事情发生，对吧？但是它总会发生的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:31",
      "text": "对，在在救火的时候的确可以这样干一干。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:35",
      "text": "哼我记得。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:36",
      "text": "有一次我在伦敦的时候，在车上面用一个蓝牙的mac的键盘连到手机上，然后就远程登录到服务器上去改什么东西，这个场景还历历在目。对我也试过，真的OK。但反过来，现在什么ipad pro之类的出来了，然后在一个大屏幕的IOS设备上面开一个，他们用了一下，好像还挺合乎情理的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:06",
      "text": "又找回了当年终端的真正的终端的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:09",
      "text": "对，而且比当年的终端要轻薄便携很多。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:14",
      "text": "对，这个还是挺有意思的。ISSH我有装过，但觉得它这个美观上可能稍微差一点。今天我要推荐另外一个是这个panic写的叫做prompt。他初一初二的prompt two.",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:30",
      "text": "这个好像我也买了，但是你买的是应用本身。对对对，因为本身很少用到这个功能。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:37",
      "text": "其实但是我觉得他那个还打开过挺好的，做的比较简单漂亮，很有那个x face terminal的感觉，很有x face terminal就是nex的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:50",
      "text": "OK不好意思，回头我也试一试。然后我在这里要推荐一个叫做server audit，就是审计的这个服务器审计服务器审计软件。对，虽然名字叫这个名字，但它的本质上只是一个SSSSH客户端加上一个terminal emulation。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:16",
      "text": "你还别说我刚才我在这个apple store里面搜这个SSH，现在好像还蛮多这种终端模仿真器了。之前很少了，基本上就那两款ISSH。刚才我讲那个prompt可以用，现在还有好几款在上面都有，还看起来截图还不错的样子。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:35",
      "text": "对，说明这个东西的用力还是非常广泛的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:38",
      "text": "而且救火的还是需要经常救火的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:41",
      "text": "没错。而且其实也从另外一个侧面反映了这个CLI其实是一个生生不息的东西。你知道早期的苹果的开发哲学是就是CLI是一个重要过时要扔进历史垃圾堆同的东西。所以在新的这个图形界面出来之后，基本上是不可能有什么terminal emilia这种东西出现在苹果肌上。但是现在我们有了OS ten，然后赫然发现除了浏览器，这个item r基本上是一个我一定会开的程序。就还挺就我的那个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:21",
      "text": "item 2已经是系统启动默认启动的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:25",
      "text": "对对对，我也是就是开一个chrome，然后开一个item 2，我还有可以有一个小的tip OK就是item 2在启动之后，它会给每一个panel，注意是每一个panel给一个environment variable.",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:45",
      "text": "那个那个环境变量。",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:47",
      "text": "对对对，你给会给一个环境变量，然后这个环境变量根据你的tab和panel是不一样的，然后你就可以在比如说你的ZHLRC里面写说如果当前的这个叫做应该是叫item session。如果当前的item session是比如说windows 0 tab 0 panel 0，那它就是第一个被启动。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:14",
      "text": "的对pain.",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:16",
      "text": "然后我可以在这个pain里面跑一个什么特定。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:19",
      "text": "的软件启动都软件都启动，这里面的命令好像都启动好了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:23",
      "text": "对我现在就是一上来开了item之后，如果我新开一个新的tab将会是W0T1，然后在这个里面我会开ipad。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:38",
      "text": "就是里面各种layout和这个里面的程序都启动好了，你开机起来就是默认跟你关机的时候是一样的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:46",
      "text": "对，这个基本上是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:48",
      "text": "太白黑了已经。是不是就开始t max到你们那个服务器上面的？",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:55",
      "text": "没有，我是这是家的电脑。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:58",
      "text": "OK.",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:59",
      "text": "算是一个小窍门。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:01",
      "text": "介绍给大家。对对对，这个不错，这个学习了可以有，大家可以试一下OK。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:06",
      "text": "Android上面有什么呢？",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:09",
      "text": "Android上面有你你用安卓吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:12",
      "text": "我不用，但是你不是用吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:14",
      "text": "我现在就是偶尔用一下，就是还没到那个程度。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:19",
      "text": "那你有装什么侧面的音乐类型吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:21",
      "text": "完全没有。对，没有，其实平时很少用的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:24",
      "text": "好吧，那就欢迎读各位用安卓的读者在听到。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:29",
      "text": "如果你用安卓也用那个terminal登陆到远程服务器救火的，你一定知道有什么是比较好使的。对你说安卓上会推荐给我们，会不会像那个那个link上面一样，有有大概百花齐放二三十种，肯定有。对OK。那么上期的这个补遗环节我们就先告一段落了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:55",
      "text": "算是本期的一个主题。本期其实没有什么主题，只是想要做一个follow up，然后聊聊新闻的。但是这一个follow up就做了一个多小时，也还不错。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:07",
      "text": "行，我们现在开始聊新闻。好，觉得就我的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:11",
      "text": "新闻环节。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:12",
      "text": "对开插播新闻联播进那个开场曲自己脑补一下。哼你说那个那个曲子有你有版权吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:23",
      "text": "肯定有啊。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:23",
      "text": "好吧，有版权就算了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:25",
      "text": "没版权有没有？60年没有。中国的版权追溯是多少年。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:29",
      "text": "应该也是一样的。但你不知道那个人是挂没挂，知道吧？这个版权持有者是谁？",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:34",
      "text": "对，没错，说的没错。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:36",
      "text": "这个很难讲。所以第一条新闻是什么？",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:42",
      "text": "第一条新闻是我们之前提到过的microsoft code，在上周正式开源了这个code可能。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:50",
      "text": "还是要解释一下，之前我们也讲过几次了，但是如果你没听，刚好没听到的话，code是微软基于github发布的。做的一款代码编辑器，对，electron做的一款代码编辑器。然后electron大概是一个什么呢？大概是用外部的一些技术，什么HTL、javascript CSS，来写这个客户端软件的一套黑莓科技。对，大概是这样。所以它扣的这开源了是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:22",
      "text": "对，全称应该叫做visual studio的对，它不是visual studio，但是它挂了一个visual studio名字，它只是一个编辑器而已。只不过这编辑器的功能非常强大，可以debug，可以有各种各样的黑功能。比如说你写一个你写一个CSS，你写一条CSS，然后把鼠标挪上去，他会再给出一个这个CSS会选择出一个什么样的元素出来的一个template。",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:54",
      "text": "OK如果你。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:55",
      "text": "比如说你写一个diff p important，然后他就会给你，然后把你鼠标挪上去，他就会给出一个p tag嵌套一个不deep tag嵌套一个p tag，然后这个p tag带一个importance class，诸如此类这样非常逆天的实用的、贴心的improvement。但是我还是没有在用的OK我也不知道，就是我打开它之后，基本上编辑一点什么东西，就CPU利用率就99%，然后风扇开始狂转，基本上没有例外的时候。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:38",
      "text": "到底是为什么呢？这个就跟什么electron本身没关系吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:44",
      "text": "应该就是因为这个，我觉得好像用item也是这个症状。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:49",
      "text": "对，所以我觉得这个本来就是叫什么来着？就这套技术本来就不是拿来这么玩的对吧？不是拿来做这个桌面应用用的。但是我们把它删号，把它拿来玩玩成这样了，我觉得是很奇怪的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:03",
      "text": "说也是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:04",
      "text": "不过说到这个，插一句，之前我见过一个人写过一个，你说这个算term吗？也不算了。就是他用网页做了一个能够list，就是登录远程桌面，然后里面显示那些东西还挺搞笑的。比如说我们在命令行面敲一个list，就是list这个命令LS这个命令的时候，它会列出一堆符号，表示文件名目录之类的什么，对吧？他会立刻出一堆icon来，可以点击。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:33",
      "text": "进去OK。就是如果你用访问的网站的话，你会有一个会会会遇到一个准CLI的界面是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:42",
      "text": "就是算是故意和这个CLI的结合。这还挺有意思的，但我忘了那个叫什么名字，当时我还装过，觉得还挺神奇的。好，插插个话，下一则新闻这个大新闻了，这个比较重要。Work press用世界上最好的语言PHP写的占据着世界上25%网站的这个CMS，就是内容管理系统。他们最近那边革命了，维新了，他们把那个管理界面用node，就是用javascript和这个node，就客户端服务器端用node重写了一遍，然后客户端是用react来。",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:27",
      "text": "实现的对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:29",
      "text": "请问PHP去哪儿了？PHP还是在保留着他们在API的那个层面，就是它这个只是一个管理界面，管理界面就是你你玩你用过那个20块钱电容，它其实也是一个网站。他可以去做，就比如说编管理，编辑帖子，装插件那些东西。然后他把这块部分用这个no no java的重写。然后服务端是用那个no GS跟那个客户端对接，然后那边再去调用它的核心部分的worry ss还是PHP提供这个API，就是这上文章管理数据库什么的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:06",
      "text": "等于他把PHP完全后台化了，就把PHP当成了一个API platform framework。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:13",
      "text": "他们发布的这发布这个消息的时候，是有有几篇博客文章还挺有意思的。有一篇讲他们为什么要这么做，但是我觉得很清楚的。他说先表扬，先就当然坚持，不能什么不能自黑？还是说了我们用这个世界上最好的语言PHP协议用了那么多年十几年对吧？然后也做了很多贡献，然后做了很多很复杂的功能。我们有几千上成千上万的contributor贡献代码的人，非常了不起巴拉巴拉。But但是这些都是什么都比较沉重的历史包袱了，阻碍我们拥抱新时代之类的说辞。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:52",
      "text": "然后说我们也就重写一遍，所以很多人就很着急，我们那怎么办？这世上最好的语言要被抛弃了吗？你怎么看这件事？",
      "speaker": "发言人2"
    },
    {
      "time": "01:28:04",
      "text": "不仅仅如此，因为PHP实际上是很多很多人的饭碗，sorry，wordpress实际上是很多很多人的方法。",
      "speaker": "发言人1"
    },
    {
      "time": "01:28:12",
      "text": "如果我没记错的话，type is beautiful就是贵贵司贵贵CTO的主要工作也是维护一个workers站点了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:28:21",
      "text": "虽然B站是非盈利的，但是我的这个虚拟的饭碗也还是依赖于wordpress。所以于是这样一来就造成了一个问题，就是我word Price work press有多少个plugin？有可能有几十万个几十万泰国。哼我觉得保守估计5万可能有。哼就是这么多pluggin有很多都是商业的，就是有很多是要付钱买的。对假使有一天wordpress完全把可以leach掉，这些人的这些人的这个财路就断了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:05",
      "text": "对吧？所以我觉得这个可能还不太现实，比如刚才看他只是说把这个管理后台那个界面改写了一下。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:11",
      "text": "对，但这是这无毫无疑问是一个非常重要的信号。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:15",
      "text": "就是存在一个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:17",
      "text": "把它dish掉的可能性。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:20",
      "text": "这件事情至少已经被被拿上了这个议事日程了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:25",
      "text": "对，而且人们因此会产生的担心也是可以理解的。我觉得哼。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:33",
      "text": "所以你担心吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:36",
      "text": "我不担心，我又不靠他吃饭。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:38",
      "text": "你的虚拟饭碗要没了。我而且虚拟。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:40",
      "text": "饭碗其实可以完全转化为，之前不是也谈聊过，可以完全转化为静态网页生成器。现在的web已经到了这样一个的状况，就是如果你使用，如果你所有的功能都使用service的话。比如说你的图片使用flicker，然后你的评论使用discuss，然后你的什么头像乱七八糟的使用。",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:06",
      "text": "那个叫什么那个叫什么。",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:10",
      "text": "那其实你是完全不需要在本地提供任何动态功能。",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:15",
      "text": "对，你是只需要提供几个静态页面就可以了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:18",
      "text": "那在这种情况之下，我们使用一个复杂的CEMS的，唯一的的动机就没有了。我觉得对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:31",
      "text": "因为之前我们有一期也讲过，静态网站生成器，它之于像one press这种就这种动态的这种CMS的一个好处，就是它性能非常好。也不不不用怎么维护，基本对吧？对你把网站发上去就不用管，不像这个经常很多这种，因为很多人加博客跟博客会用这个wordpress来写。然后这个wordpress如果你默认就安装，也不做什么优化的话，他的性质是非常糟糕的。那经常会发现一个现象，就是我们比如说看什么hacking news，reddit a，或者是以前更老的什么slashdot这种网站。你上去一个头条，前十的话那个网站你点过去发现怎么打不开，你发现你知道我挂掉了，因为受不了这么多的这个请求过来。",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:18",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:19",
      "text": "所以今天网站没有这个问题，就像你说服务化之后，以及本身对这个内容动态化的要求也比较低了。所以这也是一个大的一个趋势了。而且大家对安全性要求。",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:31",
      "text": "觉得对动态网站很一方面是安全性，一方面维护性，也是一个问题。就你这你看从工程学的角度类比，就不会动的东西是不会坏的，就是你的是一个什么原件。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:43",
      "text": "里面没有磨损吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:44",
      "text": "可以对，可以移动的东西非常多，那它就很容易坏。比如说发电机是很容易放坏的对吧？但是那个叫什么？就是使用放射性的那个电池，就是直接。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:57",
      "text": "把放射性核电池。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:00",
      "text": "核光核电池吗？核电池它对它里面没有动的部件，对吧？所以它才能被人放在什么什么voyage的探测器上面，当做整个探测器的电路来源。因为它不会坏，那它根本就不可能坏。OK但其实网站也是一样。如果你写一个程序里面根本没有需要动起来的部分的，就维护和出错的可能性都是非常低的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:32",
      "text": "安全性其实这个问题我们还其实得深究一下。因为据我所知work press代码写的好像质量不是太好。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:41",
      "text": "还行在P在所有的PHP代码库里面算是不错的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:45",
      "text": "你要求好低。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:48",
      "text": "anyway我们都已经搂到PHP了，你还要干嘛？",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:52",
      "text": "因为当然废墟本身这个安全性也比较糟糕这个是一个客观存在的事实。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:58",
      "text": "而且其实PHP和wordpress 0代都出来过很多次。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:04",
      "text": "他们应该是每天都有一大把。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:07",
      "text": "对，然后很多时候就有什么一堆wordpress网站又被攻陷了这种新闻出现。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:13",
      "text": "所以如果能够把这个事情，那也是当年那个apple force，我们从那个mobile type切过去，当时也是选择wordpress，后来我实在受不了了，把它做成了一个静态化筒。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:26",
      "text": "IT公论的最新版blog不也是在wordpress上。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:32",
      "text": "对，那个是用他们他们的那个host的服务。但是因为对他们那个没空去搞，然后就用一个现成的方案先用着呗。但是也有很多问题，以后再想办法慢慢改。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:43",
      "text": "OK所以它有朝一日还是会变成静态网页生成技能。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:48",
      "text": "这个再说，不知道。对，主要是因为那个是host的，我也不用我们去考虑它的安全维护的问题，所以就还。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:56",
      "text": "可以忍好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:01",
      "text": "下一则新闻。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:02",
      "text": "最后一则新闻，下一则新闻是respons ry pie出了一个新的型号，叫做rsp ry pie zero。然后它的售价是5美元。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:13",
      "text": "5美元就563.",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:15",
      "text": "型号是0，不到40块钱人民币。对，一个不到40块钱人民币的全功能的计算机。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:22",
      "text": "不他这个起起名叫林还是有点讲究。他们不是有个什么杂志吗？叫做magpie吗？对，然后你订阅那个杂志，然后这期你就会免费获得一个这个zero就免等于是免费了，对吧？OK然后为什么你买杂志会免费获得一个呢？它是直接把那个，因为它很薄。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:44",
      "text": "他只把这个做到直接贴贴。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:46",
      "text": "在杂志里面。这让我想起以前订那些什么90年代末的，2000年初的时候，定什么计算机之类的杂志，上面送那个光盘，对吧？对，有点那种感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:59",
      "text": "没错，我记得以前大众软件还可以邮购3.5寸的盘。",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:07",
      "text": "对那个时代，现在的科技已经过了这么十几年了，十几二十年没错，科技进步到是杂志里面直接送你一台电脑了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:17",
      "text": "没错，而且这台电脑要比也就2十年二十年太多，也就15年前的电脑更加强劲。对我15年前我可用不上什么1 gager的CPU和和512兆的内存。虽然硬盘是没有的，就是这个zero上面只有一个micro SD的插口。但是现在的micro SD多便宜。对，就是以前的这个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:47",
      "text": "果然是德国人。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:50",
      "text": "micro OK。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:53",
      "text": "Michael SD标准的德式发音。所以这个zero它的性能是怎么样子的？它是一个博通，博卡BCM2835的处理器的对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:08",
      "text": "其实还是比较。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:09",
      "text": "他其实比第一代的那个派要好的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:13",
      "text": "对，其实还是比较强劲的。就它没有那么没有它的价格。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:18",
      "text": "那么一G的主频，然后是一个ARM11的这个指令集。M11叫做什么？是MV6对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:25",
      "text": "ARM v6应该是使用RM11.",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:28",
      "text": "21、26的指令集。对对对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:32",
      "text": "这个只能讲说这套。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:34",
      "text": "命名真是让人。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:35",
      "text": "绕搞不清楚是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:37",
      "text": "对，所以问你一个问题，那么A52和A73有什么区别？这A53和A72有什么区别？",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:43",
      "text": "哪个风口无可奉告。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:47",
      "text": "这个可能有一个问题，就是说应该说很多nex发行版，它都不支持这个MV6指令集了，也比较老了。现在支持这个新的是RMV7，因为用像安卓那些，对吧？所以他们用这个可能还是比较过时了。然后一G赫兹的主频就还反正这个性能据说是比第一代的respire pai快40%，也不知道是不是怎么测出来的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:16",
      "text": "本来不知道是量哪个，以哪个指数比较。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:21",
      "text": "对，然后内存是510，就半个G的，这个就是低功耗ddr二的那个那个内存也是这版是应该是芯片的那个在里面的，他我看到。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:32",
      "text": "只是一块芯片。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:33",
      "text": "On the board对OK，然后有一个micro SD card，这个微型的SD card插槽，做它的一个存储设备，然后有一个mini HDMI.",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:46",
      "text": "就是为什么mini要念mini，而micro要念micro。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:53",
      "text": "这一些不讲逻辑的英国人。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:56",
      "text": "没错，这些被被法国人统治的英国人。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:59",
      "text": "我还是念用德语念法mro这个mini HDMIHDMEHD.",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:08",
      "text": "ME啊哈DME.",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:11",
      "text": "DME从开始练得比的话，然后这个可以转换由一个转接头转换成普通的这个哈迪米。对，然后你可以接电视或者是这种带DMV的显示器。",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:29",
      "text": "好。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:32",
      "text": "他是支持这个1080P的分辨率的，还做一个正常的高分屏的。不是高频，就普通那种。因为这是高分屏。",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:41",
      "text": "全高清080P是HD ready。我什么。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:46",
      "text": "玩意。",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:47",
      "text": "敷敷HD是就是1080，HD是1080P。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:51",
      "text": "对，HD是720P。OKOK。对，然后它还有一个Michael OUSB用于这个供电和数据线。这个其实我就有一个问题了，它还有一个叫40帧的这个GPIO口，就是GPL是general purpose IO对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:07",
      "text": "General propose.",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:08",
      "text": "就是一个这个东西叫什么头来着？这个叫什么针脚。",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:12",
      "text": "GPIO.",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:14",
      "text": "我不知道中文叫。",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:16",
      "text": "什么通用型输出输输入输出OK这个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:19",
      "text": "名字也太长了，我觉得肯定有一个俗名了，我记得是叫真什么什么针脚的。Anyway, 然后它还有一个没有接口的，那个叫做composition video header，就是这个很那些老电视上面有用，那种叫什么来着？有什么分量信号，应该是是不是就这个，不对，不是分量信号。Composer这个叫符合视频信号。",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:44",
      "text": "我天这么复杂的术语你都记得算了吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:48",
      "text": "对，但这个就很小了。它应该看起来比那个信用卡好像还要小一半。",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:53",
      "text": "它比5美元的钞票要小。",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:55",
      "text": "我们的钞票可以装，至少能横过来，我估计至少能够装四五个。然后它这个尺寸是65毫米乘以33毫米乘以5毫米厚，其实非常小巧的一个东西。",
      "speaker": "发言人2"
    },
    {
      "time": "01:40:11",
      "text": "65毫米就比那个小版的瑞士军刀要长一点点。",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:17",
      "text": "那你记得这么清楚。",
      "speaker": "发言人2"
    },
    {
      "time": "01:40:19",
      "text": "因为新刀只有两个版本，一个是6毫米的，不，一个是6厘米的，一个是10厘米。",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:24",
      "text": "对，所以我有一个问题，就这个五美元的这个zero它的网络怎么接对？",
      "speaker": "发言人2"
    },
    {
      "time": "01:40:31",
      "text": "这是一个好的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:33",
      "text": "因为你想你这么想，就这么一个电脑哈他自己处理能力但也不算弱，就按可能十年前的标准都算是一个挺好的一个电脑。而且你可以接一个什么做那个媒体播放器是没有问题的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:40:51",
      "text": "对我觉得有可能。",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:55",
      "text": "那我就好奇他这个网络怎么解怎么一个解决方案。",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:00",
      "text": "它也有可能会像那个阿鲁伊诺一样，出一些是shield或者是叠加。",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:07",
      "text": "的版是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:08",
      "text": "对，或者是通过GPI。我连一个蓝牙。",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:12",
      "text": "还是这个有蓝牙，没有吧？哦，你说自己再接一个是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:17",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:17",
      "text": "自己再接一个蓝牙，那倒是可以的，比如它有那个USB的有个口，你加个这个USB的网，估计也能凑。但这样的话就没有这个体积优势了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:29",
      "text": "我觉得它的应用场景也许还是一些不是，可是现在有什么智能家居，智智能家居是可以逃开。",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:37",
      "text": "网络了是吧？对我觉得没有网络可能是一个很大的一个硬伤，因为现在没有网络的话，真的是没办法玩下去。",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:44",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:45",
      "text": "不过如果他单独做一个什么这种，就是你仔细想一下，现在哪些场景是不需要联网的电脑我还真的一下想不出来了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:58",
      "text": "基本上没有，除非是一个什么监控。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:02",
      "text": "监控都要联网，监控你要把信号开窗帘OK，就是那种什么通过环境光那种自动控制器的这种东西。",
      "speaker": "发言人2"
    },
    {
      "time": "01:42:11",
      "text": "就是一个reactor那种反应器的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:15",
      "text": "就单片机的那些场合，它可以用了，对吧？对不？它这个确实便宜，它才卖5美元一个i doing的最便宜也得两三美元。应该批量买的话。",
      "speaker": "发言人2"
    },
    {
      "time": "01:42:24",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:25",
      "text": "所以他这个已经可以逼近阿VO的这个价格成本优势了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:42:30",
      "text": "那反过来阿里运动其实也有一些比较采用一些比较强力的处理器的版本OK，对，这两者渐渐在构成直接竞争。应该说但是这个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:43",
      "text": "还是上次我们聊到这个东西，就是耗电量可能两者还是比较显著的，但是跟这个性能有直接关系。耗电量的性能。",
      "speaker": "发言人2"
    },
    {
      "time": "01:42:51",
      "text": "这个玩意儿应该是只靠一个，电池是驱动不了多久。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:57",
      "text": "就一天，估计一两天。有一个什么现在给那个手机充电，那个电池不是很大一坨，它这个用电量估计跑了一两天问题不大，但毕竟不是像最近的那种跑一两周两三个月这种情况。",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:12",
      "text": "没错。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:13",
      "text": "所以你想买一个这个来玩一下吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:17",
      "text": "可能会买，但你这么。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:20",
      "text": "便宜是吧？老板你来一打。",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:24",
      "text": "首先得想到要干嘛，因为我其实最近在想说要不要做一个什么项目，但是目前还没想好具体要做什么。因为我刚刚完成了那个在线课程，所以上。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:40",
      "text": "完了这个课。",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:42",
      "text": "对，而且拿到了significant，就拿到。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:45",
      "text": "了一个什么。你是上哪家来的？杜克大学的那个杜克是吧？你是上杜克大学这个成教学院结业证书。",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:56",
      "text": "成教函授学院。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:58",
      "text": "对，成教函授学院的结业证证书。不错。对，没错，还是不错。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:02",
      "text": "总算一个文凭了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:06",
      "text": "好好艰辛好艰辛。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:09",
      "text": "没错，就是想起了我爸，我在我小时候，我爸一手抱着我，一手在上什么兰州大学的函授课程，最后拿了一个学士。",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:19",
      "text": "不错，当年他们的精神还是非常厉害。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:24",
      "text": "而且对然后业余有点时间可以做点别的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:31",
      "text": "我看到他在网站上有一套。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:34",
      "text": "转接头OK还有一个bundle.",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:37",
      "text": "就他有一个结合，有一个这个mini HDMI转这个普通的HDMI的一个转接头，有一个micro USB转普通USB的母口的转接头，还有一个40帧的针GPI的针脚。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:52",
      "text": "GPI对，它板上的针脚是没有焊的，就是你要写个GPO的话，你还得把针插进去。",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:59",
      "text": "它就是一个洞子。对，所以这个还是挺有意思的。就是我觉得现在我真的觉得就是做这个maker你想玩这个东西的话，其实现在小朋友好幸福，有这么多现成的方案可以自己去折腾去搞，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:16",
      "text": "对我觉得不像我们。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:17",
      "text": "当年有学习这个玩这个的冲动的时候，没有这个东西可以玩，然后也没有什么可以没有什么可以教。",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:25",
      "text": "感觉对我觉得我们小时候玩的那些东西都特别的机械，就是比较偏土木机械那一块。对，现在就可以玩一些比较电子的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:38",
      "text": "所以赶快买一打以后囤起来给你儿子用。好的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:43",
      "text": "女儿用想跟女朋友。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:45",
      "text": "商量一下，你买打也就六十刀。",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:50",
      "text": "这玩意儿得先卖到德国来。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:52",
      "text": "还不能买吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:53",
      "text": "现在我没看。但respire pie是美国的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:58",
      "text": "对，英国的，他们在英国威尔士生产制造。对他这里其实他的那个分销一直有点问题。没错，就经常会出现发现这种比较，之前我买了就出现一个比较囧的情况。他当时他卖那个respire派一还是二的时候，他不是25美元一个吗？还是25美元一个，觉得挺便宜的是吧？我想买一个运费35美元。",
      "speaker": "发言人2"
    },
    {
      "time": "01:46:21",
      "text": "没错，就是我觉得他们的物流真的是太把。",
      "speaker": "发言人1"
    },
    {
      "time": "01:46:24",
      "text": "这个也不能怪他们，这个毕竟不是一个非盈利的东西，他也不可能说把这个价钱定的很高，然后让那个经销商去帮他们囤货，也是所以但是他。",
      "speaker": "发言人2"
    },
    {
      "time": "01:46:35",
      "text": "一开始是作为一个教育项目出现的，所以对，天生就带缺了这个商业机。",
      "speaker": "发言人1"
    },
    {
      "time": "01:46:44",
      "text": "不过他现在这个东西卖卖5美元，这里就一定会出现，就之前已经有这个类似的问题了，就是在现在连可能连连国内买都会出现这个问题，就发现运费好像都比它贵一些。",
      "speaker": "发言人2"
    },
    {
      "time": "01:46:55",
      "text": "但是OK就你运费超过成本，对你真的只能。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:00",
      "text": "买那才合算。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:01",
      "text": "OK说的没错。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:03",
      "text": "感谢什么什么他的resort派2，就是这个最新那个就是不是最新，性能最好那一款。二代就是卖三十五刀，运费你在国外如果你买一个的话，差不多就是35到了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:15",
      "text": "Respect pie还可以，现在产能跟上了吗？或者是那个分销能跟上了吗？比较齐，在德国是38.5块，包运费。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:26",
      "text": "所以他其实他他出了这么几款车，他每一个都没有停是吧？就每一个都可以在还还可以继续购买的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:32",
      "text": "应该是这样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:33",
      "text": "所以他到底现在一一共有几个型号了？",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:36",
      "text": "S per派一一可能已经停产了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:39",
      "text": "我觉得就是最远最古老的那一代了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:41",
      "text": "然后二又有model a.",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:43",
      "text": "不对，他那个也在卖，model就没有数字的那一款，就是model b model a都还在卖，A加B加还在卖。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:54",
      "text": "在卖，不一定还在查。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:56",
      "text": "我觉得他在卖，看他肯定在查。你说他一次产100万个.",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:00",
      "text": "对，一个batch，然后再卖光。",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:02",
      "text": "就卖光就没了是吧？也有可能，不过还是挺遗憾的。他上面也有什么这个ZO上面有一个原生的网卡就好了。我就可以。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:15",
      "text": "实现我自己单片机不是提到了一个非常便宜的带网卡的，是阿杜伊诺，还是什么？",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:24",
      "text": "应该不是，应该是另外的一个什么board避过玻璃什么之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:29",
      "text": "但你把那个买来，然后把它接上不就好了吗？两个拼在一起也没有多大。",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:35",
      "text": "对，还有就是刚才讲的那个问题，现在是很多令linux发行版，它不是支持m video这种老旧的指令集了吗？软件制作上会是一个比较大的问题。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:48",
      "text": "对，但应该还是可以解决。或者说他下一代zero plus one出来的时候就好吧。对，可以。",
      "speaker": "发言人1"
    },
    {
      "time": "01:49:00",
      "text": "解决好吧。今天节目差不多就到这里结束了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:49:06",
      "text": "感谢收听I片podcast网络旗下的IT技术主题娱乐节目内核恐慌。我们号称哈萨克，但是也没有干货，想听人听，不想听的人就别听。你可以为本节目捐款，捐款地址是current panic dot FM slash donate。捐款金额随意，只要是八的正整数倍就可以了。捐款不会给你带来什么，不捐也不会让你失去什么。我们的口号是no hard feelings。如果你有任何反馈，可以发邮件到kernel panic at IPN dot LI。同时也欢迎你收听该片旗下其他几档节目，埃踢攻略为知道太一来了，流行通信、high story、硬影像、无资源、博物质和选美，我们下期再会。",
      "speaker": "发言人1"
    }
  ],
  "lab_info": {
    "summary": "本期IPM Podcast聚焦于技术分享与讨论，涵盖SSH客户端和服务器审计、iOS与安卓终端应用、WordPress CMS变迁、Raspberry Pi Zero最新版本等多个话题。节目还探讨了终端仿真器的重要性、SSH协议应用、跨平台开发工具的效率，以及BBS历史等，展现了技术发展与挑战。特别强调了虚拟机技术、移动远程控制解决方案的进步，和老技术的新视角，为听众提供了实际应用指导。整场节目结合专业深度与轻松对话，鼓励听众关注IT技术前沿。",
    "qa_pairs": [
      {
        "question": "今天节目中我们尝试的新业务是什么？",
        "answer": "今天我们尝试了一个拉皮条业务，主要是帮助一些有招聘需求的公司和正在找工作的开发者、程序员牵线搭桥。",
        "time": "00:01:05"
      },
      {
        "question": "目前有哪些具体的职位需求呢？",
        "answer": "目前有两个职位正在招聘中。第一个是在广州，微信团队所在园区旁边的一家创业公司，正在寻找Python后端工程师；第二个职位是在北京中关村，一个跨境奢侈品电商创业团队需要招聘一位架构师，要求具备良好的算法、数据结构知识，以及机器学习和搜索优化加分项，且熟悉Elastic Search会大大增加竞争力。",
        "time": "00:01:42"
      },
      {
        "question": "如果对这些职位感兴趣，应聘者应该如何联系你们？",
        "answer": "应聘者可以发送一封简单的介绍邮件以及简历至邮箱 talent at realboard dot com，我会先进行初审和面谈。",
        "time": "00:03:29"
      },
      {
        "question": "是否会对推荐的候选人进行筛选？",
        "answer": "是的，我们采取双向审查机制，不仅会对候选人进行初筛，也会对合作的公司进行审核，确保推荐的是靠谱的公司和人才。",
        "time": "00:05:33"
      },
      {
        "question": "是否考虑过扩展到其他城市或地区？",
        "answer": "除了北京、上海、广州、深圳外，我们也会考虑杭州等地，并且如果节目组推荐的人才和公司优秀，未来可能会有更多公司要求合作。",
        "time": "00:05:12"
      },
      {
        "question": "薪水问题如何处理？",
        "answer": "我们确保提供的职位薪水至少高于市场平均水平，但具体薪资还需应聘者与公司进一步商议。这部分工作由我负责，帮助候选人选择合适的公司，但最终谈拢价钱和酬劳还需应聘者自己努力。",
        "time": "00:05:56"
      },
      {
        "question": "早期的终端是什么样的？浏览器和早期的终端有何关联？",
        "answer": "早期的终端是一个实体的、物理形态的存在，由机械电子元件构成，它不具备独立处理信息的能力，主要功能是接收用户输入并将信息传输到main frame（大型机）。浏览器其实是一种服务，本身不具有处理信息能力，它只是通过将用户输入和远程服务器输出显示在一个窗口中来工作。这个窗口实例可以理解为以前早期终端的仿真版本。",
        "time": "00:15:41"
      },
      {
        "question": "Common Line Interface（CLI）和CUI有什么区别？",
        "answer": "Common Line Interface是指命令行接口，它可以是基于图形的，通过命令行执行操作；而CUI则专指那些使用字符矩阵构建的界面，可以实现类似窗口效果，但并非基于命令行。",
        "time": "00:17:39"
      },
      {
        "question": "服务器如何在没有显示器的情况下输出显示内容？",
        "answer": "服务器可以通过串口（serial port）连接到读串口设备（如终端模拟器）来输出显示内容，这种方式称为council port。",
        "time": "00:20:00"
      },
      {
        "question": "如果重新设计从零开始的IT系统，是否还会采用层层包装的方式？",
        "answer": "如果前提是没有遗留的legacy设备和技术，从零开始设计的话，可能不需要层层包装，会更简单干净。但由于现实中存在大量legacy系统，因此这种层层包装的做法成为了一种折中解决方案。",
        "time": "00:22:18"
      },
      {
        "question": "console这个词是怎么来的？",
        "answer": "console一词来源于早期实体的控制台，如游戏机或计算机主机。最初是指包含多个按钮和屏幕的实体设备，随着技术发展，如今的软件和游戏中也常出现类似控制台功能的界面，如调试模式或快速修改游戏状态的功能。",
        "time": "00:25:41"
      },
      {
        "question": "在Mac上你主要使用哪个终端仿真器？",
        "answer": "我在Mac上基本只用item 2，它是一个功能非常全面的terminal模拟器。",
        "time": "00:31:57"
      },
      {
        "question": "item 2是否支持分屏功能？",
        "answer": "是的，item 2支持split window功能，可以将一个窗口分成上下或左右多个部分。",
        "time": "00:32:57"
      },
      {
        "question": "是否有其他终端仿真器推荐？",
        "answer": "除了item 2，还提到了一个叫z term的古早终端仿真器，它曾经在Mac OS X早期版本中被广泛使用，但现在已基本无人使用。",
        "time": "00:40:42"
      },
      {
        "question": "对于t max的分屏功能你怎么看？item 2相比t max在分屏方面有何改进？",
        "answer": "t max的分屏功能虽然可以实现窗口分割，但其设计较为复杂且不直观，且只能上下分，不能左右分。item 2的split window功能可以左右独立分屏，更适合在长方形屏幕上利用空间，同时支持更多分屏组合方式，并且每个分隔的部分都是一个独立的TTY。",
        "time": "00:34:12"
      },
      {
        "question": "item 2如何与t max整合？",
        "answer": "最新版本的item 2可以与t max深度整合，通过命令可以控制t max中的窗口切换和操作，从而解决了t max在图形界面下占用空间大、操作不够灵活的问题。",
        "time": "00:36:28"
      },
      {
        "question": "X11环境下常见的终端仿真器有哪些？",
        "answer": "在X11环境下，最基础且普遍存在的终端仿真器有xterm，而更先进和功能丰富的包括RXVT（或其变种URXVT），它们模拟了不同类型的终端协议，如VT102和VT220等。",
        "time": "00:43:46"
      },
      {
        "question": "在使用原始或简单的窗口管理器时，UXUXVT为何受欢迎？",
        "answer": "因为它轻量级，由纯C编写，并支持unique特性，对于不需要多余功能的用户来说足够轻便。",
        "time": "00:48:08"
      },
      {
        "question": "目前最常用的两个终端模拟器是什么？",
        "answer": "目前最常见的是debian系列发布的那个（可能是xterm），以及KDE的council（以K开头的council），而非KT。",
        "time": "00:48:16"
      },
      {
        "question": "KDE环境有何特点？",
        "answer": "KDE环境设计较为花哨，审美风格类似于windows 95到XP时代的审美，有很多花哨的颜色和特效，有种糖果店的感觉。",
        "time": "00:49:20"
      },
      {
        "question": "你目前使用的终端仿真器是什么？是否有其他知名的、功能强大的终端仿真器推荐？",
        "answer": "我现在用的是x face terminal，它是x face自带的，依赖GDK，相比其他稍微轻一点点。还有像terminator和quack quick等受欢迎的替代品，它们功能强大且各有特色。",
        "time": "00:50:18"
      },
      {
        "question": "x face terminal是否支持多种分格排列方式？",
        "answer": "我用的版本不支持多种分格排列，但x face大部分功能简单，基本够用。",
        "time": "00:52:22"
      },
      {
        "question": "对于不同终端仿真器的选择，你是如何考虑的？",
        "answer": "通常会在网上搜索“best terminal emulator for Linux”，但发现很多推荐的都不太好用，每个都有其优点和缺点。",
        "time": "00:53:40"
      },
      {
        "question": "是否认为自己编写终端仿真器是一件容易的事？",
        "answer": "不是所有程序员写出的终端仿真器都好用，这需要一定的经验和智慧，忍耐力也很重要，因为Linux允许用户自行修改和定制。",
        "time": "00:53:55"
      },
      {
        "question": "在使用I3窗口管理器时，为何还要在终端仿真器内部使用tab切换而非I3管理窗口？",
        "answer": "这是因为不同层级的窗口管理和切换使用不同的快捷键，将它们分清可以更好地适应不同场景下的操作需求。同时，使用tab可以更灵活地在多个终端内部的程序间切换，而I3窗口管理器并不提供这样的功能。",
        "time": "01:00:53"
      },
      {
        "question": "在T Max中，为什么没有采用分层的快捷键设计，而选择用control加123这样的方式切换窗口？",
        "answer": "这是因为快捷键设计上并未分层，三层（窗口层、type层和T3层）都是通过command键来切换，例如control+1、control+2等。同时，在T Max中存在二段式的台阶机制，这与其它两者不同。",
        "time": "01:03:40"
      },
      {
        "question": "是否在使用自定义快捷键时遇到过因层级过多而导致的冲突问题？",
        "answer": "是的，在自定义快捷键时确实会遇到因为层级多而产生的一个快捷键在不同地方被触发的矛盾情况，例如默认的control+B在vim中有特定用途。",
        "time": "01:04:15"
      },
      {
        "question": "是否有解决这种快捷键冲突问题的方法？",
        "answer": "一种方法是在I3中利用meta键（即windows上的win键），将其单独用于窗口管理，但这种方法并不适用于所有场景，并且在mac上由于command键、alt键和control键实际使用率较高，可能导致很多预设组合在不同应用间冲突。",
        "time": "01:05:42"
      },
      {
        "question": "是否考虑过简化快捷键层级，比如将三层结构拉平为一层？",
        "answer": "是的，考虑到复杂性问题，有人提出过将层级简化为一层管理，类似于I3的flat设计，但这需要进一步尝试验证其实际效果。",
        "time": "01:07:32"
      },
      {
        "question": "对于Windows系统上的终端仿真器有哪些推荐？",
        "answer": "Windows系统上有多种终端仿真器，如PuTTY虽然不好用，但有类似CRT或Tera Term等更易用的工具，它们支持调整字体大小和窗口尺寸，能够更好地模拟Linux环境下的终端体验。此外，还提到了一个新的名为mini GW的项目，它是用Node.js开发的一套跨平台桌面程序运行环境，可以在Windows系统上运行Linux程序，但目前似乎主要是在工具兼容性方面存在问题，实际应用较少。",
        "time": "01:13:36"
      },
      {
        "question": "在移动设备上如何远程连接服务器？",
        "answer": "在移动设备上可以使用SSH客户端，例如推荐使用名为iSSH的应用，它虽美观上可能稍逊色于其他选项，但在紧急情况下可作为救火工具；另外还推荐了panic公司的Prompt Two，其界面设计类似X Face Terminal，非常漂亮且实用。此外，也提到了Server Audit这款软件，它本质上是一个SSH客户端加上终端仿真功能。",
        "time": "01:17:50"
      },
      {
        "question": "早期苹果的开发哲学对于CLI的看法是什么？现在OS X上item r的地位如何？",
        "answer": "早期的苹果开发哲学认为CLI是一个重要但过时的东西，打算将其扔进历史垃圾堆，但在新的图形界面出现后，基本不可能有terminal emilia这类程序出现在苹果机器上。在OS X上，item r已经成为了系统启动时默认启动的程序之一。",
        "time": "01:18:41"
      },
      {
        "question": "对于Mac用户来说，如何通过item 2实现特定程序的启动？",
        "answer": "用户可以在item session中设定特定环境变量，这样在新开的tab中（例如W0T1）可以运行特定软件，开机时启动的程序布局会与关机时一样。",
        "time": "01:20:23"
      },
      {
        "question": "item 2启动后会做什么？",
        "answer": "item 2启动后会给每个panel设置一个环境变量，这个环境变量会根据当前的tab和panel不同而变化，用户可以在ZHLRC配置文件中设定特定的环境变量来控制不同的panel启动。",
        "time": "01:19:47"
      },
      {
        "question": "Android上是否有类似的便捷工具或推荐？",
        "answer": "Android上也有推荐的终端模拟器，但具体有哪些好用的工具需要读者自行尝试。",
        "time": "01:21:29"
      },
      {
        "question": "第一条新闻是什么？",
        "answer": "第一条新闻是Microsoft Code（一款基于GitHub发布的代码编辑器）上周正式开源。",
        "time": "01:22:42"
      },
      {
        "question": "Microsoft Code的全称是什么？",
        "answer": "全称应该是Visual Studio Code，但它并不是Visual Studio，而是一款功能强大的代码编辑器，支持debug等各种高级功能。",
        "time": "01:23:22"
      },
      {
        "question": "WorkPress对管理界面进行了怎样的更新？",
        "answer": "WorkPress最近将其管理界面用JavaScript和Node.js重写了一遍，客户端使用React实现，而服务端依然基于PHP，但仅作为API平台框架存在。",
        "time": "01:26:29"
      },
      {
        "question": "PHP在WorkPress新版本中的角色如何变化？",
        "answer": "在新的WorkPress版本中，尽管API层面仍保留PHP，但管理界面已完全转变为使用现代技术构建，这意味着传统意义上作为前端应用开发语言的PHP，在这个场景下更多地作为后台API服务的角色。",
        "time": "01:27:06"
      },
      {
        "question": "zero的性能如何？它的处理器是什么型号？",
        "answer": "zero搭载了博通BCM2835处理器，比第一代产品性能更好。它拥有1G主频和ARM11指令集，虽然使用的指令集较为老旧，但在当时是较新的技术。",
        "time": "01:35:53"
      },
      {
        "question": "A52和A73有什么区别？",
        "answer": "这个问题没有直接回答，但讨论了ARM架构中不同代际的处理器特点以及它们与现代安卓系统对RMV7指令集的支持情况。",
        "time": "01:36:47"
      },
      {
        "question": "zero的内存和存储设备配置如何？",
        "answer": "zero配备512MB低功耗DDR2内存，并有一个micro SD卡插槽作为存储设备。同时，它还具备一个mini HDMI接口，支持1080P分辨率的显示输出。",
        "time": "01:37:33"
      },
      {
        "question": "zero是否支持网络连接功能？",
        "answer": "zero可能不直接支持网络连接，但可以通过添加蓝牙模块或其他扩展方式实现联网功能，尽管这可能会牺牲其小巧的体积优势。",
        "time": "01:41:17"
      },
      {
        "question": "zero适合哪些应用场景？",
        "answer": "zero适合一些不需要联网或者对网络依赖较小的场景，比如智能家居应用，但由于其不支持现代主流网络协议，联网功能可能成为一个硬伤。",
        "time": "01:41:37"
      },
      {
        "question": "是否打算购买zero来玩一下？",
        "answer": "考虑购买，但由于最近刚完成在线课程，还在考虑具体要做什么项目。同时，提及zero价格低廉，具有一定的成本优势，但耗电量可能较大，可能需要配合电池供电。",
        "time": "01:43:24"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "内核恐慌节目推广招聘新业务",
        "summary": "在本期节目中，主持人介绍了IPM podcast网络旗下娱乐节目《内核恐慌》的新动态，特别提出了一项旨在连接求职者与企业的招聘服务。节目中提及了两个具体的职位空缺：一家位于广州的创业公司正在寻找Python后端工程师，强调了对Tornado、Flask等技术的熟悉；而另一家位于北京中关村的创业团队则急需一位拥有强大技术背景的系统架构师，包括对算法、数据结构、机器学习等的深入了解以及对Reals和Elasticsearch的实际应用能力。主持人鼓励有兴趣的听众通过特定邮箱talent@realboard.com提交简历，并承诺会亲自进行初步筛选和面试，展现了一种直接而个性化的招聘服务方式。"
      },
      {
        "time": "00:04:29",
        "title": "探讨节目招聘及广告合作事宜",
        "summary": "讨论内容涉及招聘要求，包括提交简历和照片，特别强调了对女性候选人的偏好。同时，也谈到了节目未来的广告合作可能，强调了对人才和公司的双向审查的重要性，确保推荐的是可靠的人才和公司。此外，还提到了薪资和股权期权等福利问题，以及对于非北上广深地区的职位需求和薪资期待。"
      },
      {
        "time": "00:06:31",
        "title": "探讨新型Shell程序和编程语言的潜力",
        "summary": "节目中讨论了由清华大学校友开发的使用Go语言编写的Shell程序'lwish'，该程序对ZSH的特性和pipeline进行了实用的改进。讨论强调了虽然这类新型项目可能是实验性质的，但它们展示了不同编程语言在系统级编程中的潜力，也反映出开发者社区对于创新的追求。同时，也提到了其他使用Python编写的Shell项目，以及对未来可能由新语言编写的操作系统的期待。"
      },
      {
        "time": "00:08:26",
        "title": "回顾DOS时代与现代软件使用体验",
        "summary": "讨论集中于DOS时代的Commander误识、Norton Utilities的增强功能以及现代软件如Dash的应用体验。特别提到了DOS时代通过Norton Guide使用手册的便利性，以及现代软件中对于文档查询的高效工具。对比了旧时单进程程序的简单多任务系统与现代软件的用户体验，同时也回顾了PHP开发经验，强调了社区评论的价值及其对编程学习的影响。"
      },
      {
        "time": "00:13:41",
        "title": "终端仿真器与模拟器的区别",
        "summary": "讨论了终端仿真器（emulator）和模拟器（simulator）的区别，指出模拟器需完全复制内部原理，实现高精度的模拟，如宇宙模拟需包含所有物理常数和规律；而仿真器仅需复制外观和感觉，如MAME街机模拟器通过读取ROM来运行，无需完全复制硬件。此外，探讨了浏览器作为服务的功能，类比早期的物理终端，以及CUI（Character User Interface）的概念。"
      },
      {
        "time": "00:17:15",
        "title": "计算机界面类型及服务器远程管理探讨",
        "summary": "对话中讨论了计算机界面的不同类型，包括CLI（命令行界面）、CUI（字符用户界面）和COI（基于字符的图形界面）的区别和应用场景。特别指出，虽然现代技术发展迅速，但对于服务器等设备，基础技术如串口通讯和BIOS设置仍然十分重要，对于没有显示器的服务器，通过串口连接和终端模拟器进行管理成为一种实用的方法。此外，也探讨了技术的迭代，并思考了如果从零开始设计技术栈，是否还会选择当前的层层封装的方式。"
      },
      {
        "time": "00:22:00",
        "title": "应对技术债务与遗产系统的方法论",
        "summary": "讨论集中在如何处理遗留系统（legacy systems）上，强调了虽然从零开始可能更简单，但现实中必须面对大量的遗留技术。引用了一句类比，指出相比于全新的代码，遗留代码可能是更为稳定和可扩展的。此外，讨论还提到了不应盲目替换现有系统，因为新系统可能无法正常运行的风险。最后，提到了理事会（council）的概念，作为一个比通用接口更泛化的解决方案。"
      },
      {
        "time": "00:23:48",
        "title": "计算机历史和控制台的演变",
        "summary": "对话内容涉及了计算机历史博物馆的访问体验以及对控制台（console）一词的理解和演变。讲述者提到了在加州的计算机历史博物馆中，对早期计算机及其操作界面的观察，强调了控制台作为物理设备向虚拟界面的转变。此外，讨论了游戏主机和软件中控制台的功能和意义，以及其在游戏开发和虚拟现实中的应用。还提到了shell在命令行界面中的角色，以及Windows命令行与shell的区别。"
      },
      {
        "time": "00:28:32",
        "title": "操作系统、Shell及终端仿真器的探讨",
        "summary": "讨论重点在于操作系统、Shell的概念及它们的历史和发展。特别指出，DOS作为最早期的操作系统之一，并没有真正的内核和Shell概念之分，而PowerShell则是一个具有Shell功能的现代任务自动化和配置管理框架，支持脚本语言和.NET框架。此外，还提到了TTY及其发展，从60年代的teletype到现代终端仿真器的特性，例如窗口大小调整、原始模式和全屏编辑器的使用等。最后，强调了终端仿真器的重要性，并推荐了值得关注的知名终端仿真器。"
      },
      {
        "time": "00:31:53",
        "title": "探讨Terminal应用及分屏功能的实用性和替代方案",
        "summary": "对话中讨论了Mac上的Terminal应用及其分屏功能的实用性，指出其分屏功能使用上的局限性，特别是在与tmux等工具的比较下显得不足。讨论还涵盖了item 2作为Terminal的替代品，强调了其分屏功能的灵活性和与tmux的深度整合，使得在进行多任务处理时更加高效。同时，也提到了在使用高分辨率显示器时，分屏功能的一些显示问题和快捷键的使用习惯问题。"
      },
      {
        "time": "00:39:37",
        "title": "探讨终端仿真器及其在不同操作系统中的应用",
        "summary": "对话内容主要围绕终端仿真器在Mac OS和其他操作系统中的发展、应用及配置进行讨论。提到了一些特定的终端仿真器，如hot key window、z term、XTerm、RXVT以及URXVT等，详细讨论了它们的特点、用途以及与操作系统的关系。特别是对于Linux和Unix系统，终端仿真器是必不可少的工具，体现了其在这些系统中的重要性和多样性。此外，还探讨了Mac OS从OS1到现在的演变以及对终端支持的变化。"
      },
      {
        "time": "00:48:15",
        "title": "Linux终端仿真器讨论",
        "summary": "对话主要围绕Linux发行版中默认终端仿真器的选择和使用体验。讨论者分享了他们对几种终端仿真器（如debian系列使用的、KDE的Konsole以及xface terminal）的看法，包括它们的界面风格、功能性及审美。对话中还提到了其他知名的终端仿真器如terminator，以及对KDE界面风格的个人看法，和对Xfce界面审美的偏好。"
      },
      {
        "time": "00:51:52",
        "title": "探讨Linux终端的使用体验与选择",
        "summary": "对话中讨论了Linux终端的使用体验，特别提到了对Gnome Terminal的改进版本以及其他替代品的使用感受。讨论者分享了对于终端分屏布局、功能简洁性和使用便捷性的看法，同时也表达了对Linux社区中用户对于终端定制和改善的积极态度。通过搜索最佳Linux终端的经验分享，反映了用户在寻找理想的终端工具时面临的挑战。"
      },
      {
        "time": "00:54:57",
        "title": "操作系统类比与用户社区文化",
        "summary": "对话内容涉及将操作系统比作汽车，以Windows、苹果（Apple）和Linux为例，描述了各自的特点及用户群体。Windows系统被比作性能普通但服务好的汽车，适合大多数不希望复杂思考的用户；苹果系统则比作外观前卫但封闭昂贵的汽车，吸引有钱的用户；Linux系统比作由用户自行维修的坦克，象征着自由但需用户自行解决问题的精神。此外，讨论还延伸到了终端仿真器和窗口管理器的使用，说明了在I3窗口管理器中如何管理和使用多个终端。整个对话涵盖了操作系统的特点、用户社区文化以及与之相关的技术工具使用。"
      },
      {
        "time": "00:58:53",
        "title": "探讨多层级界面管理及快捷键冲突问题",
        "summary": "对话集中在如何在不同逻辑层级间（窗口管理器、终端模拟器、Tmux）切换，以及各自的快捷键使用上。讨论了在不同屏幕、终端标签页、Tmux会话中切换的快捷键，强调了分层管理和快捷键潜在冲突的考虑。讨论还涉及了使用单一终端进程和多窗口管理器（如i3）的优缺点，以及在特定场景下如何更有效地组织和切换窗口。"
      },
      {
        "time": "01:03:27",
        "title": "探讨快捷键冲突和多层管理的复杂性",
        "summary": "对话中讨论了快捷键在不同软件和系统中的冲突问题，特别是Command、Control和Alt键的使用，以及在特定环境中如Vim和Tmux中快捷键的定制。强调了快捷键配置的个性化需求和解决冲突的策略，比如选择不常用键以避免冲突。同时，也提到了在多层嵌套环境（如Tmux连接远程服务器时）下管理快捷键的复杂性，探讨了将快捷键层次拉平以简化管理的可能性。最后，讨论者反思了在工具配置上花费过多时间的问题，暗示实际工作被忽略了。"
      },
      {
        "time": "01:08:36",
        "title": "Windows终端仿真器和SSH工具讨论",
        "summary": "对话涉及了在Windows系统上使用的终端仿真器和SSH工具，讨论了开发者在Windows环境下对于远端Linux系统进行操作的需求。提到了多种工具，如Putty、Aterm、Proterm以及系统（一个支持鼠标操作的BBS软件），并讨论了它们的优缺点。还提到了Cygwin和MinGW，以及在Windows上使用虚拟机的建议，讨论了这些解决方案的适用场景和用户体验问题。"
      },
      {
        "time": "01:15:35",
        "title": "探讨移动设备上的远程服务器管理工具",
        "summary": "对话中讨论了在移动设备上远程管理服务器的多种方式和工具，特别是针对iOS和Android设备的SSH客户端。提到了使用ISSH和Panic的Prompt及其外观和实用性，以及在紧急情况下通过移动设备远程登录服务器进行操作的必要性。此外，还讨论了iPad Pro在运行终端仿真器方面的优势，以及iOS设备在远程服务器管理方面的便捷性。对于Android设备，虽然对话中未提及具体应用，但也期待有类似的工具存在。总体上，讨论强调了CLI（命令行界面）在现代设备上的持续重要性和实用性，特别是在远程服务器管理和紧急故障排除方面。"
      },
      {
        "time": "01:22:07",
        "title": "WordPress更新和Visual Studio Code开源讨论",
        "summary": "在最近的对话中，讨论了Microsoft的Visual Studio Code正式开源，这款基于GitHub和Electron技术的代码编辑器，因其强大的功能和实用性而受到关注，但同时因其对CPU的高要求引发了一些讨论。另一则重要新闻是WordPress的内容管理系统更新，将管理界面使用Node.js和React重写，而PHP则保留在API层面，这一变化引发了关于PHP未来及其对开发者社区影响的讨论。此外，还探讨了WordPress的大量插件对许多人来说是生计来源，以及静态网站生成器的优势和安全性问题。"
      },
      {
        "time": "01:34:02",
        "title": "Raspberry Pi Zero新型号发布，价格亲民功能强大",
        "summary": "Raspberry Pi Foundation推出了一个全新的Raspberry Pi型号，名为Raspberry Pi Zero，售价仅为5美元，约合人民币40元。这款计算机体积小巧，却功能齐全，能够满足基本的计算需求。通过订阅相关杂志，用户可以获得一个免费的Raspberry Pi Zero，让人联想到过去订阅杂志附赠光盘的时代。尽管价格低廉，但Raspberry Pi Zero配备了博通BCM2835处理器，性能比第一代Raspberry Pi提升了40%。它拥有512MB内存和Micro SD卡插槽用于存储，支持1080P分辨率，具备Mini HDMI接口和Micro USB接口用于供电和数据传输。尽管网络连接可能是个挑战，但通过USB外设可得到解决，使得这款设备在智能家居等领域具有潜在应用。"
      },
      {
        "time": "01:43:40",
        "title": "探讨现代教育技术与电子制作的未来",
        "summary": "讨论重点围绕成教函授学院文凭的重要性以及个人成长经历，特别是对于电子制作和现代教育技术的见解。提到了杜克大学的成教学院结业证书，回顾了过去的学习方式与现在相比的变化，强调了现代孩子们在电子制作方面拥有的丰富资源。还提到了Raspberry Pi和其他相关硬件设备，探讨了物流问题对购买这些设备的影响，以及对于未来电子教育的展望。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "对于程序员和系统管理员来说是必不可少的工具"
                },
                {
                  "children": [],
                  "content": "不同操作系统下的终端仿真器差异"
                }
              ],
              "content": "终端仿真器的功能和重要性"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "macOS: iTerm2, Terminal.app"
                },
                {
                  "children": [],
                  "content": "Linux: xterm, RXVT, Gnome Terminal, KDE Konsole, Terminator"
                },
                {
                  "children": [],
                  "content": "Windows: cmd, PowerShell, Cygwin"
                }
              ],
              "content": "主流终端仿真器"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "分屏功能"
                },
                {
                  "children": [],
                  "content": "字体大小调整"
                },
                {
                  "children": [],
                  "content": "高级编辑功能"
                }
              ],
              "content": "终端仿真器的特性"
            }
          ],
          "content": "终端仿真器讨论"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "基于Electron技术，功能强大但资源消耗高"
                }
              ],
              "content": "Microsoft Visual Studio Code开源"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "从PHP完全转向Node.js和React"
                },
                {
                  "children": [],
                  "content": "引起的社区讨论和担忧"
                }
              ],
              "content": "WordPress的革命"
            }
          ],
          "content": "开源项目与个人贡献"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "5美元的价格"
                },
                {
                  "children": [],
                  "content": "高性价比的微型计算机"
                }
              ],
              "content": "特点"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "DIY项目"
                },
                {
                  "children": [],
                  "content": "教育用途"
                },
                {
                  "children": [],
                  "content": "低成本设备开发"
                }
              ],
              "content": "应用场景"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "高需求与低产量之间的矛盾"
                },
                {
                  "children": [],
                  "content": "分销渠道的局限性"
                }
              ],
              "content": "物流与供应问题"
            }
          ],
          "content": "Raspberry Pi Zero发布"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "IT技术主题娱乐节目"
                },
                {
                  "children": [],
                  "content": "“号称hard call，但是也没有干货”"
                }
              ],
              "content": "内核恐慌节目定位"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "捐款支持节目"
                },
                {
                  "children": [],
                  "content": "反馈与建议通过邮件"
                }
              ],
              "content": "支持与反馈"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "终端仿真器深入讨论"
                },
                {
                  "children": [],
                  "content": "开源项目的动态"
                },
                {
                  "children": [],
                  "content": "新硬件产品介绍"
                }
              ],
              "content": "节目主题"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "邀请听众反馈"
                },
                {
                  "children": [],
                  "content": "分享社区观点与经验"
                }
              ],
              "content": "互动环节"
            }
          ],
          "content": "技术社区与播客节目"
        },
        {
          "children": [
            {
              "children": [],
              "content": "对开源项目的持续关注"
            },
            {
              "children": [],
              "content": "新硬件产品的技术分析"
            },
            {
              "children": [],
              "content": "技术社区动态和播客节目发展"
            }
          ],
          "content": "未来展望"
        }
      ],
      "content": "内核恐慌节目总结"
    }
  }
}