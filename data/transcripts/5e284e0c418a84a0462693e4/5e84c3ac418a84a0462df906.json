{
  "pid": "5e284e0c418a84a0462693e4",
  "eid": "5e84c3ac418a84a0462df906",
  "title": "38. Hit the Kernel Panic Button",
  "task_id": "klrbn2ywgd7395zy",
  "transcription": [
    {
      "time": "00:00:00",
      "text": "您正在收听IBM pocard网络旗下的IT技术主题娱乐节目内核恐慌。我们号称hardcore，但是也没有干货，想听的人听，不想听的就别听。本节目的网址是coral panic dota FM，我们推荐大家使用podcar t客户端订阅节目，详情请访问IPN dota IOS。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:17",
      "text": "来是FAQ，欢迎你为本节目捐款，捐款地址是coron panic dot FM flash donate。捐款金额随意，只要是八个正整数倍就可以。捐款不会为你带来什么，不捐也不会让你失去什么。我们的口号是they have computers，and they may have other weapons of mass destruction.",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:34",
      "text": "这是什么玩意儿？",
      "speaker": "发言人2"
    },
    {
      "time": "00:00:36",
      "text": "这是一个叫做Janet reiner的美国前司法部长说的。当时是1998年互联网犯罪初露端倪的时代。他他在一个听证会上说，国家就是当时美国要建立一个叫做national infrastructure protection，就类似一个互联网安全局的这么一个东西。OK, 意思就为了保障美国的infrastructure，就是信息产业的这个基础建设。他在这个听证会上说了这么一句话，就是他把computers和这个weapons of mass destruction并列。这是将十几年前的事了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:21",
      "text": "不过今天挺有远见的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:23",
      "text": "其实对，当时大家都觉得很可笑。因为那个时候一说到mass weapon of mass destruction，就会想到伊拉克这什么化学武器之类的。但是现在看来这个计算机产生的伤害也是的确是一个在很大数量级上产生的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:44",
      "text": "那个什么前人还是很有远见与前瞻性的，在那个时候就想到了这个后果。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:52",
      "text": "其实过去20年里面，因为计算机产生的巨大灾害也不是一两次的事情，简直每年都有好几次，对吧？而且是最近几年真是越演越烈。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:04",
      "text": "你现在是那些什么infrastructure基础设施里面用到信息技术和就或者说电脑的越来越多了。现在电网都要搞什么智能电网是吧？好像可以联网无线读那个电表。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:19",
      "text": "我记得对，然后什么核能电站之类的就更别说了。就以前总是觉得好像我记得那个时候小时候看什么一个黑客给吴家宝演示，用一台电脑和一个电话和一个调试远程器加一个电话线，就是什么三号侵入了宙斯盾，什么某某台某某一某一艘这个巡洋舰上的宙斯盾系统什么的，然后大家都很震惊。可是现在想想，就你不需要搞这种东西，你只需要去弄一个什么核电站什么的就可以了，对吧？造成的灾害要比一艘军舰能造成灾害更大。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:53",
      "text": "就是那个灾害是蛮大的，我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:55",
      "text": "它上面是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:56",
      "text": "好像是有核弹。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:58",
      "text": "的核动力巡洋舰那应该没有核弹。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:04",
      "text": "他没有那种战术核武器。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:07",
      "text": "弹头不一定，这应该不是常规会待在船上的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:12",
      "text": "难说。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:14",
      "text": "好吧，我们需要请一个美国。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:18",
      "text": "军方的人来，你说那些军队的计算机跑的什么系统？Windows, 但我记得好像之前看到过是谁，是说F16还是F22，那个战斗机上跑的是XP还是windows 2000，我忘了，就是某一个还比较关键的F16F16不太可能。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:40",
      "text": "因为F16我记得在看过一个，就基本上这个战斗机的操作上肯定是一个半实时的专有操作系统。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:48",
      "text": "把它分几部分，就是跟那个车一样，你看有一个substance方式。对对对，它不是说这些核心控制组件，那就肯定是要需要一个实时的系统的。他可能会是一些什么？比如说随便说腾讯组建战斗机有没有娱乐模块。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:06",
      "text": "玩着玩着坠机，因为驾驶员在那边玩什么红的那叫什么空当接龙金带。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:15",
      "text": "对还还有之前说那个不是有那种无人机，就是做那种军用无人机，它不是有一个这种远程操纵它的系统，好像也是跑在windows 4XP还是什么版本上面的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:28",
      "text": "这个是有可能就是你做，因为你专门为一个远程操作系统开发，先开发一个操作系统的。先不说成本，就是你开发出来这个操作系统的稳定性可能还不如windows，对吧？这也是有可能的好吧？其实全世界的军队可能俄我不知道俄罗斯怎么样，但其实全世界的军队只要是涉及到计算机的部分，但基本上全都是普通的计算机系统，基本上全都不能办公。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:56",
      "text": "你说对，但是他那个是遥控无人机，就是遥控无人机的系统，我觉得还是挺敏感的。不过你想象一下，那个无人机本来在那个老远的地方跑，然后那个驾驶员坐在一个很很安全的一个banker里面，很猥琐，那里开着那个东西对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:13",
      "text": "开无人机的人很多都是在美国本土遥控无人机的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:16",
      "text": "好像他那个延迟。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:18",
      "text": "怎么解决不知道，但是我好像看过一个报道，就是这个逻辑。在我心里心里因为每天上班就是去操纵杀人，然后下班之后看到周围的什么欢声笑语，拿着花香，然后就想我靠我为什么要干这种事？",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:34",
      "text": "刚刚刷了五个，他那种如果是这样的远的话，他那个延迟问题是怎么解决的呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:40",
      "text": "不知道这个是很好的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:42",
      "text": "就是你开着那个无人机，飞机本来又快，你说那个什么车，你过一什么不是说一秒，0.1秒已经开过了，可能在高速路上开。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:53",
      "text": "可能开过多少。我觉得这个就是这个时差，可能就是你说0.1秒这个级别的时差可能没有什么太大问题。因为首先重在一个很高的地方放飞，然后地面上那个车辆可能哪怕时速50公里每小时，在他看来也只不过是在缓缓移动而已。然后第二就是那个中程带的导弹肯定都是有制导的，他肯定能，你只要确定这个车前面方圆50米之内没有遮蔽物，发一个导弹过去，那导弹自己就追过去了呗。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:25",
      "text": "其实不需要很精确的去控制它的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:28",
      "text": "对我觉得实时性有可能不是特别重要，尤其是在侦查和发动这种精确制导打击的时候，你有一定的时间延迟，其实并不是太大的问题。哼OK.",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:42",
      "text": "所以他只需要安全，然后能够比较方便的同时开五个壮，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:50",
      "text": "对，好吧，我们首先要讨论一下与本节目相关的一些1111件事情，要说鉴于某些人事上的变动，本节目首先这个IT公论节目停播了，然后本节目改成从本期开始改成不定期播出。背景原因就不解释了，但是反正就是这么一件事情。就在这将来，我们基本上有一个节奏，就是说大概两周两个人会想起来录一下。但是鉴于目前的这个人生和事业的状态，好像hold住这个节奏也不是那么容易。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:37",
      "text": "所以以后网站上要做一个按钮，在今天恐慌妈摁一下，他会告诉你是还是不是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:44",
      "text": "弄一个twitter账号和，不对，我们就在官方的账号上说，今天没更新就好。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:52",
      "text": "没有记就好。关键是他们你不定期，你定你得让他们来来来破，就得做一个按钮按一下，对吧？今天恐慌吗？不恐慌今天恐慌吗？不恐慌。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:06",
      "text": "The panic button, 这个东西可以叫做the panic button。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:10",
      "text": "你可以买一个红色的那个，对，摁一下，当头装装一个阿杜ino进去，对吧？摁一下，然后那边连出一个结果，他逼逼叫的话就是有，必须没叫的话就是没有。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:24",
      "text": "对，我们可以卖这个赚点钱。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:27",
      "text": "Panic button kernel panic button. 然后下面那个那个按钮上面富含小字，你永远不知道按下之后会发生什么。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:40",
      "text": "于是听众来信说，按了之后。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:43",
      "text": "女朋友怀孕了，不是我的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:47",
      "text": "天哪。我本节目要污名化了，我觉得logo可以改成一个大大的屋子。对，反正就是那件事儿。然后这期节目的稿件其实是在三至少三周之前写的，所以那个时候还是件大新闻的事情，就是这个NPM整个stack几乎都毁掉了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:19",
      "text": "就是那一天出了这件事情之后，有很多活动网站当然没有立刻挂掉。但是有很多网站的开发都被迫停止了，或者说更新部署都被迫停止了。但是我印象我好像没有遇到这样一个网站。不过在新闻上看起来好像这件事情当时蛮大的这是要。",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:39",
      "text": "解释一下来龙去脉吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:42",
      "text": "需要吧，我觉得就是从最早说起，有一个远在新西兰的，在在地球的另外一边的一位叫做either cashala。这好像是个土耳其人的名字，但是因为这个人在奥克兰，他写了一个extension叫做kick KIK。然后这个extension是发布在NPM上面。然后有一天他收到了一封信，这封信是来自于一个叫做cake的厂商KIK。然后这个kick后来我发现我还装过，它是一个即时通讯软件，就有点像what's f之类的这么一个东西，但是远没有s WhatsApp红。然后用户群可能有一部分，但是也不是特别多。然后他写了他的律师，不对，不是律师这个，kick的负责人之一给这个either kou写了一封信，说你把你写的这个kick的extension改个名字，因为我公司也要出一个extension。然后either大概回了一句说这种要求我不会接受。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:04",
      "text": "对这个公司负责人写的信里面有这么一句话，就是，如果你做的话，这件事情就不会，牵扯到律师了。哼就有这么一句话，就是你可以把它理解为是一种某种非常隐晦的威胁，或者非常明目张胆的威胁。如果你要不干的话，我就告你。然后这个either crosley又回了一句，说什么你给我3万美元，给3万美元，咱们就这这这我就可以把这个，我就可以把这个名字卖给你。然后cake的人回一句说this is going to nowhere。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:45",
      "text": "他没有直接回答说我要我不要出这3万美元，而是说这件事情这样的话就什么也干不了。言下之意就是说你他kick这个公司的要求就是你无偿的立刻的把kate这个名字给我们。这个NBM就是管NBM的这个组织也牵扯其中。简单来说就是真的我已经很久没有看这个新闻了，所以具体的人名什么都不记得，但大概就是NPM的事。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:16",
      "text": "N面对帮人做一件事情，就是把kick这个东西强行下架。下架这个词either把aser写的这个kick的库强行从网站上拿到。然后aser一下子就火了，他就把自己之前写的好几十个extension就一次性撤销。然后这一下子就整个互联网，因为尤其是他在写了一个他写了一个叫做left pad这么一个library，被很多很多其他的框架或者是程序间接或者直接使用。然后让他把这个left pad撤掉之后，整个所有依赖于这个框架的依赖于这个库的框架网站全都没有办法在在更新的时候找到这个库。然后也就瘫痪。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:14",
      "text": "大概就是这么一件事儿。有没有一种什么你拿了一块砖，然后那个雷峰塔就轰然倒下的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:24",
      "text": "对，大概就是这样，就听起来非常可笑的连锁反应。而且个非常有意思的事情就是或者非常荒诞的事情就是这个left pad这一个很小的library，它真正有效部分可能就十五行代码，了不起十五行代码。然后这个东西在它下架，就是他被这个开发者主动撤销的时候，他被下载了大概两百多万次。应该是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:57",
      "text": "这里可能要稍微解释一下这个NPM怎么一个是工作方式。不然的话很多不是做这个GS开发的人，不太理解为什么会产生这么大的一个影响。",
      "speaker": "发言人2"
    },
    {
      "time": "00:14:08",
      "text": "我就简单来说就是javascript这个东西，它一开始不是拿来干这个，然后正因为如此，它也没有一大堆配套的相应的基础设施。就是我们喜闻乐群众喜闻乐见的python或者是乃至java的都有这样一句话，就是说Better battery included。就是你在使用这个语言的时候，你使用的不仅仅就是他offer给你的不仅仅是语言本身，还有一大堆可以直接拿来就用的做其他事情的一些东西。然后这些东西，这些组件，这些辅助工具，我们叫做库对吧？哼然后Jason的毁就毁在他他没有这个他没有这个东西，那他他offer的东西他本身就只有他语言本身。当然他有一部分是在他出生那时那一个时刻就被设计来让他是和和与它绑定在一起的那些东西。比如说什么浏览器的窗口，浏览器里面的组件之类的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:06",
      "text": "但是除此之外没有别的，就比如说这个left pad它实现的功能其实很简单，就是把一个数字在这个数字左边填上零填。比如说你有一个数字是42，然后你要把这个42写成00042。为什么？可能有一个五位数的index，然后你希望他你在排列的时候可以按这个字母顺序排列。那你如果在每个数字前面填上零的话，那它排列起来就是一个正常的顺序，对吧？就这么一个简单的功能，这个jasper是没有的。所以当有一个人写了把这个工把这个函数写出来之后，就有很多很多人去用。但是偏偏这个函数它不是圆或者说框架的一部分。所以当这个非常小的一个非常小但是非常重要的基石不在可以获不再可以直接获得的时候，那整个上层建筑就他就就就就他了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:06",
      "text": "但是别的语言也有同样的问题，为什么就是只有在NPM或者说在GS那边有这么严重的后果？",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:15",
      "text": "我觉得其实就是一个规模的问题。就是你在比如说java世界里面，大家也有很多人去用那个google的grab，对吧？但是一方面google是一个非常比较靠谱的这么一个公司，他不是一个个人，他不会说今天这玩意儿我要撤了，我就直接撤了。另一方面就是如果你不用java的时候，你即便完全不涉及任何其他第三类第三方库的时候，你使用java仍就可以直接用它内置的所有的这些library。这一部分是在你下载java，乃至于你把java部署到一台机器上的时候，你可以默认，你可以taken for granted。它一定在那儿了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:56",
      "text": "但是在这个标准所谓的对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:00",
      "text": "但是在NPM世界里面，这一点是不成立的。就是对你你必须每一次部署的时候，你都要从NPM那个网站上面下载一大堆东西。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:11",
      "text": "但是我觉得这里有两个问题，一个是说标准库到底应该有多大多小的问题，然后像JS和路A，也都算是那种比较极端的。它的那个标准库都非常tiny对吧？非常小，大部分功能是要靠第三方库来实现的，这个本身我觉得倒还没有多大的问题。你看现在python也有这个，就现在面临这么一个尴尬的状态，他们常年以什么自带电池自居，对吧？现在都这么多年。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:44",
      "text": "电池要么是容量太小，要么就是特别不经用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:48",
      "text": "反正对都不好使。但是因为它又是标准库的一部分，你又不能把它这个撤掉了，不然它的那个隐藏的依赖就不太对。所以这是一个两个极端的问题。",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:00",
      "text": "但我觉得可能那个JS的最主要的问题就是同样是用第三方库，它的那个所谓的力度就是gradually ity。就是一个库到底是应该包含多大的功能才算一个库？它好像走到了一个比较极端的一个状态，好像之前就是这个left pad这个事情。这个腰子捅出来之后，大家去看一下NPM上面那些下载量比较火的所谓的库，好像最极端。有个只有一行代码。",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:28",
      "text": "对，有一个叫做is area的call，只有一行代码。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:32",
      "text": "就是就判断一个变量是否是一个数组。对，这就变得很奇怪了。因为在在大部分的其他的这个语言里面，以前不光是python也好，或者说是常见的一些语言里面，他的这个就是操作同类数据结构，或者说是做同类相关工作的那些功能，它会被归类为一个或者是两三个这种库里面。他不会猜到说判断一个数，判断一个变量是否为数组这么一种功能，会单独的成为一个库对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:11",
      "text": "对，这其实是一个语言设计上的缺陷，导致了这么一个目前的这样一个状况。就是因为可能这个l jasper的设计者根本不会想到有一天会有人真的去操心要判断一个东西是不是数组这件事情。所以这功能根本就没有做出来，对吧？然后如果你仔细去看。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:31",
      "text": "但是就算没做出来，这但是就这个比如说刚才想这个live pad也好，它为什么不是一个叫做什么处理字符串的一个库的一个功能，而是要单独使用一个库的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:46",
      "text": "好吧。如果抛开语言设计本身问题，我觉得可能还是一个community。就是说这个社群没有建立起一个比较合理的组织类库的组织标准库的方式。它有点像一个沿用宝藏和cathedral的比喻的话，他没有试图去建立起来，建立起一个比较系统化的，更有更有条理的这么一个内库的结构。哼而是就任其发展，可能即便是把萨尔和拔草之间也有区别的。那其他语言的巴塞尔可能是一个比如说一个经过有多少有这么一点管理的那种自由市场。哼但是在NPM这边可能就是几十万个苍蝇摊子那样堆在一片平地上。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:42",
      "text": "这里有一个问题就是说他他为什么这个社区会产生这么一种文化？然后后来就有人去追根溯源，就到你去看为什么会是别的语言都没有这么干的，别的人都是老老实实的。一个比如说有一个string library，对吧？他做一些string的操作，有一些什么，比如说big number的library，做一堆big number的事情。但是因为GS它要GS大部分就分前端和后端的。前端的是要放在客户端里面去执行的。对，那也就是说每次用户打开这个网页的时候，都要重新再下载一遍这个网页的上面的这个GS代码。那么为了提高这个响应速度，他们就会有一种诉求，就是要这个代码的体量尽量的小。然后就变成一个很尴尬的问题，就是说如果我我只是要用一个字符串函数包含函数库里面某一个函数的话，我是不是要把整个字符串它这个叫函数库都引进来。",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:56",
      "text": "所以我只需要就像一个汉字字体，如果我能只引进那些我需要的东西就好。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:03",
      "text": "对，所以其实就遇到一个就是在js群里面，他们遇到了一个代码重用和这个结构。这个代码组织出现了一个比较矛盾的一个地方。就是说如果从代码从容的角度来讲，你肯定是说某一个功能做的越细越好。这样看就比如说每一个函数都可能是只有两三行，然后他完成一个。对，可以单独拿出来用对吧？但是在代码组织上面，如果你是这么干了的话，然后你就变发现你会变得所有的功能你都要去就你import你看一下一个比较正常的一个JS的一个文件，你看他头部的那些require，还有现在用GS那yes 6的话，它import的语句都会非常多。因为它非常非常每一个都非常细碎了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:51",
      "text": "这样的原就导致刚才讲的这个，他有一个诉求，是为了降低这个代码的整个尺度。就是说我只用了那一部分功能，我就不需要引入全部的东西了。但其实在其他语言上，这个东西是可以这个矛盾是可以解决的，可以通过用技术的方式解决，叫做什么，就是无用代码消除。比如说你用了一个函数库，假设它函数库里面有十个函数，然后你只用了其中一个，另外九个都没有用到的话。那理论上是可以通过编译器或者其他方法，把那些所谓的dead code，你从来也不会引用到的代码给消除掉，对吧？但是要实现这一点，必须要编译器对这个语法的静态分析要有有比较深入的理解。",
      "speaker": "发言人2"
    },
    {
      "time": "00:23:38",
      "text": "就是他可以他必须要明确的知道在编译期间，就不是在运行期间，就知道这个代码你是不会用到的那不管是通过什么动态加载还是什么方式，你肯定是不会引用到那那部分代码。所以编辑可以很安全的把它们移除掉。但是这一点在很多静态的动态语言里面，像java、python、ruby、nova我不太清楚可不可以，都是比较难实现的。因为编译器没有办法在静态的时候就绝对有可信的把握，表明那个裂缝代码是不会被用到的。因为有可能那部分代码在整个程序中运行期间，被动态的一个命名方式，或者是改名还是怎么样去把它引入进来，而这个是你在静态分析的是没法做的。所以这个语言特性的导致在有这种需求的情况下，我们只好采用手工的方式把代码切的非常细。然后这样我们只引用需要的部分，这样等于是人工的告诉他说，我只需要这个left pad，不需要red pad这个功能，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:50",
      "text": "所以归根结底还是语言设计或者语言特性导致的一个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:57",
      "text": "但其实这个问题在后端是不存在的。就是像NPM现在很多人是用来做后端的程序。因为后端你没有要把代码精简的很小的需求，对吧？因为你说哪怕是再多挺复杂的一个后端程序，哪怕是用GSI写的话，几十兆上百兆不得了了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:17",
      "text": "然后对于本地，但问题在于这个就是发生NPM发生的这个1蛾子，其实也是对后端有影响。因为它后端里面可能也有很多人在用lift开的这个库，对吧？对，但没错，后端的影响只不过是不能就一时半会儿不能开发而已。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:35",
      "text": "那这个问题就在于这个GS这个语言除了他传多少字用来做写前端程序，现在也在被用来写后端程序了。于是就会发现说，我们是不是要从同一套同一个代码库，同一个代码仓库，就NPM，这个就比较火的那那如果你重用了那些为前端代码优化组织的一个代码库的话，你后端是不是也会产生同样的问题？就哪怕说你后端没有要压缩代码量的需求，你可以接受一个你引入了一个字符串处理的库里面你只用了其中一个函数，而其他99个你都用不到，这对你来说没有任何影响。但是因为现在我们讲前后端统一的话，加就GS在这边跑的最远的，那他就没有办法说，那我后端就采用另外一套组织代码这个代码库的方式了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:32",
      "text": "这件事情搞笑之处在于它是无解的。我觉得就是你在目前这个现实情况之下，你没有办法杜绝说下次就不会出现这样的事情。你也没有一个比较简单的一揽子的解决方法说这个语言要这样改革。因为这个圆现在MAT script就不属于任何人，他是一个standard的对吧？你他不像python有这么一个独裁者，可以说没有这样做，于是轰一下都都大家都这样做。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:04",
      "text": "但我觉得有解，其实因为最简单的一个事情就是说，那你既然就假设我们不想去浪费人力物力去重新加组织这些已有的GS的一些代码库，我们还是就常用现在这套模式下，你怎么可以避免其中某一个库被删掉了，然后导致你整个软件大厦都崩塌掉这种事情发生。那你可以学什么够烂的方法，你做一个vendor对吧？就是你把外部的这个代码依赖也放进你这个代码仓库里面去。这样然后外部的修改，你是作为整整个代码的一个修改的一部分去做对。就是说我们可能从稳健系统稳健和整个叫什么开发部署过程中可靠性的角度来讲。你应该把那些任何会影响到你的代码的运作的组件，都视为你这个项目的一部分，并且管理起来。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:10",
      "text": "其实在早期没有互联网的时代，大家都是这样。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:14",
      "text": "做的对，这就变成了一个就变成一个习惯使然东西。大家都觉得我们我们这个服务器和这个开发机都是一直联网的，没联网我们啥也干不了的对吧？所以如果这样的话，我可以依赖。然后我们假设那个NPM这个代码托管的一个仓库，它是一直是持续可用的那确实相比于说python的那个拍p，python package index的可用性来说，这个NTM确实是领先好多可能高好多个数量级的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:49",
      "text": "就是因为它太可靠了，所以对很难没有人想过说这玩意儿居然会他对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:55",
      "text": "没错，然后也没有人也也之前也没有人遇到说别人放上去带，然后就是又被撤被撤下来这么一个事儿。",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:03",
      "text": "而且是而且尤其我觉得有些代码库，可能是这个作者就干脆就不就不管了。但不管你看哪怕不管的时候，他也不会主动就是把把它撤。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:14",
      "text": "而更别说他觉得是band，他不是removed对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:18",
      "text": "对，而这个人就是他处于一种你比如说revenge这个样这样一个心理，就做这两件事情的他他这个后果其实还是挺严重的，几乎和我们本期的口号相呼应了，这也算是某种much mass this structure。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:36",
      "text": "哼对，这个是一个挺好玩的一个事儿。但是扯到这里就不得不说一句，就是经常写也写那个go也写GS。GS就是说代码重用到了一个比较变态的一个程度，对吧？我为了不要重复写那个是否一致R瑞这个函数，我都要把它单独抽象成一个库。但其实在我知道，比如说在goal line的这个就所谓的best practice里面，他们经常会说，如果这个功能很简单，你可以随手写出来，那你就不要去引用一个外部的依赖了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:14",
      "text": "这是两种哲学。因为就有些我看那个评论left pad这个事的这里面也会说这么一个简单的功能，为什么很多人都选择要去去？首先你要去NPM上搜这样一个库，对吧？然后搜到了去去include它的这样一个过程，其实并不比你自己写一个要容易多少。那为什么会有这样两种哲学存在？一种就是说好吧，那这么简单的东西最好自己写一个。另一个与与之相反的就是有些人会说，基站已经有人发明了轮子，你为什么还要自己再弄一个？",
      "speaker": "发言人1"
    },
    {
      "time": "00:30:51",
      "text": "哼就代码重用到是否是要追求到一个极致，我的这个城市里面不会出现一行重复的代码。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:59",
      "text": "对，这里这整个程序没有一行是我自己写的。这种感觉就对我可以用别人写好的代码，用别人写好的内裤，用别人写好的用别人开发好的框架，然后我只需要往里面填内容就可以。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:15",
      "text": "但是这里也有一个很好的一个反驳，就是因为JS这个语言的坑实在是太多了。哪怕你是否写一个像inari这种看起来很简单的函数，你用逻辑去推理说应该他应该这样判断，这样判断。最后发现你查一下实际的比较可靠的方写法是就是what fuck。这为什么会考虑。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:36",
      "text": "这么多奇怪的点？Two string点call，然后那个object，然后判断这个two string call的这个object上面得到的内容是不是object every觉得这已经很准了。就是你要判断一个东西是不是数组，在jasper里面居然要通过比较字符串的方式，我觉得这个实在是好。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:59",
      "text": "对，所以其实这件事情也是有他的客观原因的。不是说因为我们这个JS程序员懒，还是说都是些对吧？因为外通常外界可能对GS开发者有一种偏见，就是说是一帮没经过正统科班教育的，啥也不懂的小年轻？这么一种成见的印象。对，但其实从实用的角度来讲，他们采取这种方式做，也是所谓的为了更减少成本。简单来说，因为你自己要去去写一个的，哪怕是看起来非常简单通俗易懂的一个功能，都要去理解JS这个语言设计层面，或者说在某一个运行时里面的各种各样的坑。然后你如果与其这样，你还不如说让别人先把这个坑踩完。虽然很简单，但是可以确保那个坑是已经是已知的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:53",
      "text": "已经被踩实了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:54",
      "text": "对，已经被前人的尸骨填平了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:57",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:33:01",
      "text": "所以其实我我不知道你没有最近关注那个GS，他们在做一个他们有一个新的技术，也不知道跟GS没什么关系，叫做web assembly，外部汇编语言。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:11",
      "text": "对对对，就是对简单相当于一个最基本的子集。然后其他的高端语言可以编译成这个技术的子集，然后跑到浏览器。",
      "speaker": "发言人1"
    },
    {
      "time": "00:33:22",
      "text": "对，因为现在其实最麻烦的问题就是说为什么JS是变成一个大家要追求的一件事情。虽然我们都知道这个语言的各种坑，设计的也很烂，对吧？因为你没得选择，你在前端这个浏览器里面你只能用这个语言。那你要反过来问，为什么这个浏览器不搭载一些比较细，比较看起来没那么疯狂的在运行时呢？这个一个是有历史原因，先来后到的关系，对吧？那毕竟最开始的时候浏览器支持那么多。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:51",
      "text": "但你也不得不好奇说，你说像现在这个像chrome的市场占有地位和这个叫什么web care，就或者说web care为核心的这种浏览器的这种市场占有地位。而且其实这跟外面没什么关系，它是另外的一个GS的引擎。但是就说你说我们把这个实际上只要两三家公司合起来推荐事情就可以完全替掉那个JS。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:20",
      "text": "要不是有那么多什么consulting um之类的东西存在，就是为什么不能一起来推进之类的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:26",
      "text": "因为其实你看一下，现在只需要说把google数码，然后苹果数码和微软数码就可以把可能90%多的这个浏览器市场里面内置的这个解析器引擎给换过来，对吧？对，但是就既然像什么CSS标准都可以去换，为什么浏览器里面出一个加一个新的运行时是不可以的呢？算web assembly，也算是从我们zada那边出来的一种尝试。然后那就说我们不要我们直接运行一些非常底层的代码，像类似于bc code。你可以这么理解。然后这个bcd可以被浏览器里面自带的引擎和用阶梯的方式比较方便的编译好。然后他也同时可以是比较容易成为其他语言的一个target，对吧？就是你写你哪怕你写java，你写C，你写go python，它都可以比较容易的通过compiler编译器把它编译成一个web semble的一个中间的一个表现形式IL算是，然后再被浏览器解析成根据它不同的架构解析成可以执行的代码，这样是不是就好一些呢？现在是不是就可以说大家都不用。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:44",
      "text": "都去写GS了呢？加尔说好好好，我早就做过了，我也早就。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:49",
      "text": "失败了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:51",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:51",
      "text": "以前那个叫什么java applets，还是叫什么来着java applet。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:00",
      "text": "好在成就如果各位如果居然有年轻听众们不知道java它是什么呢？它有点像一个有点像flash，就是你用它来写一个程序。",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:11",
      "text": "然后这个比喻还挺切贴切的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:15",
      "text": "对，然后它可以跑在浏览器里面，然后那个浏览器里面会有那么一小块区域，明明欠在网页里面，但是看起来和网页就看起来不是普通的网页的元素。我记得以前学的时候还写着过什么实现一个倒影效果之类的。对，后来对我就我好像我在做助教的时候，我还写过一个java，就模拟那个auto cat，就是auto CAD那个建模软件。因为对，因为我们学校学那个机械设计的那帮人买不起奥特卡，或者说德国没有盗版。",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:53",
      "text": "所以就自己摘了一个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:55",
      "text": "对，他们必须在那个网页上练习如何水花都开了。但是不可能每个人都每天去机房，所以就做了这么一个在线教学系统，就是让大家去学order can怎么用。我写过这么一个东西，就是用java来做。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:13",
      "text": "这是因为这是一个also cat emulator。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:16",
      "text": "对，当然没有那么emulate的那么强，它只是提供一些最基本的behavior练习，比如说画圆，画方量距离的角度之类的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:29",
      "text": "Apple后来怎么开始从江湖上销声匿迹了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:34",
      "text": "就没有人用了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:35",
      "text": "为什么呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:37",
      "text": "一方面就比如说flash能够流传下来，流就存活下来。一方面是因为flash能够提供很多非常酷炫的交互功能，没错。另外一方面flash可以播放视频对吧？这个在在教主把它提出来是件事儿的之前，所有人都觉得理所应当。就是flash就是来播放视频的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:58",
      "text": "但是对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:00",
      "text": "但是apple t java apple tt没有任何这方面的优势。就是你使用java来写出来的程序，可能是要比使用javascript来写要，或者是flash不对，可能要比用flash或者javascript写没错。Flash使用的语言是action script。Action script的恶心程度其实和javascript不相上下。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:19",
      "text": "它就是一个变种吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:21",
      "text": "对，他们都是acma cripp。对，但是唯一这样一个优点是对于开发人员来说，就是你在写java appliance的时候，你用的是java。当然你没有那么痛苦，但能够达到效果和能够完成的事情都没有flash那么好。所以这其实是一个用户选择的过程。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:50",
      "text": "所以up后来是被flash插件给干掉了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:52",
      "text": "几乎可以这么说，因为在早期，哪怕现在你在某些网站上还是会遇到这样的apple。这个时候网站会问说你要启用这个外部程序，至少我就是如果你把那个plan你关掉的话，他网站浏览器可能会问你，你说你要启用这个外部程序吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:12",
      "text": "因为我遇到我我我遇到这种情况的话，基本上都是可能很用那种很老的什么教学软件才会遇到这种情况。基本上任何新出的后来或者比较大的重点东西都没有用到这个APP的这个技术。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:28",
      "text": "我的意思是那个时候就很多人都会出现这样的什么人。那个时候还有微软的active x对吧？就一大堆插件。那其实走向必然的一个结果就是所有这些插件里面可能只有一两个能够存活下来。那存活下来基本上就是flash和active x存活了很长一段时间。",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:50",
      "text": "不过现在好了，你看像apple d已经嗝屁了，然后adobe也在说不要用flash开发新东西了，然后active x好像也一样挂掉了，在那个edge在edge里面已经没有了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:04",
      "text": "我记得前两年还有很多人在抱怨网银，中国的网银全都是IQX.",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:09",
      "text": "现在好像没有。现在大家都用手机网银，还管你那个浏览器里面怎么样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:14",
      "text": "原来如此OK对吧？这就所以说所以中国的网友你是这样觉得。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:20",
      "text": "根本就那个问题，就只是说因为什么PC整个u case被淘汰掉了，所以大家根本不care这件事情的。现在你说我要去银行转，我要去问那个银行转账的功能，我肯定不会打开银行网站的，打开那个手机网银点点就完了，对吧？或者还有就是支付宝和微信转账，也很方便，对吧？大家也就就随随你去吧，你爱怎么弄去。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:45",
      "text": "OK, 相比之下，德国的网银还是一直建的，而且用着还挺方便的那这个在就我现在转账基本上还是用网网银。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:57",
      "text": "而且对德国不你那个银行有移动版，有移动APP吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:01",
      "text": "可以转账吗？有移动APP，有移动APP，可以转账OK。但是移动APP仍旧就它有2个APP，一个是生成那个验证码APP，另外一个是网银本身。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:11",
      "text": "那我全部装到一起。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:14",
      "text": "因为彦生成验证码的APP可以不需要登录就扫描一个。它不是二维码，它是一个彩色的圆点构成了这样一张图。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:28",
      "text": "然后那也是二维码，你用二维码有很多的表现形式的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:33",
      "text": "不，它它不是QR code，也不是什么，它不是任何已我我已知的二维码，它是一种比如说那个机票上面有时候会出现那个s tech code，对吧？它它什么都不它它不是任何我已知的单色的二维码，它是一个彩色的二维码，它是红对红绿蓝三种颜色的原点排列在一个正方形里面。然后用那个生成验证码的APP去扫，扫了之后会生成一个七位的数字。然后你把这个七位数字填到网页或者是手机网银的验证码那一栏里面，然后就可以转账。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:12",
      "text": "这个所谓合适。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:17",
      "text": "好像这是从早期的德国网银的那个支付生成器一流传下来的。就是以前的网银的使用方法是把一张卡插到一个小设备里面，然后这个设备你一般要花十欧元买，然后你拿这个设备对准屏幕，屏幕上会出现两个闪烁的黑色的光斑。然后这个支付码生成器上面有两个感光元件，会去感受这个光斑的闪烁频率，然后给你显示一个数字出来，然后你把这个数字填到网页上面，这可能是一种用户习惯的遗传。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:53",
      "text": "国内的银行，我忘了是哪家银行，之前也就国内银行也干过，采用了各种各样奇怪的技术方案。因为我记得很早以前好像是建行。有一个他会给你一张纸，纸上有一个不规则排列的一对11个1个矩阵，它每每个就是每一格是一个数字。然后你在登录的时候，你要按照它屏幕提示在哪一格输哪一个哪一行的数，就哪一行哪一格的数字，然后再用输联。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:21",
      "text": "这个其实是一个很古老的密码，就是密密密码本的方式。就见过密码本，小时候玩一个什么样三国游戏的时候，就是每次打开这个游戏就要输入密码本上了。对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:37",
      "text": "XY然后然后魔术纸魔兽世界也用。对，那张纸用几次之后还得就就没无效了，就得再换一张新的。因为他他需要，因为每个人拿那个本是不一样的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:49",
      "text": "对，德国网银也有这样的，德国网银如果方法更简单，就是很多网银。如果你不一定是网银，还有电话银行，如他会给你寄一个100个数字的值，然后你每次要干什么？然后你就可以把这个数字他会说我要你的第56个密码，然后你把第56个密码给他，然后这五第56个密码做对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:14",
      "text": "对对对对我也用过，是之前我用那个18卡卡的时候，他也给我一张纸。",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:18",
      "text": "对，这是密码学里面其实最安全的一种方式，就是不可破解的一次一密。",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:25",
      "text": "这也算是早期形态的什么两步验证。因为你除了知道你的银行账户的密码之外，你还得知道你还得拿着那个小本儿，然后按照那个规则等于是验证你有没有那个小本儿。对，挺搞笑的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:40",
      "text": "对，其实现在的authenticated也都是一次移民了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:43",
      "text": "在这个意义上，现在的那个比较常用的就是那种基于时间的这种一个变动的。妈妈对我。",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:49",
      "text": "我手机上装的google battle net job box，还有什么一大堆gip就对我苹果你是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:00",
      "text": "用哪个客户端？我用那个offer.",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:04",
      "text": "我就用suncatcher 3 dator。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:07",
      "text": "OK他这有什么。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:09",
      "text": "差别吗？难道这里面有什么console的那个after .",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:13",
      "text": "office有一个挺好的，它可以做到那个today view的那个那个里面直接显示几个你解锁状态下是可以不用打开那个应用直接看的。常用的那几个一二K可以看常用的六个两步验证的code OK这还那我。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:30",
      "text": "那我应该去抓一。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:32",
      "text": "然后之前还是蛮是之前我用那个OC的最最主要的原因。他当时说它是有一个一个一个mac上面的一个附属软件，可以通过蓝牙的方式直接读取你那个code，可以剪贴复制了OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:46",
      "text": "但是后来其实用了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:48",
      "text": "发现根本就不稳定。因为那个IOS里面蓝牙不是随时都就它不能一直在后台启动那个应用，所以他跟那个迈克本来还是不稳定的，最后还是发现还是改today里面直接拉下来，然后输一下比较简单，反正就六位数。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:07",
      "text": "OK说到这个IOS蓝牙，这是我前两天买了一个，我前两天车坏了，开到一半的时候会说尤其在高速上面，就是我正在用150的速度.",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:21",
      "text": "超不好意思，你的轮子已经没有了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:24",
      "text": "而在超车道上它忽然显示一个叫，翻译过来就是引擎出意见，降低就是引擎出力降低。OK就大概这么一条。",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:37",
      "text": "就是输出不足。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:39",
      "text": "对引擎出力不足，然后非常尴尬。你再你你再涛百五的时候，右边的车可能130，然后我就差不多了，要不然车像看傻子一样看着我。因为在德国右侧超车理论上是犯法的对吧？他没办法，但是我就是我既不比他快，我也只好比他慢下来，所以他就只好从右侧超过我，然后我再并到他后面去就其实这个场景是非常危险的，因为我在高速上还好。那假如是那种两车道的，中间是虚线的地方，我到左边去超车，然后超到一半突然引擎没力了，然后对面来的车不就把我撞死了，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:22",
      "text": "不，你这个时候不应该减速，然后被等你右边那个车往到你前面之后，你再切回去吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:29",
      "text": "对，是应该这么做。但是如果来不及呢？对吧？如果来不及就是很危险的一件事情。你我在减速的过程之中对你来说很慢对吧？然后我就想说买一个OBD的那个你买了个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:45",
      "text": "蓝牙的对不对？",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:47",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:48",
      "text": "买了个蓝牙内衣。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:50",
      "text": "然后就蠢了。IOS是连不了这个OBD的蓝牙的。对他要求是安卓的手机，所以我被迫要去换换一个蓝牙的版本，换了一个wifi的版本。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:03",
      "text": "因为那个IIOS蓝牙你不愿意的情况下，它是没有那个council的那个那个profile，然后你就读不到那个obd蓝牙传给你的信息。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:13",
      "text": "对，这实在是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:15",
      "text": "是不是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:16",
      "text": "很傻好吧？不过类似事情也不是第一次，就是有很多东西都是安android可以做，IOS不能做对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:25",
      "text": "这个毕竟有什么限制程度不一样。Internationally current.",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:31",
      "text": "对，in the name of freedom I choose enjoying.",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:36",
      "text": "所以后来你那个车怎么一回事？",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:40",
      "text": "是后后来读了一个err code是什么柴油预热的，读数不正常。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:48",
      "text": "然后你买的是柴油车。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:51",
      "text": "那当然在欧洲柴油有补贴的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:57",
      "text": "那那你那个车被召回了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:59",
      "text": "现在没有，我是沃尔沃，好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:02",
      "text": "我不买德国车业。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:04",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:07",
      "text": "不过沃尔沃之后也可能爆出一个什么disco gate.",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:11",
      "text": "也不是没有可能，我一个朋友就也不是没有可能。这句话的发明人回忆说，我是他认识的人里面唯一一个就在德国的华人里面唯一一个没有买德国车的人。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:26",
      "text": "在在德国买德国车更便宜吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:28",
      "text": "反正要比在中国买原厂的德国车便宜。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:32",
      "text": "也没有没有关税。亲。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:34",
      "text": "对，但是出租车还是反正喜欢买不起，就买不起，都不喜欢，所以买两个。你觉得什么宝马M4MM.",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:46",
      "text": "是多少钱？",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:48",
      "text": "五六万、六七万。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:50",
      "text": "不知道那会儿我多少钱。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:52",
      "text": "沃尔沃一万多，差这么多。对，就双门轿车而已。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:00",
      "text": "好吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:02",
      "text": "对，anyway回到这个，反正柴油预热器的一个什么东西，还就是这个东西。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:08",
      "text": "下周要去换柴油预热器等等。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:11",
      "text": "柴油因为柴油因为因为柴油是内燃机里面它这个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:17",
      "text": "冲压引燃的，不是要用火花塞。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:21",
      "text": "但为什么要预热呢？汽油是要用火花塞的，而柴油是直接压下去，柴油就会自燃，就会它就会着着的。然后对在天比较冷的时候，柴油可能要先预热才它。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:34",
      "text": "不能物化是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:36",
      "text": "对软件物化的不完全，然后就会积碳什么的，就燃烧不完全，所以有这么一个预热装置。早期的柴油车里面会有一个仪表盘上会有一个看起来像保险丝一样的东西，一个灯那个灯亮的时候就意味着它的。但是现在比较新的柴油车都没有这个功能，就是说没有这个显示了，但是它还是会默默的预热。然后这个默默的预热如果失败的话，就有可能产生这样的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:04",
      "text": "我明白了，所以后来你是怎么怎么解决的？",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:07",
      "text": "没有解决，下周二师兄。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:13",
      "text": "我还以为你用什么OBD的都什么一个小挂件，然后888弄1下就可以把它修好了。我靠。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:20",
      "text": "这个硬件的东西，零硬件的问题是没有办法通过软件的hack来解决。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:25",
      "text": "之前我也买了，我也不是买，朋友给我一个那个OBD的那种接蓝牙，是接蓝牙的对，没错。然后也是连那个IOS没法连，然后连麦克可以读出来，还但是也不是很稳定，最后还是找了一个安卓手机，上面有一个挺好的应用，连上去才能够把里面的一个error code给消掉。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:47",
      "text": "OK, 那你买的这个OBD还是挺高级的，就是可以program。就是我买的这个OBD是只读的，它只能读出引擎的错误代码。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:59",
      "text": "那。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:00",
      "text": "对，我需要的也。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:02",
      "text": "只是你不能写回是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:04",
      "text": "OK对，你要说我我我把那个article要有一个叫什么来着，反正就错误代码存储器您可以清零，然后把它清零的话，那个错误代码就没了。对，这个功能是需要写的对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:19",
      "text": "没错。不但你这样，如果你只读的话，你打算干嘛呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:24",
      "text": "你读出来没有？想知道为什么？我只是想知道这个，就是因为这条。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:28",
      "text": "你知道信息，你要知道为什么你直接送去机场修不就完。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:32",
      "text": "可是送厂修不是得约时间吗？因为德就德国这一点很讨厌，就是你不管干嘛你都要事先约。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:37",
      "text": "有没有就把所有的资本主义发达国家都这样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:41",
      "text": "对我想知道这个东这个问题是不是严重，是不是很严重。因为在网上搜那个错误代码的时候，有些人说他当场就停下来，然后直接让拖车把车拖到修车厂去了。我就想说这个问题到底是严重到这个程度，还是说我可以继续开一阵？",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:59",
      "text": "哼现在你的结论是可以继续开一下。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:03",
      "text": "对，反正每天开个几公里是没问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:07",
      "text": "所以你看这种车，这种蠢东西，他的这个reporting实在是太差了，是吧？为了你知道这个问题到底严不的严重性情，你还得专门买一个东西去读出来。还他为什么不直接做到仪表盘上显示呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:21",
      "text": "因为这是一个你要给那些不那么taxi的人看一条非常复杂的错误代码。因为这不是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:29",
      "text": "它可以翻译为比较容易理解的文字。那其实是为了这个其实是为了保护维修店的利益的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:40",
      "text": "翻译成比较容易理解的文字，比如说维请维修，可是最容易理解的文字不就是请把你的车带到4S店。就很多像没有这样。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:49",
      "text": "就好像我们做写代码一样，你你你你出错你还分个优先级，对吧？你会有这个warning critical，有debug而已对吧？那你好歹出一个这个等级，我到底是要就地就不能开了，等着救援，还是说可以开到就近的修理厂去弄一弄，还是怎么样，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:05",
      "text": "你起码有这个还是有。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:07",
      "text": "就是没有，我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:08",
      "text": "我是大部分车是会有什么？比如说手册上会写，比如说这个红色的发动机的灯亮起来的时候，你就应该立刻考研停，然后去店里面修。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:21",
      "text": "那当时你出那个的时候，它也不是亮了那个红色的灯吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:25",
      "text": "对他没有亮这个红色的。但是我自己想要知道这个男人到底有多严重。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:30",
      "text": "对我就我的我的看就是很多车里面它就不具备这种区别对待。或者说告诉你一个大致的一个自我诊断的一个结果，就是告诉你说要修了，出了什么事儿不知道对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:44",
      "text": "傻不傻，好吧，但不管怎么说，OBD接口这个东西，我觉得如果你真的对车的状况感兴趣的话，还是可以买一个，然后用手机看一看。尤其如果你有一个android手机，你可以得到很多消息。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:01",
      "text": "那你你可以去买个那个谁之前他们就经常在打广告，那个叫automatic，那个可以恋爱，那时候在podcast.",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:10",
      "text": "上面都广打广告的那个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:11",
      "text": "对啊对对，那个那个已经我们前年还是上前年就已经有了，它就是一个OBD的蓝牙端口，但是它可以跟iphone共同使用OK。然后他会告诉你常见错误，会翻译成我说的人话，告诉你到底严不严重，他还能大致地记录下来。你我想想应该是你行车的那个就通过那个叫什么来着，你行车的这个状态，比如说你是加速了多少，然后这个有个这种曲线，好像是OK，这还挺有用。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:43",
      "text": "这个什么dash command之类的APP也可以。对，原理都是一样的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:48",
      "text": "就是用OPT。但是说它这个包装成产品感会比较好一点的，据说是这样的，然后也贵了，贵很多。你那个OBD的单果多少钱？我。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:59",
      "text": "二十欧，可能。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:02",
      "text": "那你还是买的挺贵的。其实一杯上买大概三块钱，一三三刀一个十五。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:07",
      "text": "15应该是wifi的版本要比来了曼贵。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:14",
      "text": "那肯定没那么复杂一些。然后那个automatic那个好像100刀OK好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:21",
      "text": "也值得。其实如果你真的对自己的车的话有兴趣了解的话，因为去4S店修可能一次就要两三百、四五百。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:34",
      "text": "对你你看这就是我为什么不喜欢car ownership的一个很重要的原因。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:41",
      "text": "因为什么事情都要自己。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:43",
      "text": "操心的这太多啰嗦的事情了。我要的是你把从把我从A安全带到B我财务管理到底怎么出了什么问题？",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:51",
      "text": "说也是对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:54",
      "text": "所以你看现在就是一个滴滴重度用户。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:00",
      "text": "好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:02",
      "text": "好像扯的有点远。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:04",
      "text": "对，我们觉得将来可以开一个副节目，就汽车恐慌，发动机恐慌。对，其实IPN是应该开一档汽车节目。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:17",
      "text": "但是不对，应该先开摩托车节目。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:21",
      "text": "我的事情没有听，受众群太少了，我当然是举双名字。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:25",
      "text": "我都给你讲好了，就叫Z。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:30",
      "text": "Are not, 好吧，那我们还是扯回来好了。OK.",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:36",
      "text": "接着说我们的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:38",
      "text": "第二条是天哪才说到第二条旧文，bash for windows。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:49",
      "text": "微软最近是不是疯了？我靠。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:51",
      "text": "然后我倒觉得微软现在终于清醒过来了，你知道一个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:55",
      "text": "意识到什么大势已去是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:59",
      "text": "对，意识到自己不能再逆历史潮流而动，不能再口出什么linux is a cancer之类的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:11",
      "text": "哼他他已他已经被cancer上升了。反正。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:15",
      "text": "对对对，现在微软已经被这个看色所同化。我记得有一个贴在那个保险杠上的贴纸就是we are linux，不，we are windows, we are legion. We will conquer you.",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:32",
      "text": "这应该是点出star track里面那个boy，就是有一个种族的boy，他们里面的人没有个体思考的意识，然后一定要同化其他的族群，然后把他们加到自己的这个所谓hiving wind。原来然后windows就是这样一种感觉，但现在法现在是法国现在是microsoft被这个hive mind所同化，在这个windows里面加了一个linux子系统。对，这个是3月30号的新闻。天哪，我已经过去将近四个礼拜了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:13",
      "text": "一个多月没有。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:15",
      "text": "一个多月了，今天是啊是不是快乐？real。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:21",
      "text": "这差的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:22",
      "text": "各位听众朋友们，今天我们录音的这一天，4月23日是real先生的生日。Real请问你多少岁？",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:34",
      "text": "这个能讲吗？这个不能讲。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:36",
      "text": "我靠为什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:39",
      "text": "那你讲我显得又比你年轻了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:41",
      "text": "我靠，没关系，我已经。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:44",
      "text": "习惯了，不能说不能说好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:49",
      "text": "但是对我们的real终于又长大了一岁。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:52",
      "text": "接着说这个dash for the windows。他其实后来我看了一些相关的资料说，其实原来NT的时候已之前就已经有过一个basic model对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:02",
      "text": "对，但是那个东西从来没有。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:05",
      "text": "那个那个时候微软觉得我要把别人都干掉，所以就虽然有虽然技术上是可行的，但是并没有去推这个东西。好像。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:14",
      "text": "对，因为但是现在时代不同了，所以那个时候的这个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:20",
      "text": "windows江河日下，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:22",
      "text": "对，以为会失败的战略现在被拿回来。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:25",
      "text": "其实你要先考虑就是说为什么微软会出这么一招。我们先不说技术层面的问题，就先说Y。他为什么要做这个最吸引linux的程序员？",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:36",
      "text": "我觉得这可能是那个a zoo strategy的一部分。就是我觉得这个东西的出现还是为了服务端考量，就是微软想到说好吧，反正服务端的这个软件我是干不过linux上面的，linux平台上面的东西就是我在或者说微软说好吧，我在服务器端是不可能成为或者重新恢复成为一个占主导地位的平台了，对吧？那退而求其次，我至少可以在上面卖服务，卖软件。我要在床上卖服务，卖软件的话，就面临这个问题。我既然没有这个平台，那我怎么跟这个平台上的软件和服务互通呢？那难道我要逼迫我的用户去使用一个linux来操作我的平台吗？就操作我在这个平台上面的软件。那我不如退而求次，提供一个专门用来操纵服务器组件的接口，我觉得就是这么一个战略。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:37",
      "text": "因为我我是这样之前接触到的一些这能说的不能说的案例。我有这么一个感觉，就是微软他想把一些现在比较流行的，在linux上面起源的一些服务服务端偏向的工具弄到大平台上去。比如最简单的docker对吧？但是我去去回头一看，发现移不过来。因为docker它是完全基于，比如说它是基于一个linux系统的对吧？你比如说你打开的那个那个叫什么c groups，就那个什么的内核才有的。然后doctor的客户端也是虽然能跑在windows上面去，但是坑比较多。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:25",
      "text": "然后还有就是整个比如docker found里面的脚本也是基于都是基于batch来写的对吧？对，他这样的话就很不方便大家用都会发现那些做后端的，然后还在用windows，基本上都是跑着一个虚拟机，或者是连到SSH到服务器上去操作。整个windows的可就可以是非常就是一个显示屏幕而已，就整个windows是一个terminal而已。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:52",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:52",
      "text": "但我觉得可能对它长远来看也不是特别好。因为包括一些新的组件，也不会说基于这种场合来考。然后毕竟微软从什么former的developers，他还是明面上理解这件事情的，至少你看像经过了这个windows mobile这个惨痛的教训之后，发现没有人鸟他是多么难受的一件事儿，对吧？所以现在要把这些人抢回来怎么办呢？那只能说是那多给你点甜头了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:28",
      "text": "英文里面有个专门有一个词叫什么condescending，就是翻译成中文。因为什么？屈尊降贵。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:35",
      "text": "的降低身段。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:37",
      "text": "来满足你这种感觉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:42",
      "text": "这个还挺有趣的一个事儿，还包括之前我们提到过的那个要把microsoft这个server port的winner里面去，差不多也是类似的事情。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:52",
      "text": "对，嗯。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:54",
      "text": "所以这次这个bash photo是怎么实现的对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:58",
      "text": "就是我之前想说好吧。那难道不过就是一个另外一种就是像什么C或者是啊之类的那种重新编译的形式吗？难道不是那样的？后来才发现，这一次也不是对阵仗还是蛮大的。它实际实现的原理居然是直接把一个五本图上面的那个ENF，就是相当于linux下面的EXC的格式拿过来。Bit for bit, check some for chesson run run, 就a binaries running directly in windows。这个还是挺挺高级，就二进制兼容的这么一个子系统。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:40",
      "text": "没错。所以他是做了一个什么？中间做了一个翻译层是吧？一个兼容层。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:47",
      "text": "好像是说他在windows的NT的内核上面加了一个linux内核。然后在在这个内核上面暴露出一系列就是直接在二进制层面上兼容system call的一个API。",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:04",
      "text": "对，其实你看一下这个事情还是蛮神奇的。就是说之前有那个links上面有一个叫做Y的东西。对，葡萄酒那个词Y类似。对，它的缩写是一个Y不是模拟器对吧？对，但是noy的一个重要的功能是可以在linux上面直接运行，不经修改一样与运行原生的windows程序。对，然后等于微软才会做了一个算line。有人说叫他应该叫line .",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:36",
      "text": "reverse wine.",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:37",
      "text": "就是line is not next x angulation。然后他等于是我看了一下一个相关的资料介绍说等于是做了一个翻译层，把那个N就把把linux原生的那些banner ary的程序，对linux kernel的一个系统调用转换成对NT对这个内核的调用。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:03",
      "text": "对，其实仔细我觉得这句话说的简单，你里面的工作量还是非常大的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:09",
      "text": "我感觉就感觉好蛋疼。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:12",
      "text": "对，真的就你会发你会想想这两个系统真实千差万别，什么字符宽度，什么文件系统，然后什么还有。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:25",
      "text": "那个device.",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:28",
      "text": "的对驱动器的实现。天。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:32",
      "text": "所以说到这个事之前，我们要不得不提之前什么中间还没面世就夭折的那个所谓的安卓的那个那个层，那个虚拟层你还记得吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:42",
      "text": "当时不是说我们还介绍过？",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:45",
      "text": "对对对，当时不是windows mob，他说要直接可以运行原生的安卓程序，不进行修改。我觉得原理跟这个是差不多的，就提供一个安卓的这么一个一个就一个一个的compatibility layer，一个兼容层，然后让安卓以为它跑到一个安卓系统上面，但其实背后都是由这个windows的内核来实现的。在原理上应该两个是差不多的，但时间肯定是差很远的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:11",
      "text": "对我觉得这一点真是，微软也是下了很多学问，就为了你看那个为了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:18",
      "text": "扭转颓势，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:20",
      "text": "对，看那个演示好像很简单，它就是启动一个terminal，然后输入一些linux命令，然后按回车，它这些命令就会执行了。你会觉得他说这有什么神奇的这这这不是很多人都已经在做的吗？这是你在观感上，它好像跟一个SSH或者跟一个什么segment之类的没有太大的问区别，甚至跟什么github那个githa command line for windows都没有太大的差别。但是你会想说，我靠他微软在做这件事情，他做到了一个什么深的地步。然后你会觉得我靠这是真的是微软，不是以前那个微软在windows。Great again.",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:07",
      "text": "不但他做了这件事情之后，好像就会挺麻烦的，就winter上会出现三套common line的东西。一个是最老的最破的那个dos promote对吧？那个叫CMD的那个那个窗口，然后是windows vista还是windows 7里面出的那个叫parshall。对，然后不对，四套。然后是这个叫bash for windows，就是windows subsystem for the next，然后还有第三方做C格文那一套东西。对我觉得此时。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:39",
      "text": "心情最复杂的应该是power shell的重度用户。他们会说。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:48",
      "text": "本来是皇太子，最后被贬出了儿子。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:51",
      "text": "现在感觉好像要废了我另立太子。但是我觉得这类似的历史在微软的历史上已经演上演过很多次了。什么civilize对吧？还有什么什么这个com时代也有一大堆，就不OLE好像也是这样，也是类似一个下场OLE.",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:14",
      "text": "我还当时学什么学个fox pro的时候还用到。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:18",
      "text": "过这个东西天。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:22",
      "text": "My fox space as a fox fox fox space.",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:25",
      "text": "fox is fox space space fox pro是fox face的升级版。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:30",
      "text": "OK fox pro是不是后来的access的前身？",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:36",
      "text": "不是，是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:36",
      "text": "两条线是吧？我有点记不太清楚。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:40",
      "text": "我我以前我我以前不是叫meta fox，然后如果在IRC上，那个IRC客户端不是会让你填一个用户名，然后还让你填另外一个。就是说如果你的你选了这个用户名被占用了，另外一个用户名是什么？然后我在那个用户名里面就会写填meta fox pro。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:05",
      "text": "自以为很妙的梗。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:07",
      "text": "对，挺好的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:09",
      "text": "所以我觉得对power shell的用户们也不用太伤心。因为你既然入了微软的，你就要不停的学习对吧？那其实在links世界里面也是一天到晚就要不停的学习。而且微软方面至少会给你一个战略说好吧，这个东西是我们接下来一段时间的重点，你不管信不信，他至少会说这句话。可是在linux世界里面，可能华明天忽然黑坑you上面出了一个头，你就会发现我靠这玩意儿不学不行。对，所以其实在哪家都不容易。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:43",
      "text": "这个还是好的。以后就说指望着你在我们在这个linux上面和max上面用的比较熟悉的一些工具，可以直接在windows那里面跑了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:53",
      "text": "对，比如说不是有个笑话，说以前RM dash RF行，这个trick只能骗一骗小白。现在我靠所有的windows用户可以真的执行了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:12",
      "text": "对，这个不错。到时候要应该做一个什么点，BAT是吧？等一下他需要可以直接导下的文件了，可以双击就执行的。他权限怎么办呢？好奇。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:25",
      "text": "不知道我其实你看了这个新闻之后，我从来没有用过它。我理论上我是可以重新启动到windows里面或装一个然后试一试。但是你为什么。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:35",
      "text": "要做这么蛋疼的事情？",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:38",
      "text": "对我能重新启动到windows里面打心愿的游戏的这件事情都没有做过来，何况去装一个dash子系统。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:48",
      "text": "不过mac上面的也其实或多或少有一丢丢这种问题。因为mac它毕竟不是linux，它是一个BSD的系统。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:57",
      "text": "然后对，有些命令在你你从那个，如果你是你读了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:02",
      "text": "就他不是gu那一套东西吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:04",
      "text": "很火的那本书，什么copy paste from slag overflow。对，最近推特上的那个密码，就是一堆程序员在贴各种各样的被篡改的already的书名，你有注意到吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:16",
      "text": "我看到了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:18",
      "text": "对什么how to complain the customer，或者是什么how to copy paste from stack gora floor。中国也有一系列什么C加加从入门到放弃。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:32",
      "text": "你你还别说，我真的是看完世界上那个那个大部头，真的是看完就放弃了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:41",
      "text": "我是初中的时候读的有什么21天精通C加加，我靠我这一辈子都不要再学这样的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:51",
      "text": "对你会觉得这东西他那个叫什么内生的复杂度已经这样了，还了得。我靠。",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:57",
      "text": "对，然后对说回这个梗，就是你会觉得你会发现在sager flow上copy pace下了命令，在这个mac上面很有可能是用不了的，因为有很多东西都不一样。然后single flow的很多问题就是什么？比如说我想要找到一个巧妙的方法来one line解决一个特定的文本处理的问题。然后什么但凡涉及到set或者是什么grab之类的，one liner那个tag flow上最高的答案下面肯定会有一段评论说，这个在麦克上面保不了。然后要么是原答，主要么是下面的评论者就会说好吧。这个是一个如果你写这么写的话，就给出另外一个方案，说这样应该是在所有平台上都可以跑，或者是给出一个mac特定的版本，这个很蛋疼。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:50",
      "text": "哼。但就像那些命令行工具，有些还可以就是想办法兼容一下，或者它输出格式命令行参数不太一样，可以整一整。但有些东西是内核级别的就没法弄了。比如说又说回那个docker dock是没有办法再延生在BBST上跑，因为他去elec groups.",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:10",
      "text": "其实这个BS也比较冤。因为BSD上面其实j jil出现的要比docker要早很多。",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:17",
      "text": "这个是没办法，这个是毕竟是什么太小众，没人爱，就没人开发，没有google在前面推，哪有后面的这些事对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:27",
      "text": "天命不在于此，没办法。但是我觉得这件事情其实对于mac用户的影响，也对于麦克也有一定的影响。就是可能会有一批开发者他收购了mac.",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:42",
      "text": "然后转回去windows，或者也是他一直。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:47",
      "text": "想要买个mac就是因为想要获得这个操纵服务器的便捷intern probability。但是他又不喜欢麦克这一套，你在切换到mac的时候有一大堆使用习惯要转换的，他只是想要用那个命令行而已，对吧？那他现在有一个全新的选择，就是直接装一个linux system，也这么说没错。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:13",
      "text": "对，这个坑不知道有多深，大家自己慢慢去踩。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:18",
      "text": "对，可能会影响麦克销量。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:23",
      "text": "这个倒不至于。现在看那个一季度的今年一季度的这个PC的销量是啊出货量下降9%点几，应该是到了十年前的水平了。OK然后好像增长的也就麦克和哪一家旺旺。所以其实现在我们很多人用mac他也像我们这种还是用另一行的，就开发者了，其他人用的也。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:48",
      "text": "少了好吧。可能对开发者购买的基金的数量，应该对于整总销量的影响不会。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:59",
      "text": "特别大对对你看吧，还挺期待今年大陆地图上那个麦克会到底长什么样子。对，不是说要改名了吗？要改名叫Michael s吗？Macos macos呢macos有macos.",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:12",
      "text": "我觉得麦macos挺好，麦克风名字挺好，麦克斯就把。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:16",
      "text": "那个叉去掉了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:18",
      "text": "对，回归到早期的那个半个机器，半个人脸的那个。因为。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:24",
      "text": "那个那个差，我老是就想着它是十，对吧？罗马数字的10，但是马上要出11了的话怎么办呢？对的，已经是11了。我们现在是10点11，对不对？",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:40",
      "text": "10点11样，那个X10还是不动的，代表主完好。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:44",
      "text": "所以前面那个version 10其实已经没有什么本质的意义了，就可以直接拿掉了。对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:50",
      "text": "所以这个不断进化就可以了。对，就像windows一直叫windows是挺好。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:55",
      "text": "没有，还有windows 6 700没有6不.",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:58",
      "text": "我那是如果windows一直叫windows，windows整个命名就是对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:03",
      "text": "那个windows 10不也说是最后一个大版本吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:07",
      "text": "对，是这样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:08",
      "text": "那以后就没有windows，他们应该叫十点几，我估计会加上一阵子。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:13",
      "text": "应该会就直接就其实向用户隐藏隐瞒版本号，就是我一直在用最新版本的windows。是。然后只有你在需要知道的时候，才会像什么去看chrome当前的版本号一样去看。是一个一串数字。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:30",
      "text": "就是我觉得微软做这件事情是其实是挺挺麻烦的，挺难的，他要兼容的系统太多，就是家都用最新版。因为他要做的那个兼容性测试的那个那个数量级不是别人可以比的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:44",
      "text": "好吧。它的历史包袱太重。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:46",
      "text": "但各种各样奇怪的机型组合，兼容机？没法弄。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:50",
      "text": "对测试的。说到macbook，最新的那个retina macbook你要买吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:58",
      "text": "就打算买，但是现在有点纠结。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:00",
      "text": "他那个是买给你自己还是买给你了我自己。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:03",
      "text": "他已经有一个上一代的那个那个就他够用了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:07",
      "text": "难道不是你买新的给他用，然后他把那个淘汰给你用？",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:11",
      "text": "我不是应该各自独立升级吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:14",
      "text": "OK, 你们的婚姻关系还是比较。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:18",
      "text": "正常的，没有婆媳关系是吧？最新款的有一个比较纠结的事情，就是我不知道它到底能不能接一个4K的显示器，然后跑60赫兹的刷新率。那我看了一下这苹果官方的那个text back下面说是最多到30赫兹的，就4K的话，但是。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:41",
      "text": "4K30，但是我看你4K是拿来干嘛？",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:46",
      "text": "因为那个那个mac屏幕只有12寸，而且那个比较小，你也不可能把那个作为主屏来用。虽然也凑合，其实但是你想用的舒服一点，你还想接一个外接的大屏幕，然后把它作为dock到那里比较方便一些。我想买它纯粹是因为出差的时候，它比较轻便好带。但是在家的时候我还是想用一个大屏幕，比较看起来舒服一些，这样的话就会有这个需求。",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:15",
      "text": "我想要一个retina的外接的，至少是1080P的屏幕，就是4K屏。但是4K屏现在macbook它不是只有一个USBC口输出。苹果目前官方的转接头只有两种是可以输出视频的，一个是USB转HDMI，一个是USB转VGA。VGA显然不可能上4K了，这个就不用想了。HDI能上，但是我看了一下它的官方标称，只支持到30赫兹的刷新率，就会会有一点点卡的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:46",
      "text": "我觉得如果你是做文本处理或者是展示的话。",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:49",
      "text": "30赫兹还可以凑合是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:51",
      "text": "除非你要看视频。",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:52",
      "text": "那的确在30号看视频根本其实不用，大部分视频就只有24。对，其实反而没有这个问题。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:01",
      "text": "他60个游戏也是个问题，但是macbook不可能对他玩。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:04",
      "text": "让他玩游戏不太现实。不但是滚屏的时候，他那个就是所谓smoothness OK就会成问题了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:12",
      "text": "有的有道理就是你在刷网页的时候，你会感觉到它在卡。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:17",
      "text": "对，还是包括你那个光标的移动，也感觉是一卡的。对，所以这是一个挺糟糕的事儿。但是我后来去查了intel的官方的文档，macbook里面搭载的那个叫intel HD graphics 515的板，在那个IGP它是支持4K输出的，用那个display pot的这一个接口。然后我看那个apple的官就是官方的那个text back也说这个USB接口是支持原生display port输出的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:53",
      "text": "我好像看到一个一转四的接口，就是一边是USBC，另外一边是USBA的接口，一个电源口，一个HDMI口和一个三点pod的口，就是display port的口。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:07",
      "text": "有可能有有有有有这种转接头吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:11",
      "text": "还是我看还是我记错了。第四种并不是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:13",
      "text": "那肯定不是，而是另外一种肯定不是苹果官方的。反正。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:17",
      "text": "好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:18",
      "text": "反正现在官方没有一个USBC转display port输出的这么一个接口。也就是说即便我有一个4K显示器，我也接不上去，就接不到60赫兹。例如display port输出。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:36",
      "text": "你的确是个挺严重的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:41",
      "text": "对，所以正在纠结是要买这个，还是等今年的更新的那个micro pro。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:49",
      "text": "我肯定是要等更新的micro pro，因为便携性对于我来说不是一个特别大的诉求。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:54",
      "text": "其实我觉得你不带出去，其实我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:57",
      "text": "你说你出差的时候需要一定变性。但是我想请问说你出差又不是徒步，对吧？你你你电脑也是放在包里，然后上车就放在旁边，然后到酒店去酒店的过程，你或者坐车什么的，你不是一直背在身上，为什么那么强调重量？",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:16",
      "text": "因为就是要一直背在身上。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:19",
      "text": "你不是靠自己，你就你你不是你不需要背着背在身上一直走路，还是你真的有这个需求。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:25",
      "text": "那我又不是一直开车出行，打车有时候也要等一下吗？还要上下楼什么的，就是能轻便肯定是一个更好的一个属性。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:36",
      "text": "你太瘦了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:39",
      "text": "应该练的壮一点，这个问题就解决了是吧？应该是健身了没有？对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:47",
      "text": "我是觉得我是个人没有体会到带一台比较轻的电脑和一台和和我现在这台macbook pro之间有什么本质上的区别。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:55",
      "text": "因为我之前我带过我太太那台出去出国才试过一次，感觉真的挺好的，对吧？现在我又没有什么特别计算要计算能力的要求，所以性能上应该还好。主要就是说这个外接屏幕这件事情确实是一个很大的挑战。OK但还有一个方案就是说那就不要买这个了，买个什么ipad出差就好。因为出差大部分什么看东西。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:20",
      "text": "我觉得你们商务人士好像没有什么太多的使用全尺寸键盘的需求。我反正出我出门。",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:27",
      "text": "要其实不是的，要写很多邮件。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:30",
      "text": "好吧。蓝牙键盘就带那个键盘的cover.",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:34",
      "text": "对，这个我也有考虑过。用一个ipad然后配一个无线键盘，或者直接买了一个ipad pro，然后带apple什么sr keyboard。那个东西我去店里试了一下，那个手感还是差一些。最关键的是在飞机的，他那那不能放在膝盖上用，因为它重心低。不对。对，只能放到一个板儿上用放板上的话就会有一个问题，比如说你在那个飞机的那个经济舱，对吧？我们这还是只能做经济舱，后面放起来会有点坑，然后那个键盘也没那么方便，所以我现在挺纠结到底要怎么办。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:18",
      "text": "手机上有ipad，告诉我们，如果想用，如果想好好的用type net，请每次飞行都买商务舱。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:26",
      "text": "没错，就会好很多体验对键盘。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:30",
      "text": "体验不好怎么办？请买商务车。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:33",
      "text": "但软件也是一个问题，就是经常我其实想尝试很久用那个ipad来做一些办公的东西。但是你发现有一圈有一些这种基本的文档处理还是很不方便的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:47",
      "text": "在市场的软件在一台纯粹type t上用还是比较淡的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:52",
      "text": "主要是没有光标。然后你要操作，比如说一个电子表格的话，你就停产了。你只要在这里拿起来屏幕放下去，起来把屏幕放下去。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:03",
      "text": "对那这个时候因为有听众会跳出来说，谁让你买surface对吧？Surface没有问题。",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:09",
      "text": "小粉丝最近不是被黑的很惨吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:11",
      "text": "那是做工的问题。品品控包交互上，对，但在用户交互上，我觉得surface的如果你习惯了它一套的话，那其实还是很舒服。",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:23",
      "text": "Facebook我同事买了一个，然后我用了一下，我觉得不太好。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:28",
      "text": "其实我也是去店里面摸了那个，我之前不是那个什么surface book出来的时候，咱们两个一直在那边嗨，然后说一这个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:36",
      "text": "的这个解决了是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:38",
      "text": "Shut up and take my morning, 然后到店一摸，我靠我的have感觉。对，这感觉我靠这是那那不是华强北什么人想出来的点子吗？怎么会做的这么烂？",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:55",
      "text": "所以现在就很尴尬了，就是喜欢这个ipad这种for fact这种重量大小和也很多时候的那个交互方式。比如说就看电子书、看文档、看报表什么的都都挺方便的。但是你再想用它做点什么事儿，就会发现好像不是太好。",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:16",
      "text": "不知道十年之后会变成什么样，可能会有一种fusion操作这种出现。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:21",
      "text": "那不就是这不就是windows吗？Windows 10.",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:24",
      "text": "就所有人都敢用windows 10。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:26",
      "text": "不是我其实我觉得这个是这样，就是我们还处在那种过渡时期。但是你回过头去看早年的那些，在那个故意出现之前，大家用那个你记不记得最早用那个WPS的是在那个字符界面里面弄的对，那个叫什么什么系统，我现在想不起名字了，就叫WPS。不是，他他起了CED。对对对，CCE你还记得这个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:51",
      "text": "当然我靠我有时候在想，就是我时候我现在有时候在那个vim上面写东西的时候，就经常会想我现在操作系统，我现在操作电脑编辑文本的方式，其实跟十岁的时候没有什么差别等等。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:05",
      "text": "但你这中间我们用terminal是停留在就等没有进就没有。怎么说呢？",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:11",
      "text": "就是和70年代都没有什么差别。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:14",
      "text": "没错，因为中间你那个故意的发展的这个好处，ID的好处都是我们被我们主动放弃了。对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:21",
      "text": "反正这所见即所得的所得对于我们来说并没有太多的注意。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:25",
      "text": "不光是这个问题，还有包括像比如说因为假设我们用这个IDE的话，或者说我们不用term，不用基于字符的界面的话，是基于这种图形的故意的界面的话，起码很多显示的内容它是更方便的。比如说你可以显示这个什么project tree，对吧？显示这个debugging information。那些其实要好很多的，因为不是每一个信息都需要占那么大一个字符的位置，那些可能是一些很分享东西就可以。但是因为你习惯了某一种操作方式，然后有希望一种一种解这种限制。你反而会觉得，换一个好像太麻烦了，然后有没有觉得感觉到明显的好处，然后再重新学一下，学一套东西就不是很方便了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:28:09",
      "text": "我觉得有点现在像我们用那些日常的办公软件也好，切不到这个平板上面去，可能很大程度上就遇到这同样一个尴尬。就是我觉得之前什么office excel都用的挺好的，用鼠标点来点去就效率也挺高的。各种流程，worker都做的挺好的。然后你发现他用一个全新的，还没有被怎么被优化过的一种使用过程，就会觉得很别扭了。所以其实是不是说应该后面会有一堆的新的基于这种叫叫什么来着？触摸的交互模式，或者是用那个笔的那种交互模式来操作我这些工作流的一种新的软件。不是说我们直接把office那套件或者说其他某个编ID的环境挪到这个ipad上面去。这么简单粗暴的一种方法，那种感觉就好像内测比不好。因为其实在贵的情况下，用一个terminal emilita，其实效果是更好的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:17",
      "text": "对，的确这样。对，而且你可以有很多个成本来说，就是在自由的切换来切换去的感觉也挺好。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:27",
      "text": "对啊对对，字符界面也可以，什么control f1、control f2.",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:34",
      "text": "t max我一直在力推。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:37",
      "text": "t max也是一个方案。对对对，没错。所以说到这个，我最近我专门去下了那个v which studio code回来用。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:46",
      "text": "感觉怎么样？",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:48",
      "text": "他们说评价还不错，然后我打开一下，感觉确实还可以，就有一些讨巧的设计。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:56",
      "text": "对，比如说我记得印象很深的一个就是你写了一个CSS selector，然后鼠标悬停在上面它会给出一个范例，就是这个CS selector对应的那个HTML structure大概是什么样？对对对，当时在推上看见简直是惊为天人。这个玩意儿怎么早就没有人做？",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:18",
      "text": "所以其实你看我觉得就现在的这个我们现在丢掉或者怎么样，其实完全不是因为这个平板本身有多少不好，而是说我们还没有想出一个在那上面能够怎么更好的完成我们现有的工作，而不是受到现在的调整框框限制的这些新型的软件出来。对，是这样。所以你要不要去写一个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:45",
      "text": "想法都太好了，但是真正推动历史前进的不会是我。",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:49",
      "text": "你是说我们要先死在沙滩上才可以是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:54",
      "text": "对，有可能十年之后我们会觉得就大部分人的使用习惯，会议中我们不能接受的方式。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:04",
      "text": "就等我们老死的，等我们退休那天去看后来的那个小朋友们，这怎么弄？都是在里面选空操作一个虚拟空间里面的对象。",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:13",
      "text": "对，你们不觉得别扭吗？你们不觉得累吗？这手指什么都摸不到，怎么可能这种感觉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:23",
      "text": "对你你看最近magic leap发的新的demo视频没？",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:27",
      "text": "我听很多人说过了，但是具体内容是什么，我一直没有时间去看到底是什么。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:32",
      "text": "其实也没什么，就是他在一个真实关键投影的一些信息，然后你可以去交互操作他们OK.",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:40",
      "text": "然后是裸眼。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:41",
      "text": "怎么就我觉得这个东西，他说是直接通过他们叫一个眼镜拍的，就是没有经过任何后期处理。但是谁知道，当年那个什么，后来任大姐这么说的出来用的时候也不就那样了，对吧？所以这个事情还是要持适当的怀疑态度。但我觉得那个就好了，就不用考虑到底是要有平板，还是要有现在的那个屏幕了。因为它在那么大的一个尺度上面，我觉得这两个就可以可以融合了。哼因为你不存在这个交互的问题，整个空间都是你的画布，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:21",
      "text": "不存在说对，也许将来就不存在一定要订商务舱的问题了。反正你搜一搜是戴着一个眼镜，戴着一个哼把你和身边的座舱隔离开来的眼镜。然后你在这个虚拟世界里面完成你的工作，别人看不到你在做什么，你也完全不需要去操心前面椅背离你太近这种事情，因为只要他不压到你的眼睛上就无所谓。也是可以的，也想象力挺好好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:51",
      "text": "今天差不多到这里。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:54",
      "text": "对，我们本来还有一条是什么？互联网运营管理办法，就是那个要求所有的域名都必须在中国境内注册的那样一个那样一条政令，行政命令，但是反正是件很蠢的事情，就不展开头了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:13",
      "text": "为什么你会说他蠢呢？",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:17",
      "text": "准是从网站运营者的角度来看，就你要从国家对管理者角度不少。但是对对蠢的意思就是这件事情对于就对于我们这种升斗小民来说是比较讨让人讨厌的。就是你要在中国开一个网站，你必须在中国境内注册这个运营。那也就意味着其实你的所谓国际化，或者说你脱离政府监管这件事情就不可能了。就他看你不爽的话，可以随时把你让那个域名不存在，那你你就无所谓什么。好吧，我在国外有一个网站，然后你可以来看。这件事情在中国可能就将来就不可能了。就是因为你的域名在中国根本不存在你，而不是你在中国没有办法连接到网站这么简单。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:08",
      "text": "对，这个白名单制应该是一个目前看来板上钉钉的事情，时间推的早晚的问题了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:17",
      "text": "对，这只不过是在温水煮青蛙的过程之中，身高一度。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:25",
      "text": "对我我我我想这里其实有一个挺好的事情，就是互联网的全球化这个趋势已经玩完了。我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:37",
      "text": "互联网全球化的幻梦已经破灭了。我会这么说。对，因为互联网这个东西，只要政府存在，对互联网的监管就不会停止。那是当所有国家当所有国家的政府一致认为互联网是一片必须需要被监管的空间的时候，所谓什么自由网络中立这些事情都可以去死。",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:04",
      "text": "没错，就还是之前回答某一个推友的回复，说你不可能指望一个所有的硬件基础设施都是被主权国家掌控的一个东西，是可能长期的维持所谓自由和开放的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:27",
      "text": "对你不可能指望一个在由政府所控制的世界里面推行一种无形的感想，对吧？就你要说当如果真的有一天什么那部科幻小说叫什么来着？Snow crash。对，snow crash里面那个那个世界不就是无政府主义的世界吗？那一切所有的国家都都政府只在非常小的规模上存在。你可以自己选择说这个公司管理我的这件事情，那个公司管理我的那件事情。然后实际上不存在一个大一统的政，任何地域之内不存在一个大一统的政府，只有在那样的世界里面，可能说网络才是一个真正不受监管的空间。但是在目前我们这个平行宇宙里面，这是不可能在这个位面上面，这是一场幻梦。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:18",
      "text": "所以本质上来讲，open web需要的实现的前提是去就是叫什么去国家化。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:32",
      "text": "对，就是如果有一天整全人类可以站在一起，什么欢乐颂的歌词终究成真的时候。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:40",
      "text": "可能有看。好，不知道还能不能看得到。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:47",
      "text": "如果明天外星人入侵的话，可能中午这个是全球式的国家就会被摧毁。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:53",
      "text": "但是那不会出一个世界政府。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:58",
      "text": "就有可能全世界人民被迫在疫情的威胁之下团结起来，然后国家就此消灭。但是这前提是外星人得来。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:10",
      "text": "不用外星人来一个小星星也可以。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:15",
      "text": "那小星星炸了不就没了吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:17",
      "text": "行，那你得你得想办法把它弄炸了才可以。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:20",
      "text": "对，那无非就是什么这个联合管理会的五个常委，然后和联合起来，然后加上日本日日本德国造一个超级核武器，然后发出去崩不就完了吗？对，但是这个过程消失有什么？",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:35",
      "text": "这个过程如果比如说那个小星星比较大对吧？就没有那么简单了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:40",
      "text": "我觉得好吧，那ISS都能上天，国家也没有消失。也是你看文明里面你要造一个去阿尔法森tory的那个火箭，你一个国家也可以造出来，对吧？你不需要把其他的所有国家都灭了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:59",
      "text": "说到这个东西，好像最近那个谁霍金是不是搞了个什么1蛾子，要弄这个事儿。",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:04",
      "text": "他要跟外星人联络。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:06",
      "text": "对，他他要发一堆小飞行器过去，好像是这么说。",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:11",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:14",
      "text": "说不定还真的身体你说不定还真的能招过来，好吧。Let's say OK, 感谢收听IP in park.",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:21",
      "text": "网络旗下的IT基础语音娱乐节目，内核恐慌，号称hard core，但是也没有干货，想听人听，不想听的就别听。您可以为本节目捐款，地址是coro panic dota FM dot，slash donate捐款金额手印只要是八的正整数倍就可以。捐款不会给你带来什么，不捐也不会让你失去什么。我们的口号是no hot feelings。如果你有任何反馈，可以发邮件到kero panic at IPN dot LI。同时也欢迎你收听real主持的风投圈以及IPN其他IPN旗下的其他几档节目。未知道他一来了流星通信history，硬影像无资源，博物志选美陛下关和一天时间，我们下期节目再。",
      "speaker": "发言人1"
    }
  ],
  "lab_info": {
    "summary": "讨论者考虑在家中使用大屏幕显示器以获得更好的视觉体验，对Retina分辨率和4K显示有需求，但受限于设备的USB-C端口输出能力及转接头的选择。同时，探讨了使用iPad等轻便设备以满足出差时的便携性需求，但担忧软件兼容性和功能完整性。此外，播客内容广泛，涉及技术话题如内核恐慌、捐赠政策、技术新闻和微软Bash for Windows的分析，以及未来科技如AR眼镜的应用和互联网全球化的影响。播客氛围轻松幽默，讨论了Windows 10更新、编程语言学习、OBD设备的蓝牙问题和对特斯拉汽车的看法。",
    "qa_pairs": [
      {
        "question": "Janet reiner在1998年说了什么关于计算机和mass weapon of mass destruction的话？",
        "answer": "Janet reiner在1998年的听证会上说，国家需要建立一个类似互联网安全局的东西来保护美国的信息产业基础建设（national infrastructure protection），并把computers与mass weapon of mass destruction并列。",
        "time": "00:00:36"
      },
      {
        "question": "现在看来，计算机产生的伤害是否也具有大规模破坏性？",
        "answer": "是的，现在回看，当时大家觉得计算机导致的大规模破坏不可想象，但实际上过去20年中，由计算机引发的重大灾害频繁发生，且灾害程度越来越严重。",
        "time": "00:01:52"
      },
      {
        "question": "军队使用的计算机系统是怎样的？例如战斗机上的操作系统？",
        "answer": "军队涉及到计算机的部分通常使用普通计算机系统，而非完全实时或专用操作系统。比如早期提到的F16战斗机的操作系统可能是一个半实时的专有操作系统，而无人机的远程操纵系统也可能运行在WindowsXP等版本上。",
        "time": "00:04:28"
      },
      {
        "question": "如何解决远程操控无人机时的延迟问题？",
        "answer": "对于远距离操控无人机，时差问题可能不是特别重要，因为无人机通常在高空飞行，地面上的移动物体在无人机驾驶员看来速度很慢。此外，中程导弹有制导系统，能在一定范围内自主追踪目标，所以实时性要求可能不像常规控制那样严格。",
        "time": "00:05:53"
      },
      {
        "question": "关于本节目的更新情况和NPM堆栈被破坏的事件，能否简要解释一下？",
        "answer": "由于人事变动和当前状态，本IT公论节目从本期开始改为不定期播出。关于NPM堆栈被破坏，起因是一位开发者收到一封要求更改其extension名称的信件，但他拒绝了这个要求。随后，NPM组织将这位开发者的一个关键extension从网站下架，导致依赖该extension的众多网站和框架无法正常更新，从而引发了整个互联网的一系列连锁反应。",
        "time": "00:09:42"
      },
      {
        "question": "在Java世界中，为什么用户可以默认依赖于内置的Java库？",
        "answer": "在Java世界里，由于Java是由Google这样的可靠公司维护，它不会随意撤销库的存在。即使不涉及第三方库，Java本身也提供了丰富的内置库供用户直接使用。",
        "time": "00:16:15"
      },
      {
        "question": "在NPM世界中，标准库的使用体验与Java有何不同？",
        "answer": "在NPM世界中，标准库并非下载即用的，每次部署时都需要从NPM网站下载所需的包，这与Java的内置库有所不同。",
        "time": "00:17:00"
      },
      {
        "question": "标准库大小和功能的平衡问题在其他语言中是否存在类似困境？",
        "answer": "是的，像JavaScript和Ruby等语言的标准库相对较小，大部分功能依赖第三方库，这在一定程度上解决了问题，但同时也存在类似问题，例如Python标准库内容虽小，但承载着“自带电池”概念，实际功能扩展性不足。",
        "time": "00:17:11"
      },
      {
        "question": "JS语言中对第三方库使用的看法是什么？",
        "answer": "JS中对第三方库使用存在争议，尤其是在功能粒度上，有些功能会被设计得极为细碎，如仅判断一个变量是否为数组的left pad库，这体现了语言设计上的缺陷。",
        "time": "00:18:00"
      },
      {
        "question": "NPM社区为何会出现如此独特且碎片化的库文化？",
        "answer": "这主要与社区组织类库的方式有关，缺乏系统化和有条理的管理，以及前端开发中为了提高响应速度而追求代码体积最小化导致的矛盾。",
        "time": "00:25:35"
      },
      {
        "question": "代码重用和组织在JavaScript中是否存在矛盾？",
        "answer": "在JavaScript中，代码组织上确实存在矛盾，为了降低代码体积，开发者倾向于将功能切分得很细，但这样会导致import语句增多。而其他语言可通过静态分析等技术消除无用代码，但在JavaScript等动态语言中难以实现。",
        "time": "00:22:51"
      },
      {
        "question": "语言特性对解决这一问题有何影响？",
        "answer": "语言特性决定了在某些情况下，如前后端统一使用JavaScript时，无法采用不同的代码库组织方式，因为前后端都需要考虑代码精简和可靠引用的问题。",
        "time": "00:25:35"
      },
      {
        "question": "如何避免因外部代码库更新或删除导致项目崩溃？",
        "answer": "一种稳健的做法是将外部代码依赖作为项目的一部分进行管理，即使项目内部可能并不直接引用所有功能，也可以通过依赖管理确保项目的稳定性和可部署性。",
        "time": "00:27:04"
      },
      {
        "question": "在JavaScript中，为什么会出现通过比较字符串的方式来判断一个对象是否为数组的情况？",
        "answer": "这是因为从实用角度出发，为了避免开发者直接面对JS语言设计层面的各种复杂性和运行时的坑，他们采取了这种方式。这样可以减少成本，确保开发者不必自己去发现和处理这些已知的问题。",
        "time": "00:31:59"
      },
      {
        "question": "是否有新的技术尝试解决浏览器对JavaScript运行时的问题？",
        "answer": "是的，有一种新的技术叫做web assembly，它相当于一个基本子集，其他高级语言可以编译成这个技术的子集并在浏览器中运行。这样可以尝试避免一些基于JavaScript的局限性，并提供更底层、更高效的执行环境。",
        "time": "00:33:11"
      },
      {
        "question": "为什么现在浏览器不支持更高级的运行时技术？",
        "answer": "这主要是由于历史原因和市场占有率的问题。最初浏览器支持的多种技术随着市场发展逐渐被淘汰，而JavaScript成为前端唯一可用的语言。尽管存在各种问题，但由于没有更好的替代方案，目前还没有新的运行时被广泛接纳。",
        "time": "00:33:22"
      },
      {
        "question": "是否有类似Java applets那样的技术尝试取代JavaScript的地位？",
        "answer": "是的，曾经有过类似的技术尝试，比如使用Java applets来实现类似flash的功能，但由于缺乏交互性和多媒体播放能力，最终没有获得广泛采用。Apple推出的AppleScript也遭遇类似命运，因其功能不如Flash或JavaScript强大而逐渐被淘汰。",
        "time": "00:37:37"
      },
      {
        "question": "德国网银在转账方面的体验如何？",
        "answer": "德国网银转账方便快捷，拥有移动APP支持转账功能，同时也有生成验证码的独立APP，通过彩色点阵图方式生成验证码，这是一种独特且安全的二次验证方式，相比早期物理设备辅助验证更为先进和便捷。",
        "time": "00:41:01"
      },
      {
        "question": "在德国，右侧超车是违法的吗？如果在高速公路上，你被一辆右侧超车的车撞到会怎样？",
        "answer": "是的，在德国右侧超车被认为是违法的。如果在只有两车道且中间为虚线的地方，我到左边去超车，然后超到一半突然引擎没力了，对面来的车就可能撞上我。",
        "time": "00:46:39"
      },
      {
        "question": "当这种情况发生时，你不应该减速并让右侧的车先超过吗？",
        "answer": "对，应该这么做。但如果来不及的话，会很危险。",
        "time": "00:47:29"
      },
      {
        "question": "你后来买了什么设备来解决与车辆蓝牙连接的问题？",
        "answer": "我买了一个蓝牙OBD读头，但由于是安卓版本的，我需要换成支持iOS的版本，最终换成了WiFi版本。",
        "time": "00:47:50"
      },
      {
        "question": "后来发现车辆的问题是什么？",
        "answer": "发现是柴油预热器存在故障，读数不正常。",
        "time": "00:48:40"
      },
      {
        "question": "你购买的是柴油车吗？",
        "answer": "是的，我买了一辆沃尔沃柴油车。",
        "time": "00:48:48"
      },
      {
        "question": "在德国购买德国车是否比在中国更便宜？",
        "answer": "虽然在德国购买原厂德国车通常比在中国便宜，但没有关税，但在德国购买的车也有可能因为各种原因被召回。",
        "time": "00:49:28"
      },
      {
        "question": "后来你是怎么解决柴油预热器的问题的？",
        "answer": "没有立即解决，打算下周更换柴油预热器。",
        "time": "00:50:08"
      },
      {
        "question": "OBD接口是否能通过软件hack来解决问题？",
        "answer": "硬件问题无法通过软件hack解决，只能通过专业设备读取并清除错误代码。",
        "time": "00:51:20"
      },
      {
        "question": "这个问题有多严重，是否需要立即修理？对于汽车故障报告，为什么信息不够明确，需要专门购买设备才能获取详细信息？",
        "answer": "根据我的判断和网上信息，这个问题可以继续开一段时间，但还是建议尽快处理。汽车制造商可能出于保护维修店利益等原因，没有将复杂错误代码转化为易懂的文字显示在仪表盘上，而是通过OBD接口由用户通过专门设备查询。",
        "time": "00:52:59"
      },
      {
        "question": "微软是否打算将一些在Linux上起源的服务端工具搬到Windows平台上，例如docker？",
        "answer": "是的，微软有这个想法，想把像docker这样的流行服务端工具从Linux移植到Windows上，但发现由于docker基于Linux内核的一些特性（如c groups）和脚本编写方式（基于batch），很难完全移植过来，且存在较多坑。",
        "time": "01:01:37"
      },
      {
        "question": "对于那些后端开发人员，他们在Windows上的操作方式是怎样的？",
        "answer": "目前许多后端开发人员在Windows上通常会运行虚拟机或者通过SSH连接到远程服务器进行操作，因为Windows本身可以被当作一个终端来使用。",
        "time": "01:02:25"
      },
      {
        "question": "微软如何打算吸引这些Windows用户回归使用其产品？这次实现的原理是什么？",
        "answer": "微软可能会提供更多的诱因和甜头，降低使用门槛，并尝试通过一些高级技术实现跨平台兼容，比如这次推出的bash on Windows Subsystem for Linux。其实现原理并非重新编译，而是直接将Linux下的ENF格式文件（相当于EXC格式）在Windows NT内核上实现二进制兼容，通过创建一个翻译层或兼容层，在Windows的NT内核上暴露出一系列可以直接在二进制层面上兼容system call的API。",
        "time": "01:03:58"
      },
      {
        "question": "安卓虚拟层与这次微软的做法有何异同？",
        "answer": "原理上类似，都是通过提供一个兼容层让原生的安卓或Linux程序在Windows上运行，但时间和具体实现细节有很大差异，且安卓虚拟层更侧重于模拟运行安卓系统，而微软这次的bash on Windows Subsystem for Linux则是实现二进制兼容。",
        "time": "01:06:45"
      },
      {
        "question": "对于Windows上的用户来说，这一改变意味着什么？",
        "answer": "对Windows用户来说，这意味着他们可以更方便地使用一些原本只能在Linux上运行的工具和服务，比如通过命令行执行linux命令，但同时也可能带来一些复杂性，例如系统底层的差异可能导致需要适应新的命令行工具和环境。",
        "time": "01:10:43"
      },
      {
        "question": "你打算买最新的macbook，但似乎有些纠结？",
        "answer": "是的，我在考虑是否购买最新的macbook，并且有些不确定是否能接上4K显示器以60赫兹刷新率使用。",
        "time": "01:18:18"
      },
      {
        "question": "那款macbook是否可以接4K显示器并保持60赫兹刷新率？",
        "answer": "官方资料显示，新款macbook虽然支持4K输出，但只到30赫兹刷新率，对于4K屏幕来说可能会有些卡顿。",
        "time": "01:18:18"
      },
      {
        "question": "对于4K屏幕的需求是什么？",
        "answer": "主要是因为在出差时，由于macbook屏幕较小，想通过外接大屏幕提高视觉体验，尤其是在文本处理、展示等方面更舒适。",
        "time": "01:18:46"
      },
      {
        "question": "目前是否有合适的转接头可以将USB-C口转化为支持4K且刷新率为60赫兹的display port输出？",
        "answer": "苹果官方目前并没有提供这样的转接头，市面上可能存在非官方的产品，但不确定是否稳定可靠。",
        "time": "01:21:18"
      },
      {
        "question": "是否觉得带一台轻便的电脑不如性能更强的电脑更有价值？",
        "answer": "虽然轻便性很重要，但在便携性和外出使用场景下，一台性能适中的电脑与高性能电脑的实际区别并不明显，关键在于能否满足出差时的需求，尤其是外接显示器的问题。",
        "time": "01:25:11"
      },
      {
        "question": "是否考虑过iPad作为出差携带设备？",
        "answer": "考虑过用iPad配合无线键盘或者iPad Pro，但由于在飞机上使用时存在不便，如无法舒适放置以及软件交互等方面的局限性，仍在纠结是否购买。",
        "time": "01:23:34"
      },
      {
        "question": "对于未来可能出现的融合虚拟现实和物理现实的交互方式有何看法？",
        "answer": "认为未来可能会出现融合虚拟现实与物理现实的新型交互模式，使得工作流程更加高效自然，但这需要新的软件环境和用户习惯来支持和发展。",
        "time": "01:28:09"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "内核恐慌：IT技术与娱乐的碰撞",
        "summary": "本期节目来自IBM pocard网络旗下的IT技术主题娱乐节目《内核恐慌》，通过轻松幽默的方式探讨了技术与娱乐的结合。节目不仅推荐了使用podcar t客户端订阅，还提出了通过捐款支持节目的方式，强调捐款的随意性。特别提到了1998年，美国前司法部长在谈及互联网犯罪和国家安全时，将计算机与大规模杀伤性武器相提并论的历史事件，展现了节目对于技术、娱乐与社会议题深入浅出的探讨风格。"
      },
      {
        "time": "00:01:21",
        "title": "计算机安全威胁的远见与现实影响",
        "summary": "过去20年里，由于计算机技术产生的灾害频繁发生，且近年来情况愈发严重。随着信息技术在基础设施中应用的增加，如智能电网和核电站等，计算机安全问题变得尤为重要。从过去对大规模杀伤性武器的传统理解，到现在认识到计算机安全威胁的严重性，显示了人们在这一领域的远见。技术的发展使得像黑客攻击核电站这样的事件，可能造成的损害远大于传统军事行动。"
      },
      {
        "time": "00:03:18",
        "title": "军队计算机系统及无人机操作讨论",
        "summary": "讨论集中在军队使用的计算机系统上，特别是提到F16战斗机不可能运行Windows XP或2000，因为它需要一个实时操作系统。同时，探讨了军用无人机可能运行在普通计算机系统上，以及无人机操作的延迟问题，指出对于侦查和精确制导打击，实时性可能不是特别关键。"
      },
      {
        "time": "00:06:49",
        "title": "NPM事件及节目变动说明",
        "summary": "由于人事变动，原IT评论节目将不定期播出。此前，NPM平台上一个小型库left-pad的撤销导致大量网站和项目受到影响，揭示了开源社区的脆弱性。节目组计划通过设置“恐慌按钮”来幽默地提醒节目更新情况，并以此作为对NPM事件的诙谐评论。"
      },
      {
        "time": "00:13:56",
        "title": "NPM和JavaScript开发的挑战",
        "summary": "讨论集中在JavaScript和NPM在软件开发中的角色，以及与Python和Java等语言的比较。JavaScript起初并未设计用于大型应用开发，因此缺乏内置的基础设施支持，与Python和Java形成了鲜明对比，这些语言提供了丰富的库和工具。JavaScript的生态系统依靠NPM来补充其功能，但这种做法也带来了风险，如left-pad事件所示，一个小的库的撤除可能导致大量项目受到影响。此外，讨论还触及了关于标准库的大小和功能的讨论，以及JavaScript社区如何依赖第三方库，而这些库的功能范围和稳定性不一。"
      },
      {
        "time": "00:18:27",
        "title": "JavaScript库的组织与设计缺陷探讨",
        "summary": "对话中讨论了JavaScript（JS）语言中一个特定问题，即判断一个变量是否为数组的功能被单独封装为一个库，这与其他语言将相关功能整合到少数库中的做法形成鲜明对比。这一现象反映出JS设计上的缺陷和社区在库组织方面的不足，缺乏系统化的内库结构。此外，由于JS代码需要在前端和后端均执行，导致有降低代码体积以提高响应速度的需求，这使得开发者倾向于将代码分割得非常细碎，只引入项目真正需要的部分。虽然这种做法在一定程度上解决了代码重用与组织的矛盾，但同时也暴露出JS在代码消除和静态分析方面的不足。"
      },
      {
        "time": "00:24:55",
        "title": "NPM对后端开发的影响及解决方案",
        "summary": "讨论重点在于NPM对后端开发造成的问题及影响，由于后端开发没有前端那种代码精简的需求，因此即使使用较大库如GSI编写后端程序也是常见的。然而，这导致了后端可能因前端代码优化而受到影响，例如某些库的删除会导致整个项目的崩溃。一个解决方案是通过vendor方法，将外部代码依赖纳入项目仓库中，从而提高开发部署过程的可靠性。"
      },
      {
        "time": "00:28:08",
        "title": "代码库的可靠性和社区共享的哲学",
        "summary": "在没有互联网的时代，人们依赖物理联结进行交流和工作。随着技术进步，社区共享的哲学变得普遍，尤其是NPM相对于Python的仓库在可靠性方面的领先。讨论还触及了代码库可能因作者放弃维护而带来的问题，以及社区对于代码重用的不同观点。一方面，一些人认为简单的功能应自行实现以避免引入外部依赖的复杂性；另一方面，也有人主张应充分利用已有的代码库以减少重复工作。此外，JavaScript的复杂性增加了自行编写简单功能的难度，导致更多人倾向于使用现有的库。这种选择不仅是出于效率的考虑，也是为了避免踩入可能的语言陷阱。"
      },
      {
        "time": "00:32:58",
        "title": "WebAssembly技术及浏览器运行时的演进",
        "summary": "对话内容主要探讨了WebAssembly技术，以及浏览器运行时的历史和演进。讨论开始于对JavaScript在前端开发中的垄断地位和其不足之处的反思，进而转向WebAssembly作为一种可能的替代方案的潜力。WebAssembly被描述为一种底层技术，可以将高级语言编译为可在浏览器中运行的代码，从而解决JavaScript的一些问题。此外，对话还回顾了Java Applets和Flash等过去的技术，以及它们为何未能长期维持其在浏览器技术生态系统中的地位。最后，讨论转向了浏览器安全性和用户验证机制的变化，以及这些变化如何影响了网银等服务的使用方式。"
      },
      {
        "time": "00:44:40",
        "title": "探讨技术设备的兼容性和汽车维修经历",
        "summary": "对话内容围绕技术设备的兼容性问题，特别是iOS系统在连接OBD设备时的限制，以及使用不同技术（如蓝牙和Wi-Fi）的解决方案。此外，还涉及个人的汽车维修经历，讨论了柴油车预热器的问题及其对车辆性能的影响。通过这些讨论，反映出技术设备的兼容性对用户体验有显著影响，同时强调了在面对技术问题时寻找解决方案的重要性。"
      },
      {
        "time": "00:51:24",
        "title": "探讨OBD设备在车辆诊断中的应用及局限性",
        "summary": "对话中讨论了OBD设备在汽车故障诊断中的作用及其局限性。一方面，OBD设备能通过蓝牙连接手机，读取车辆的错误代码，对于某些高级设备甚至可以清除错误代码。另一方面，也指出了设备在使用过程中遇到的问题，如与不同系统兼容性差、读取结果的不稳定性等。特别强调了在德国等资本主义发达国家，车辆维修需要提前预约，增加了自行诊断故障的需求。此外，讨论还触及了车辆自身报告系统的问题，以及市场上对OBD设备的需求和选择，反映出车主对了解和解决车辆问题的强烈愿望。"
      },
      {
        "time": "00:57:38",
        "title": "微软对Linux态度转变及Bash for Windows的战略意义",
        "summary": "微软近年来对Linux社区的态度有了显著转变，从之前将Linux视为威胁，到现在在Windows中集成Linux子系统，这一转变体现了微软对历史潮流的认识和调整。通过讨论微软的技术战略，特别是将Bash引入Windows，可以看出微软意图吸引更多Linux程序员，并在服务器软件市场中寻找新的定位。此外，通过技术层面的讨论，如Windows NT内核上加入Linux内核以实现二进制兼容，揭示了微软在技术上所做的努力和创新。这种转变不仅有利于微软的产品和服务与Linux平台的软件和服务互通，也反映了微软试图通过提供更多灵活性和选择来满足开发者需求的战略调整。"
      },
      {
        "time": "01:06:42",
        "title": "微软对Linux命令行工具的支持与兼容性挑战",
        "summary": "对话中讨论了微软在Windows系统上对原生安卓程序和Linux命令行工具的支持，通过提供兼容层让安卓程序和Linux命令在Windows上运行。讨论者认为，微软在实现这一功能上投入了大量精力，尽管表面上看起来只是简单地在终端中执行Linux命令，但实际上涉及深层次的技术实现。此外，也提到了Windows系统中存在多套命令行工具，以及这对PowerShell用户可能产生的影响。最后，讨论了在不同系统（如Mac的BSD系统）上运行Linux命令和工具时遇到的兼容性问题，以及社区在解决这些问题时的互动和挑战。"
      },
      {
        "time": "01:14:09",
        "title": "MacBook的4K显示器兼容问题及对开发者影响",
        "summary": "讨论集中在MacBook对于4K显示器的支持问题，特别是刷新率限制导致的使用不便，以及这对开发者可能产生的影响。考虑到MacBook在连接4K显示器时仅支持到30赫兹的刷新率，这可能使得一些开发者考虑转回Windows系统或直接安装Linux系统以寻求更好的服务器操作体验。此外，也提到了Mac销量的增长情况以及MacOS命名的变化，但主要焦点仍然是MacBook的显示输出问题及其对用户体验的影响。"
      },
      {
        "time": "01:21:39",
        "title": "选择适合出差的便携设备",
        "summary": "讨论者考虑在现有的Macbook Pro和等待更新的Micro Pro，以及iPad或iPad Pro之间做出选择。对于便携性没有特别大的诉求，但对于出差使用较为重视。讨论了使用iPad搭配蓝牙键盘的可行性，但担心键盘使用不便和软件兼容性问题。此外，还提及了对于Surface的使用体验和做工问题。最终，选择设备时需权衡便携性、性能、外接屏幕的方便性以及键盘使用的舒适度。"
      },
      {
        "time": "01:26:21",
        "title": "操作系统和编辑工具的发展反思",
        "summary": "讨论从早期的字符界面操作，如WPS和CCE，到现代图形界面和触控交互的转变，以及当前操作系统的使用习惯。指出尽管技术发展，人们在编辑文本和使用操作系统的方式上并未有太大改变。强调了对于新型交互模式（如触控、笔操作）的需求和对现有办公软件在新平台上的适应性问题。同时，对未来技术，如Magic Leap的裸眼AR交互和虚拟空间工作环境的期待和想象，展现了对交互技术发展和工作效率提升的深刻思考。"
      },
      {
        "time": "01:32:51",
        "title": "互联网监管与全球化趋势的反思",
        "summary": "讨论重点放在了互联网运营管理办法上，特别是关于所有域名必须在中国境内注册的规定，从网站运营者的角度认为此举限制了国际化发展，强化了政府的监管能力。进一步讨论了互联网全球化的幻梦已破灭，强调了政府对于互联网监管的不可避免性。此外，还提及了一个未来社会的构想，只有在极端情况下，如外星人入侵，才可能实现真正的网络自由。最后，节目通过轻松的语气探讨了对未来的幻想，包括人类如何应对可能的外星威胁，以及对现有国际关系的幽默评论。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [],
              "content": "号称 hardcore，但没有干货"
            },
            {
              "children": [],
              "content": "网址: coral panic dota FM"
            },
            {
              "children": [],
              "content": "推荐使用podcar t客户端订阅"
            },
            {
              "children": [],
              "content": "捐款地址: coron panic dot FM flash donate"
            },
            {
              "children": [],
              "content": "口号: \"they have computers，and they may have other weapons of mass destruction.\""
            },
            {
              "children": [],
              "content": "FAQ部分，欢迎听众捐款"
            }
          ],
          "content": "节目介绍"
        },
        {
          "children": [
            {
              "children": [],
              "content": "讨论了Janet reiner的预言，计算机作为大规模破坏性武器"
            },
            {
              "children": [],
              "content": "IBM pocard网络旗下的IT技术主题娱乐节目"
            },
            {
              "children": [],
              "content": "对NPM库left pad下架事件的深入分析"
            },
            {
              "children": [],
              "content": "JS和Python等语言的库组织与管理问题"
            },
            {
              "children": [],
              "content": "讨论了微软Bash for Windows的推出及其背后的战略"
            }
          ],
          "content": "技术与文化讨论"
        },
        {
          "children": [
            {
              "children": [],
              "content": "讨论了OBD蓝牙设备和汽车维修的关联"
            },
            {
              "children": [],
              "content": "微软的技术转变，包括Bash for Windows的实现"
            },
            {
              "children": [],
              "content": "互联网运营管理办法，对域名注册的限制"
            }
          ],
          "content": "技术产品与创新"
        },
        {
          "children": [
            {
              "children": [],
              "content": "邀请听众捐款，金额随意，主要是为了表达支持"
            },
            {
              "children": [],
              "content": "建议听众通过Twitter了解节目更新情况"
            },
            {
              "children": [],
              "content": "建议创建\"panic button\"，让用户能更方便地了解节目更新状态"
            }
          ],
          "content": "用户反馈与社区互动"
        },
        {
          "children": [
            {
              "children": [],
              "content": "对互联网全球化梦想的破灭进行反思"
            },
            {
              "children": [],
              "content": "讨论了技术产品如何满足不同用户群体的需求"
            },
            {
              "children": [],
              "content": "对开源软件和专有软件的未来进行了预测"
            }
          ],
          "content": "未来展望与观点"
        }
      ],
      "content": "内核恐慌节目脑图摘要"
    }
  }
}