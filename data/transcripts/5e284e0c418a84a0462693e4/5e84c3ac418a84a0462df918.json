{
  "pid": "5e284e0c418a84a0462693e4",
  "eid": "5e84c3ac418a84a0462df918",
  "title": "32. 覃超专访（之二）",
  "task_id": "yg7k9wo5rd7mnxwd",
  "transcription": [
    {
      "time": "00:00:00",
      "text": "欢迎收听IPM podcast网络旗下的埃踢技术主题娱乐节目内核恐慌。我们号称hard core，但也没有干货，想听的人听，不想听的人就别听。本节目的网址是kernel panic dot FM，我们推荐大家使用podcast客户端订阅节目，详情请访问IPN dot LI flash FAQ。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:21",
      "text": "欢迎你为本节目捐款，捐款地址是kernow panic dot FM slash donate。捐款金额随意，只要18的正整数倍就可以。捐款不会给你带来什么，不捐也不会让你失去什么。上期我们请到了秦超，给我们讲他从怎么在CMU上学以及加facebook的故事。我们今天接着这个访谈的系列的第二期讲，我们把接着把这个画风接着上期的face facebook的book cap讲起。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:52",
      "text": "很高兴和大家见面。我也听了一下上期的节目，我觉得我上期的离婚地方的话可能废话稍微有点多。这期的话是想把精彩的地方讲的更加密集一点，然后让大家觉得自己的时间都是花到了有趣的内容上。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:08",
      "text": "上期我们讲到的那个facebook book camp后面有些故事还没有讲完，要不陈超你再接着跟大家讲一下。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:15",
      "text": "好的，我上次仔细听了一下我自己讲的那个boot camp FM这边的话我还有一个小的感觉，就是我没有我觉得我没有cover到的。当时的话我到了这个boot camp的时候，还有一个最大的印象，就是说我看了一下我旁边这些人人，以及这些组里面的这些人，以及他要我们要做这种on board training的时候，给我们的各种导师，他们的背景都是非常强的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:45",
      "text": "哼那时候。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:46",
      "text": "给我一种感觉就是非常的兴奋，但是也有一点点心里很慌，或者是用斗鱼上的话讲的话，就是心里好慌。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:56",
      "text": "为什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:57",
      "text": "它里面有很多像斯坦福MIT、伯克利CMU的那些毕业生，就是这种名校很厉害的人。同时的话还有一批类似于刘天刘天成这样，但是不楼楼天成不在，也就是说当年ACMAICPC话是top coder上面特别厉害的。这些编程竞赛的人，对他们很多的人物。对对对，就是参加编程竞赛的那是豪门队的。比如说中国的像清华北大交大的这些豪门。同时的话还有就是变态级的，东欧的那边的，比如说华沙大学、莫斯科大学，类似于这种人，有一些怪物级的，然后都在这里。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:39",
      "text": "有一些我们知道的就是在top coder上面，红色的这些ID红色的handle的话也在这个比赛里面。就比如说之前的话中国选手里面做的特别好的有old big，就是OB。如果你们相当于是在五年前或者十年前打top coder的话，应该就知道这个任务了。就是OB他原来也在google北京工作的一个人。然后还有一个叫陈志明的，就是DMX大漠狂沙。这个也是参加过世界总决赛拿过第一名和第二名的人，他们都在叫陈志明的。接下来还有沈光浩、沈老师，还有参加竞赛的张一飞，还有写过国家队论文的李锐李老师，他写的是关于线段树的文章。就是现在的话你做程序竞赛的话，大学生的程序竞赛线段数基本上是一个必考的内容，以及线段数的加强版。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:35",
      "text": "你这里肯定要解释一下什么是线段数。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:38",
      "text": "线段数就是一种数据结构，然后可以让你很方便的进行区区间的判断，以及裂变一个区间成好几个区间，同时合并这个区间，然后时时刻刻询问你，从比如说100到1之间有多少个这样的标记，类似于这种一个过程。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:57",
      "text": "OK可以用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:58",
      "text": "的一个场景。比较类比的话，但是不太准确的话，就比如说订票系统，火车的订票系统的话，从广州开到北京的话，这么长一段路的话，然后你不停的买票，不停的买票。你买了其中一小段的话，其中它头和尾就会裂变成两段，变成available的，然后再继续，中间有缝隙的话，可以马上生成新的票插上去之类的。然后当有人退票的话，他的退的那个票的头尾两段可以再粘起来。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:29",
      "text": "让别人再买一段是吧？对对对，就感觉这个12306特别用的比较多。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:36",
      "text": "我不确定里面是什么，但是大概是这么一个问题。线段数对在参加竞赛的基本上这个是必做的一个类型。还有一波人的话就是这种传统的大牛，就是之前在电视里面或者在新闻上面看到的这些人物。比如说之前很火的有个叫google waves，以及做google maps那个老大有个叫，因为当年我经常去听那个google IU，google IU里面就是有一些google的牛逼的人，就是经常我去听那个wwdc s apple的话。与之相对应的就是google的google IO这里面的话就有一些很厉害的人在介绍自己的产品。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:17",
      "text": "当年的话特别火的有一次是有一个叫google wave的。当时因为我也在姑姑北京实习，好介绍这个人就叫large LARS。Large他同时也是之前google maps的掌门人。哼这样后来的话他是因为google plus的原因，他的项目被砍掉了，然后被facebook挖过来。他和我是同一天入职的，所以我是在boot camp时候认识他的。我一看到他耶，我好像是在youtube里面，其中有一些google IO的时候见过你怎么着就打招呼。那时候就感觉遥不可见的一种的人物，或者是所有东西感觉好像变成现实一样。OK另外还有奇妙这种。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:01",
      "text": "对对对，另外还有一个叫不一个叫came back的人，KENTBECK cen bag. 他就是j unit的创始人，就是平时经常用的j unit，以及安卓下面经常各种基于java的这些测试框架都是基于j unit的。他写的他同时后面也是extreme programming的发起人，就是极限编程TDD，就test driven development的创始人。这些的话就是原来看过他们的书，也用过他们的软件。比如说j unit。因为只要你写java的话，要写的unit test的话，基本上就是基于接unit的。然后再到后来的话，就是极限编程在国内很火的，要做test的driven first之类的。所有这一套理论就是基于他的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:50",
      "text": "他刚好也是和我同一天入职的，就是同一期。一般是她两个星期一起入职的，她是和我同一期入职的，当时在里面就看到他们的时候，就在说我好神奇，他们大概都四十几岁，相当于比我大了一倍一样的。后面还有一个比较有趣的意思，就是关于nars的话。后来的话我还经常去看一下他的写的代码。非常有趣的一个地方就是说它基本上所有的代码都是开放的，以及每个人写的代码的话都要经过code review。在code review这个系统里面，你就可以不仅仅审核代码，评测别人代码。还有更重要一个作用，你可以互相去借鉴或者是阅读别人代码。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:35",
      "text": "我有时候就去看一下拉尔斯的代码，在想这哥们儿年纪这么大了，到底是写还是不写，到底厉害还是不厉害，到底是说的还是忽悠的？像中国的有些可能领导一样的之类的，后来发现他还是写，而且写的好多，写javascript也有写PHP，反正很厉害。一个就是large，就是google maps的掌门人，以及google wave当年的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:57",
      "text": "那个时候你们在内部已经用上那个fabricator了吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:01",
      "text": "对，已经用上fabricate。当时不叫这个名字，叫diff camps。对还没开源，对吧？当时还没有开源。对的，ok好，那我继续。这报道的时候我就了解这么多牛逼的人我就觉得感觉真的是一个机会，让我既非常的这种觉得chAllenge ing，同时的话也有点intimidating，就指的是压力很大，类似于这种。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:27",
      "text": "然后后来成为我好朋友的是几个中国人，因为大家都同胞，其中有一个就是徐万红。有时候的话我们现在他也回国了，然后我们一起在国内的话也是好朋友，他现在是神州专车的CTO，有时候做一些活动的好时候，我也把他叫过来。同时的话我们还是在经常切磋台球的。另外还有一个叫陈志明的，就是我之前介绍的，他做top code很厉害。做design的话他自己也是之前数学竞赛的。所以我就觉得一个公司如果能把特别牛逼的人吸引过来，我觉得这个公司就是最大的一个财产。就算你在项目上面某某一两个项目后面要说的就是不是进展特别顺利的话。对，只要有这么一批核心的人留住的话，你的公司，你的文化还是会越做越好的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:15",
      "text": "然后第二个我要补充的一点，就是说当时第一天的时候，他就给我把所有的笔记本和手机都配好了。手机的话公司有帮你配的话，就是相当于帮你报销所有的费用，你打电话都不用钱的，而且是国际打所有的国际电话都是available的，你可以打中国的都行。然后在这个电脑里面的话，它是用chrome的。那个是用是用sorry，是用five fox。不好意思，是用five fox的那个浏览器。他当时有个收藏夹，收藏夹第一页就显示了我们的所有数据。所以我们整个的data dashboard就在这个第一页里面。它没有任何的权限控制，你只要是员工你就可以打开看。",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:55",
      "text": "然后dh board里面有各种各样的数据，比如说日活、月活、周活，以及针对每一个产品，针对每一个feature的功能，它的具体的就是use feed，比如说这几天有多少人用photos有多少用。另外的话它有很强的类似于这种股票交易系统的查询功能，也就是说你可以限定。最近的六个月以来，日本的30岁以下的人用photo的平均在线时间，类似于这种限定都可以查出来，就是很厉害。",
      "speaker": "发言人2"
    },
    {
      "time": "00:10:25",
      "text": "然后第一点的话就是说他各种工具非常强大。第二点的话，他非常重视数据，就重视数据的采集以及展示出来。哼第三点的话就是非常的透明，他们讲的就是open，so we wanna keep our engineering culture open.",
      "speaker": "发言人2"
    },
    {
      "time": "00:10:42",
      "text": "类似于这种就是说没有任何的权限控制，并不是高层才能看这些数据。可能有一些非常机密的，可能只有这个能看，我我我并不知道。但是像这些的话，有外面的人觉得比较敏感的，他都是靠放给所有人来看的。这样然后在所有这些内部的文档、页面，内部的网站里面都非常明确。在右边或者在上面写着红色的字就是confidential，就是公司里面的机密，你不能说出去的这种，但是他的的确是对员工非常的开放。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:14",
      "text": "OK, 这个dashboard是专门有一组人在开发吗？还是怎么样？",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:20",
      "text": "是的，是我们的growth，还有这个数据组他们来维护和开发的，就是做各种各样的dashboard，以及它来维护这一套系统，以及负责数据的采集后期的展示。因为这数据量非常大，当时的话我们用户已经是六亿多人的。所以的话我们对员工，对facebook自己员工是百分之百的数据都上传。但是对用户的话，我们已经做了sample ing就是只传1%的用户，随机挑1%的用户，不然出去不然传不过来了。对，但是即使这样的话，每天的要处理的log就是上T的，这样长年累月的话机器根本装不下。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:03",
      "text": "然后你就要搞一个FD HDFS，然后同时搞一个大数据的pipeline来处理这些所有的。然后linked in的话，自己开源了自己那些大数据的。比如说卡夫卡，比如说Spark都非常出名。Facebook也有很厉害的，有一个叫PTPT的。比如只不过是facebook的话这些东西没有开语言出去，所以说话在这块的话就没有那么名声大噪罢了。哼对，facebook也有比较强的关于大数据的处理对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:35",
      "text": "接下来再讲，就是说后来的话各种各样的邮件包包就进来了。因为当时在公司的话第一次接触这种环境，有一点手脚应付不及，然后就跟着他们就设了各种样的theater在邮件里面，就是把各种邮件进行分类，类似于这种。然后我当时记得第二天的时候，不是给我发了一个任务，在上一期的我讲讲那个就发了一些任务要我开始做的话。然后第二期的第二天的时候，他还有一个特别牛逼的on board training，是由Chris cox来主持的。Chris cox的话是整个facebook的一个VP of product，就是说整个它的产品它是由它来把控的，然后news feed的这里也基本上是case x来来负责的。后来他就创立了那个facebook的creative labs，在这个creative labs里面就做了很多小的APP之类的。然后他当时进来之后就给我们讲整个facebook的发展过程，怎么从一个公司宗旨，怎么从一个公寓里面的一个项目，就是大学公寓里面项目，然后开始在哈佛校园起步，然后慢慢推广，大家火起来了，扩张到不同的学校。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:49",
      "text": "然后再说他亲身经历的事情。比如说05年的时候，06年的时候，他当时做的一个事情就是把公司搬到california，然后每天不停的就要加server，因为实在是太大了。对，当然他也说可能是我们的代码写的不好。因为他们很多人根本就是没有太多的这种关于高可用性，然后就是大规模性应用，就是scalable distributed system之类的经验，可以说一说他们写的东西的性能可能并不是特别好吧。他当时还介绍自己装过机器，手工把这些服务器一台一台的架到那个机器上去。他先刷这个服务器的操作系统以及上面预装的软件，然后做好了之后，把它不启动起来，然后插到那个机箱上面去。然后再到后面的话，推广了越来越多的学校，然后把facebook做成一个正经事情了，然后再推广到整个是非学生的群体去。现在的话才发展到这么大的规模，我当时印象特别深刻的就是这个Chris cox。",
      "speaker": "发言人2"
    },
    {
      "time": "00:14:51",
      "text": "现在的话他在facebook也是相当于二号人物或者三号人物那种，仅次仅次于shara 3 berg。比如说哼对他有一个最大特点就是人帅，这个只是插曲曲外话，他的演讲特别有号召力，就是他讲的并不是非常快，但是他的语气你就还有他用词你就觉得非常感高的。仿佛一下子给我们带入到了当年facebook早期激情澎湃、跌宕起伏的创业的岁月。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:24",
      "text": "这样他当时还讲了一个特别有趣的功能，就是说他想给大家宣扬一种事情，就是说我们在做产品的时候，一定要把搜索放在我们的头脑中。他当时说social最在facebook最大的一个应用就是在photo上面的。当年的话有很多做photo做的很好的那时候各种盘也好，那种做的最好的是flicker这种应用对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:48",
      "text": "对，没错。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:49",
      "text": "那时候flicker是老大。然后facebook的时候出来一个photo的时候，当时的话大家也只是正常的去传各种照片，他们就想flick好厉害之类的，可能当时只有弗雷克的10分之1，1%的这个量。然后他们就有一个团队就一直在想怎么把这个搜索加进来。搜索加进来的时候，他就举了一个例子。后来终于想到了一个突破的那一点，就是加了个photo tag。也就是说你传了这个photo在facebook之后，你还可以给非这个photo打一个标签，也就是把你的朋友是谁圈出来。像这样photo tag，就因为这一个功能，整个facebook photos出现了。整个爆发不到一年时间就赶过就超过flick，变成世界上最大的photo sharing的网站。",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:33",
      "text": "对他就说这么一个功能的话，就是那个aha point。就是你在做一个产品的时候，开始的时候你可能比较长的一种冬眠期，或者是一个储存量变的过程。这时候你要做的就是说不要放弃希望。另外的话找到这么一个magic point，他说的就是啊哈point这么一个东西。注意facebook的话，因为facebook是数学的老大，他所强调的就是你要把搜搜学的基因做在你的产品里面，最后变成了一个photo tag，因为这个东西一下子打开了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:04",
      "text": "怎么对，因为当时我记得很清楚，就那个功能就当时有很多。比如说你去参加一个party，大家会拍照，对吧？是的，然后最后照片的共首先照片共享是一个很困难的事情，就是有可能是别人拍了你，你跟几个人合影，你又拍了你跟几别人的几个人合影。但是传统全都是个人放到个人的那个那个相册里面去，然后互相也达不到对方，也很麻烦。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:27",
      "text": "管理，然后来有了那个tag的功能就可以。他他不光是tag，他tag完了之后还会通知你。比如说你是的你被你你你在你被谁的照片里面出现了，对吧？然后你可以顺藤摸瓜找到那些在这个聚会上面去，你有你出现过的这种照片，然后你可以找到你相关的特别的照片。就这个功能瞬间就把那个照片的社交的功能激活，当时觉得是非常牛逼的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:51",
      "text": "是的，这个功能现在想起来就觉得是天经地义的，或者是理所当然应该有的。但是它从facebook出来，photos在做这个功能，大概花了一年多的时间才想到这么做。他们开始的时候还想了一个特别搞笑的一个办法，就是说你传了这个照片之后，他就会鼓励你就是把这个照片，首先这个照片肯定会推到你所有朋友那里去。然后你就给你所有朋友群发一个类似于邮件一样的东西，给他说，我查一下这个照片怎么怎么的，你要不要看一下。另外的话后来他就说那要不要我们做一个这个photo里面有其他的人的话，让他自己给这个人，就是说他可以点一下有谁谁谁就给他发邮件之类的。再到后来的话是有有一个这个人的话是一个设计师，他是从设计的角度想问题的话，就是说人的交互的本质上是看这个照片的人头有谁，他的头像是这个哥们的话，你想把它指出来。所以说我们就直接在photo上面进行一个标记的操作，这样的话更加的intuitive点，类似于这样，后来因为这样的话就火起来了。开始的话他有一些比较初等的，就是让别人看之类的，当时news feed已经出来了，其实它就是本质上它是photo上的news feed，photo上的推送信息。后来因为在用户交互上面加了一个更加符合人的常规操作的一个东西，然后一下子火起来。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:19",
      "text": "就这个功能其实我到现在为止，比如说我在国内的，比如什么社交网站都没有看到。因为其实这东西还就是从这个写代码或者是计算的角度来讲，还是挺那个的。你要去算一下，你要跟这个照片运行，就跑一个什么人脸识别算法，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:36",
      "text": "没有，当时的话就是你点一下这照片的这个区域。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:41",
      "text": "对他但是他会有一个算法是把那个照片里面只要假设有五个人，对吧？他会把对五个人大致的这个头的位置，他会把那个框框起来。我不知道他那个算法是怎么弄。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:52",
      "text": "这是这两年的时候才加上去的，也就是前年在前年时候加上去的，一个就是把他的脸识别出来加个框。它是因为收购了face点com之后才会加了这个功能。当时它还做的更绝一点，刚开始上来的话就直接给他他直接人脸识别出来了之后给他推荐，这个人是他的算法，机器学习的算法学出来是谁？对你就确定一下就行了，基本上都是准的。但是后来的话大家觉得太恐怖了，就是那些用户又抱怨你把我的隐私搞了。对对对，所以的话后来就把这个功能一度下线了，就让用户自己去搜搜那个人的名字，他自己提供一个智能感应就行了。后来的话又把这个框取回来了，就是说这个脸的部位的话，我就把你框出来，你就不用自己框了。像这样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:38",
      "text": "对对对，这个我觉得特别好用。其他我其实到好像现在都没有在其他任何一个这种社交的或者是这个照片管理软件里面有这么好用的这么一个标记人脸的功能。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:53",
      "text": "对对对，远到那个时代的话，中国的话可能就是人人网去把这个功能的话一直借鉴过来，而且还做的也不错。在现在的话基本上是移动上面的nice和in也做的很好。我觉得对他们的不仅是简单的photo tag，还做了一些标签，标签你的心情，标签你的当时的常用语言。比如当当这种东西的时候，或者是标签写品牌，这样的话对他们analyzation可能也非常的有帮助。",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:21",
      "text": "没错，对，通过这个例子的话，我再啰嗦一句，就讲两点。我觉得比较好的其实也就是之前growth hack的话，我自己也会经常会思考的问问题。就是第一点的话，你要找到这种magic point，你也是个啊哈point给你的用户。然后用户一下觉得这个地方不一样，或者是这个地方有差异性，让用户觉得爽。对微信的话张小龙去反复提到这一点。",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:44",
      "text": "第二个的话就是说你的交互的话要intuitive，就是说用户不需要思考或者是学习很多东西。就算你是一个很简单的三步的教程，用户基本上都不想学。对，要做的像iphone 1样这种操作的，就是点进去或者是你不想点了，就是回退或者home键这种。而不要做成像汽车的那个车载系统。即使是你开宝马、奔驰或者是开玛莎拉蒂，开法拉第，你就觉得我操这个东西。像上个时代的之类的对，这么一个就看等。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:17",
      "text": "苹果的那个车出来会不会好一点。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:20",
      "text": "是的，所以说之前我写过很多growth hack的，大家会growth hack，但它本质的区别就是说你的产品有这么一个magic point，或者是满足了用户那一点核心需求，让用户觉得特别爽的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:32",
      "text": "哼对我。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:32",
      "text": "之前的话在知乎上面的话也经常去看张小龙的回答。他也反复提一点，就是说做的功能的话要满足，就像人不用去思考，就符合他们最原始的一种思维，让他们不用去思考。这就是张小龙反复在做产品的时候强调的一点。我后来的话也经常去知乎上面看张小龙一些回答。因为张小龙本人的确在知乎上面回答了很少量的一些问题，但他反复他回答的不多。但是他回答的问他答案里面反复就强调了一点，就是说做产品的时候要打到用户最intuitive的地方。就是不要让用户去思考，不要去想就自然而然的这些行为和操作做到你的产品里面去你的产品才是最强的，而且你的产品要极简。",
      "speaker": "发言人2"
    },
    {
      "time": "00:23:20",
      "text": "哼这样后面。",
      "speaker": "发言人1"
    },
    {
      "time": "00:23:21",
      "text": "的话就是Chris回到Chris cox的演讲之后的话，他还反复最后强调了一下我们的公司的一个slogan，或者是一个公司的口号，就是要make the word more open and connected。类似于这种即使现在的话，我们要做的所有事情也是连接全世界。下面这样经过了Chris cox的演讲之后，我就对这个公司或者对美国的一个公司有了一个感觉，切身实际的一个认识。就是说他们的领导讲话都是很有条理的，我觉得很有逻辑，几乎没有什么废话，也没有这种stop words。他们讲怕他说没有什么很多you know you know或者这种他们的措辞感觉都是精心准备的，没有垃圾的这可能是因为这个on board training的时候，他们可能基本都变了。是了，对，当时我就觉得这个和国内的领导人比的话，就是我们要走的路还很长。",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:19",
      "text": "同时的话他们的文化的话，我就觉得对人或者是对我们的工程师是非常重视的，的确是给我们很大的空间。就像我上一期讲的，我马上就有权限去看代码，同时的话马上就给我一个任务去修改facebook com上面的一个bug。同时的话他们没有太多的权限控制，或者是没有那种这个地方是不是要控制一下，那个地方是不是要上级签个字，批准一下，不然的话会不会乱。他没有这种，他就先放出去搞，先赡养，就是大家一起，其实搞搞出问题的时候，我想这个机制是什么？不像国内的话，可能就是我们的文化长久以来教育的结果，就是大家会有时候会更加的保守，中庸一点，或者是甚至在有些地方碰碰及到一些敏感地方，就先自我阉割一样。这样的话其实对创新是有害的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:11",
      "text": "我觉得很多地方大家会预先说，这个地方的权限控制要是否做好。之前我去过公司就是这样的。之前我到一个公司宁想这个成绩，宁想这个签字，审核做的越细越好。这些所有的东西都对engineering的话是一个绑手绑脚，或者对你整个一个公司的工程进度的发展是无形的，造成了很大的这种负担。维护的成本或者做事的成本都是这样。就没法就是move fast.",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:38",
      "text": "对，摩擦力大了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:40",
      "text": "对，好，大概就这样了。然后后来的话就是我如愿以偿的进入到了我的我喜欢的那个团队，也就是facebook phone这个团队。Facebook phone这个团队加入的话，当时还是因为有另外一个中国人，一个叫魏小亮的，也就是David way。他现在的话是华人的，在facebook最早成为director的一个人，然后很厉害。他当年是清华996级的，大概是这样。哼也是搞计算机竞赛，后来的话还去当清华的ACMICPC的教练，也随着后来的话去car tech，就是加州理工。对我对加州理工的了解，还是有一个台湾女生当时写了一篇文章叫从加州理工到高盛银行。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:32",
      "text": "看得我特别的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:33",
      "text": "热血沸腾。可能后来的话有些人看我的知乎专栏，看我写的文章也觉得热血沸腾。但是如果有一篇文章我要推荐给大家说，当年让我看的热血沸腾的话，就是从加州理工到高盛。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:47",
      "text": "银行满满的鸡汤。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:51",
      "text": "对他他说的很干货，其实他讲了自己怎么奋斗的，怎么出国，怎么看各人的东西。的确是我觉得每个本科生的话或者是大学生的话，你们都应该去看一下。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:03",
      "text": "哼再接下来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:04",
      "text": "的话就是说去了这个boot camp的话，就是和微小亮，微小亮就变成我的闷头了，就是David的way。然后就给了我很多很多的各种各样的帮助，就是从工作方面也好，后面的话我再细讲，以及这个facebook phone这个组到底是干嘛的，当年可是大红大紫或者是高度机密的一个组。当时我们的地方都不在，都都没有和facebook所有人都在一个楼里面，都没有我们自己有一个独特，就是在外面的单独的楼。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:32",
      "text": "就不在那个公司的办公楼群里面。是的，OK就为什么这么考虑，是为了保密还是怎么样？",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:38",
      "text": "是为了保密。对，OK当时的话非常敏感，是因为做这个东西的话很可能影响和APP的关系。对因为zack和Steve jobs私交甚好，经常一起吃晚饭，对吧？你要做个iphone出来的话，Steve jobs.",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:54",
      "text": "可能就跟你绝交了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:56",
      "text": "这脾气也是那种很暴躁很偏执的，那可就以后不要在这个硅谷圈混了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:02",
      "text": "这个facebook phone诞生的背景是什么？可以介绍一下吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:06",
      "text": "Facebook phone诞生的背景就是说那个时候是2010年.",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:11",
      "text": "哼大家都已经出来第三年上面了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:14",
      "text": "第三点，而且SDK和这个生态系统已经在繁荣，在逐渐繁荣的一个过程中。所以在这个时候大家已经很明显的看到就是移动的机会，移动互联网的机会。然后google在布局了MC，microsoft也在做了，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:33",
      "text": "然后facebook自己也要整一套出来，这是他们的想法。但他们不想整一个为了做电话而做电话的，他们想做一个差异化的是social风，就是说这个社交的属性非常重，而且社交的属性是直接来改造安卓上面来做的。另外的话，整个facebook还算一个web company，就是所有东西都基于网页的。我们是一个在网页上做的特别好的一个公司。所以他想把这个东西是整个电话的话，整整个基于网页，也就是基于当年大红大紫的HTM5的技术来做。后来的话就是这个项目staten ambitious了，然后动用了太大的资源以及太多的人，然后难度的话比我们想象的要大不少，最后就是没有成功这个项目的话就不停的转型，不停的转。后来又做了一个很简单的，等下我再继续讲这个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:27",
      "text": "如果按照时间我想按照时间来讲的话，就是我进了facebook大概就两个月不到一点的时间的话，先经历了三个我都觉得特别有意思的事情。第一件事情的时候，当时是年底，就有一个我们的公司的年会。首先的话就经是经历了我们公司的一个年会。年会的话就是在每一年和国内公司不太一样。国内公司可能是春节前就开始开一个公司年会，对吧？对，在美国的话大概是在12月的第一个星期或者第二个星期的时候，他们主要是过圣诞。对开一个年会的话，就是所有的公司员工都在这个会议室里面，然后开始就约定一个时间。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:14",
      "text": "开始的话，当时我记得清清楚楚，时间快到的时候就是扎克伯格一跳跳到一个板子上面去。当时还比较简陋，在一个类似于仓库一样的环境，他就搭了一个台子，下面放了好多的椅子，全国全部公司的人坐在大概一千多人。我离开公司的时候，公司有1万人。对，当时就一千多人，扎克伯格就直接爬上去，爬上去之后拿麦克风，他也没说，大家好，各位领导或者是各位下面的人，怎么怎么我们的会议开始了，大家鼓掌。没有这个他就大叫一声别说话，开始，然后就开始讲，这是我们的月会的，我们的年会主要内容是什么？他就先分析了整个公司的战略，以及公司现在发展怎么样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:55",
      "text": "然后再说了我们上一年的时候制定的这个公司必须完成的目标是什么？我们现在达成的情况是怎么样，就一个过当年设定的任务现在是否完成，以及现在我们的状况是什么，统计是怎样，就是这么一个过程。首先先过了每个部门完成的标准，当时完成的还不错，当时我其实完成的很好，然后整个的奖金的系数是1.25。我就记得他公司会根据整个公司的绩效给你一个评分。当时的话是整个公司是1.25。然后再接下来的话，他就会展望接下来一年要干嘛。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:34",
      "text": "然后公司的核心是什么？公公他当时记得清清楚楚举了几个核心。第一个在mobile上面，我们要继续发力。因为以后的话就是一个mobile的天下，我们公司必须变成一个mobile company。然后facebook phone的话，这个项目会非常的重要。当时有个内部的代号的叫巴菲特，叫buffet。BUFFYOK小吸血鬼，BUFFY为什么。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:00",
      "text": "起这个名字？",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:02",
      "text": "他们code name就是讲各种各样的神，各种各样有趣的东西，最开始这个名字缘由的话是因为叫slayer。Social layer本来是叫是在电话的中间加一层社交的层就叫social layer。对，social layer合在一起就是s lair，就是slater slayer，就是吸血鬼的意思。Slater这个单词当时是给和微软讨论的时候，Steve博尔玛，Steve首先扎克伯格和比尔盖茨是私交特别好的，然后他们整个讨论的时候就是比尔盖茨，Steve沃尔玛都在。因为他比较合作这个电话的时候，就觉得Steve a Steve burma说这个slave这个词让人觉得吸血鬼日记里面很恐怖的那种吸血鬼，就是不太可爱，我们就换一个。后来就想想想想到一个小吸血鬼，蝙蝠就是很可爱的，就是一个电视里面一个角色叫buffet的BUFFY。好，就叫了巴菲这个词明白，对，这个是比较考验功底的。后来还有一些column，就比如说Spark c就是星际穿穿穿越里面，星际航行里面那个宇宙飞船的名字，类似于这种。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:08",
      "text": "然后我回到中国之后，我基本上很少用英文。就是说一一整个句子的话尽量不用英文，就不用英文那些。但是有时候会写的时候，一些专业用语还会带一些英文上来的，就经常在知乎上面别人会说我喜欢掉书袋，喜欢中文夹杂英，我还是觉得挺憋屈的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:24",
      "text": "但是我觉得特别让人觉得悲剧的事，或者是让人觉得可悲的地方是经常我有一些朋友在外企工作的，其实在中国这种英语又不咋地的地方工作的，动不动就是把自己的微信上面的名字都不敢用自己的真名，不敢不用中文名，而是优先用英文名。那我就觉得特别的可悲。因为大家都是中国人，还是应该多用自己的语言，类似于这种然后真正和他们讲slaws不认识，讲巴菲的时候也不知道是干嘛的，然后就是自己的英文名叫飞起来了。我觉得这种现象的话，我觉得在国内里面，我想把大家再翻过来，我还是更加觉得阿里巴巴更牛逼一点。就是用花名，用自己有有自己文化象征的。然后我我我英文名我自己都不用了，这个我当然肯定是有英文名的。当然在facebook的时候，我现在就叫清朝，或者叫清朝小魔王之类的。这种东西的话我再多说一句，可能也就是因为我在那边有工作过，之前也留学，所以我有这样的特权，然后可以就直接教我的中文名就算了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:25",
      "text": "如果真正你在这个环境下，一直待在外企的环境也好，在投资的环境也好，你还是想不由自主的感觉把自己的英文名叫起来那种感觉就好像就比如说我在这个投资，现在在丰瑞资本的话。有时候见很多人来打招呼什么的，我叫rain，我叫叫什么什么名字，我都说你们好，我叫秦朝之类的。我当时就觉得和他们觉得有点格格不入的一种感觉。但是真正一介绍背景起来的话，他们都不咋地，类似于这种。对，然后他的名字就叫巴菲，就是由于这个过来的，他当时就是整个公司的重点的话，就是会在移动上面，比如说把我们的IOS APP以及安卓APP做的更好。要不的话把我们的首秀的phone赶快的推出来。另外当时还有一个非常重要的点就是go china。我记得清清楚楚，不是go to china，也不是go to china market。Chinese market不是它就叫go china。哼中间连那个助词to都没有的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:29",
      "text": "他的确是这样的OK.",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:31",
      "text": "这表示他一种决心。然后以及讲的那个就是好像是类似于go bucket，它不是go to fucking对吧？Go fucking这种go china同时的话就像你们看过苹果的一些宣传语的话，会讲think different对吧？对，而不是说think differently。如果是中文的话，在中国学英文的话，你会说你是不是应该讲think differently的？其实按照语法的话的确是这样的。但是Steve jobs在自己的自传里面也解释过一句，就是为什么他用think different，而不是用think differently。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:04",
      "text": "细节的话，你可以看我知乎上面有个回答，就是关于这个的。Steve jobs的传记上面都写的有的。哼好，我们就废话少说，再继续。他们就当时说了一个go china。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:17",
      "text": "然后在正是因为这件事上面，扎克伯格就是说我以后的话每两周要学习一次中文，就是叫所有的中国同事来给他上课。每两周的时候有1个小时的会议，这个小时的会议的话就是一群中国同事和扎克伯格一起，用中文来探讨一些问题。也就是这是2010年底，因为他这个时候他开始慢慢的打下了中国的基础。以至于今年的话，2015年三个月前还是两个月前的时候，对他来清华的话就用中文文言来讲话了，对吧？但是如果你认真听他的，对对对，你认真听他的中文的话，你会觉得他讲中文的话完全就变了一个人。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:07",
      "text": "他用英文讲的时候，你觉得他是一个很成熟的30岁的人。而且他表现出来的成熟以及他了解的东西远远超过他这个年龄。但是他一换到中文的一一中文的话，他就一下子变成了一个十岁左右的小孩，讲话的感觉就是萌幼稚。同理可得，一个特别牛逼在想在中国干大事的人，一下子跑到英文的环境里面去。就是现在在硅谷在美国打拼的那些华人，他用中文一讲话的时候，在外国人看来就感觉这个人像一个12岁左右的小孩子一样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:42",
      "text": "你就不由自主的变得萌，或者是变得让大家觉得你是一个感觉很多地方不太像纸牌屋里面能够玩弄起一些政治，或者是没有在共同语言，或者是没有大家在一个thinking level的一种情况。在这种情况的话，你就不由自主的会被他们边缘化，或者是他们无法把你做当做一个战略合作伙伴的关系。因为你是小孩儿，他们是觉得自己是大人，这样的话就变成一种令人觉得毛骨悚然的一种壁垒。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:11",
      "text": "就语言障碍。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:13",
      "text": "像这样对你就觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:14",
      "text": "你不够sophistic ted。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:17",
      "text": "是的，而且也害怕这个东西搞不搞得定什么，他们也类似于要有一些接地气的地方，就类似于这种送礼，权益的交换，摸清对方想要的是什么之类的东西。然后在这个时候他就不知道你是不是能够加入他们这个团队的人，也不知道你玩不玩的会这一套之类的对，虽然你你你心里面清楚，我操你你你这些政治或者玩这些玩在中国我在想这小舅见大巫了，但是他们不会这么觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:51",
      "text": "对，那个扯远了，说回那个那个facebook的phone，就在这个大背景下，其实就各家都在搞了，就是iphone走在前面，然后安卓也开始在往一个，但是还是处于追赶的阶段。应该是的。然后微软的话，它的windows phone应该还没有起来，那个还是叫那个叫什么来着？Windows phone之前的那个系统叫。Windows mobile对windows mobile对还还是windows mobile的时代对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:22",
      "text": "它当时的windows phone已经起来了，其实有metro风格，那个叫metro风格的那个UI对对对，已经发布了，而且也开始有有卖的了。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:33",
      "text": "Ok那那这个情况下facebook想做这个phone，他是说要选好一个。就是他不想做一个传统的或者说跟其他商家去竞争的这么一个底层的平台。他做中间层级的话，这个怎么做呢？",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:47",
      "text": "具体首先要做的话就是首先和硬件厂商，其中一家硬件厂商合作，就来生产电话。当时是他是和HTC来做的，也是要做硬件的，不是做硬件，就是设计一个硬件。然后他去做就好像是现在的，比如说360手机，你不能完全说他设计的硬件。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:08",
      "text": "怎么说，就是和产硬件厂商一起做一个方案，然后你提出你的需求，这些他帮你按需生产。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:14",
      "text": "对，是的，OK. 而且在硬件上面的就是大的设计没有，就是根本没有像小米或者是像锤子手机里那样，在工业设计上面吹毛求疵。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:28",
      "text": "很多地方就是追求的是一个普通的大众配件。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:32",
      "text": "对对对，OK可能是用比较好一点的配置，或者是比较先进一点的配置。以及比如说我们选当年的telega three tira 3的芯片NVIDIA，而没有选夸com的高芯片，类似于这种。但是我们没有做硬件方面的，就是很高度化的定制，因为我本来也没有什么硬件团队。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:51",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:51",
      "text": "那软件硬件方面就是和这些厂商合作，类似于就做一个360手机一样的OK。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:57",
      "text": "那软件上面。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:58",
      "text": "软件上面的话就有很多的人，当时这个team的话非常大的发展，最后非常大我刚进去的时候大概就十个人不到。后面那个时候已经有将近200个人的团队。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:09",
      "text": "你刚进去的时候他们已经选型定好了，比如说底层要用什么系统，然后中间要怎么弄？",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:14",
      "text": "没有完全，但是在制作的过程中OK。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:17",
      "text": "所以这段的经历你可以介绍一下是怎么就还还是挺挺好奇的一件事儿。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:23",
      "text": "对当年的那个老大这个组的一个老大叫matt pop keyboard，就是从google挖过来的。他在google的话是负责chrome OS的，所以就是一类似于一个相似的一个行业。因为他觉得他因为我们觉得他在这方面有经验，就把他叫过来了，于是他就负责做我们的这个facebook 4.",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:44",
      "text": "也是他推动的采用像这个HT mall 5，还有那些web的一些技术站去做上层应用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:52",
      "text": "并不是我现在给大家讲再详细的说，OK这个是立的这个项目的，但最上面的话整个像被推动起来的话，其实是brad Taylor在后面做的。就是brad Taylor r把这个mad pop keeper是招进来的，是bret Taylor是其实是这个项目的最终的主导者。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:12",
      "text": "我们上期节目里面有提到brad Taylors以前是friend feed的这个CEOICTO还是C意思，创始人创始人。对，然后ffa被facebook收购了之后，他就去facebook做了c facebook的CTO。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:28",
      "text": "是的，对他也写过那个tornado。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:31",
      "text": "对，这个代表作品toradjas。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:35",
      "text": "对对对，知乎的后台。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:37",
      "text": "所以这个facebook phone这个项目背后是他在推动的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:40",
      "text": "是他最后推动过来的。因为而他是HTM five的坚决的拥护者，于是他就想这个东西是基于网页的，基于HTML five的。然后他把md pop keyboard是从google挖过来了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:58",
      "text": "Md pop keyboard是的话之前是做硬件相关的，所以他就把这个硬件说我们要自己来做，就变成说硬件中间的OS之间的这个broster，以及它前面的上面的我们的first party APP，就是系统自带这些APP，以及整个生态系统SDK的话都是由我们来做，整个就会变得很重了。OK但是因为中的话就觉得这个项目巨牛逼或者是巨的大，然后能做成的话你肯定也可以，相当于自己起一壁江山一样。像这个过程，然后就开始做做的时候就刚才说了，下面的底层的话就是用和HTC来合作，中间的话就是开始来改安卓的一个版本。我们当时从ginger bread开始来改的，ginger bread的话就是姜饼。那个版本在上面的话，把他们的把安卓的那些原生的这些APP全部都剔掉了。我们不需要用安卓自带这些远程的APP了，把这些很多都是直接从系统里面踢掉。OK另外的话当时的话那个android的brothers的话，他不是用crop的，也没有用web kit的这个内核。所以我们把整个很大的web kit移植到了那个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:14",
      "text": "时候的chrome。那个安卓浏览器内核内核是什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:19",
      "text": "就是自己有个叫android的brother，就很简单的，就比较弱，是单线程。对，单进程单线程只要有一个挂的话，这个chrome就挂了，这个broster就挂了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:32",
      "text": "OK所以你们还自己把那个web cake移植进去了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:36",
      "text": "对，把web cade来移植进去。但是web cade本质上本身是自己不支持多进程的。哼是chrome自己加了一个，我在外面包了一个多进程的。导致你一个tab挂的话，你整个浏览器是不崩的对吧？你只要把那一个tab kill掉就行了。对，好，当时移动下面完全没有这个条件，当时是两地10年你在iphone下面也没有。你在iphone上面用它的mobile safari的话，也是这样挂的话，整个safari这个APP也挂了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:07",
      "text": "我都不确定现在的IS群里面的是不是还是这样。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:11",
      "text": "我也不太确定。但是因为我记得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:13",
      "text": "在那个桌面版的mac上面的那个test top surface也是非常好像到九才开始支持这个多进程的模型。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:22",
      "text": "当时对，是的，即使在安卓上面的那个chrome的话，也是在三年前还是四年前出来的OK那是对它这个有个问。然后这就带来一个问题，就是说你的这个浏览器效率就会非常重要的。这样的话就是浏览器本身的话也必须是这个缝很重要一部分。因为我们是非常重度的依赖于HTMI five。而且HTMI five的话从中间会把很多这样操作会推到前端来做，就是推到java script t来做对，所以的话你的java script engine要非常的厉害。对那个时候的话就根本我们就自己从google chrome团队挖了几个V8的那个就是那个note note用那个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:08",
      "text": "V8那个javascript引擎。",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:11",
      "text": "对，是的，V8 javascript制作者其中有个中国人叫钱锋的对对，就把它挖过来了。他之前就一直在google来做那个V8引擎，然后整个V8引擎也就是他们一帮人一起做的，就是那个引擎的话效率非常高。后来的话也就是因为这个引擎的话，load GS能够得以发展，就是他把这个V8放在server端了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:31",
      "text": "没错。",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:34",
      "text": "好，当时就把整个web kit移植到整个broster里面去，去进行各种样式优化修改，在里面加各种各样的功能。当时的话我们的人没有那么强，也没有那么多的话，就没法做一个多进程的那个web brother进来。Mobile broster当时就突发奇想做了一个三进程。The closer OK因为你就可以自己那种hard code写进程，就是说裸写进程，裸体这种web kit的进程。但他不会用程序来管理和分开的话，他觉得很麻烦，所以他就改了很多全局变量的前缀。但是你改环境变成前缀的话，其实是很大的一个工作量。所以他们就把很多前缀加了一个，比如说A，反正加了一个XX什么什么这些的。但是这个问题的话，你在编译的过程中，就是相当于是编译器的创建进程了，或者是在编译器的时候来改代码了。就并不能后面的话动态来做这些事情了，对吧？那就说行，没办法，那我们就超快猛先搞呗，然后就搞出了三进程的一个浏览器，就是只能三进程，就是固定的三个进程。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:48",
      "text": "对，固定的三个进程。就是因为做代码，就是把代码其实拷贝了三份，然后把全局变量前面加了一个前缀的名字，然后这样的话让全局变成不再冲突。而真正开了三有什么好处？",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:00",
      "text": "Web kit开了三进程之后，其中第一个进程的话就是来跑我们facebook自己在这个电话里面做的一些应用。比如说打电话，比如说发消息，比如说看photos，看天气，这些应用的话就在第一个进程跑。也就是说因为是我们自己写的话，我们基本上会把它写的很稳定。这个进程基本上不会挂OK。然后第二个进程就是给我们的third party apps来跑，就是其他的开发工程师可能自己开发了一些东西。因为我们的SDK他们的进程，他们的APP的话就跑在第二个进程上面。这样的话他们写出什么bug？因为他们的web APP的话，我们的我们是不能控制质量的对他们有什么问题的话，就只挂自己的第二个进程，就不会影响第一方的应用。是的，然后再开第三个进程，就是让用户来上网的。用户不是要经常逛一些网站，或者是这些网站可能有问题的话话。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:56",
      "text": "我突然意识到就是你之前说引入web care，其实我还没到没没太理解它的重要性。因为如果其实所有第一方向的应用也是这个YHT85的话，你们也需要一个web kit的引擎来跑那些地方的应用，对吧？是的，所以的所以这个底层的稳定性就非常重。那为什么？就是当时是因为。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:17",
      "text": "没有我打我打断一下，你就可以想成这个电话从很高的。层面来看，就是一个大脑就变成了对对对，下面是硬件吧？中间是OS就是an android system。在上面的话加了一个我们自己修改过的web kit的这个brothers。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:33",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:33",
      "text": "和web kit这个broster并行的，就已经没有原生的应用了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:39",
      "text": "所有都被干掉了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:40",
      "text": "对，就变成一个大的web broker。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:43",
      "text": "那真的和那个chrome OS的思路一模一样。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:46",
      "text": "是的，所以他借鉴这个，就是一很大的一个web kit，然后他的这上面的话再加了所有的HTM5的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:54",
      "text": "对，然后刚才你说是因为没有这个足够的时间和开发人力去做真正意这样的多进程。就是比如说每个第一方案应用是在一个独立的这个website进程里面跑，而是说所有的第一方应用在同一个web c进程里面跑，然后所有的第三方应用在另外一个web k进程里面跑，最后那些网页又在另外一个web k进程里面跑，是这样吗？是的，这个就是简单粗暴。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:20",
      "text": "是的，简单粗暴就是三线三进程系统OK是这样的，当时做好了之后，性能一直没有得到改变，性能问题一直没有得到改善。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:32",
      "text": "这毕竟是20在2010年是吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:34",
      "text": "2010年2011年的时候。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:36",
      "text": "对比较硬件还不是太好。那时候应该是iphone几来的，三还是iphone 4已经出来了四了OK，对，也就是retinal的这个屏幕了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:46",
      "text": "对。当时我们还有一个我记得非常清楚的，就是说当时backbone大家已经在开始用了。在硅谷的时候，我们自己写了一套类似于backbone的叫bot GS的那个前的框架，只是没有开源出去罢了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:02",
      "text": "后来这个是因为你写第一方应用的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:05",
      "text": "一个框架吗？对对对，我们所有的第一方应用都是在前端进行渲染，也就是在基于浏览器的一个web APP，也就是相当于是一个前端MVC也好，或者你也可以说前端MMV还是叫MMMVVC。对，类似于这种。对，当年在五年前的话，我们就是在这样做的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:26",
      "text": "我们的那个框架的话就是基于backroom，但是里面就是对为移动优化了特别多，整个框架也是比较轻的。你可以很方便的就是写你的model，写你的那个view，controller之类的。然后用javascript的话就做了一个相当于做了一个移动的APP。然后和后端的话就是通过那个那个HTTP request来进行通信的。然后用那个graph QL也其实本质上就是用节省。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:58",
      "text": "那个时候已经有graf QL了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:00",
      "text": "对，那时候已经有graf q早。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:01",
      "text": "因为graf q最近才开放出来给外面的人用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:05",
      "text": "对，那个时候已经有了。最近开放的话是因为他自己做了一套graph QL那个库，支持移动上面的，然后吹的比较火了。最早的话就是做facebook platform的话，graf QL已经在在这个网页端已经很火了。就是当年ZENGA的所有的游戏基本上是基于graf QL。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:27",
      "text": "对但那个时候只对这个facebook他的那个合作。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:31",
      "text": "有认证的developer对才有。然后主要是网页上的，也就是说是desk top.",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:37",
      "text": "是的OK然后就类似于做各种各样。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:40",
      "text": "的web APP。但是当时就是很大的一个问题就是性能上的问题。性能上的问题的话最主要来反映的话就是首先浏览器自己它的性能并不好。在某宝上面的话。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:57",
      "text": "就这个到问题到现在也没有解决吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:59",
      "text": "其实是的，当时我们会觉得越来越快，现在不是什么问题，但是现在没想到来的那么慢，自己一厢情愿。对对对，然后第二个问题的话就是说你其实本质上是在你的OS上面再多加了一层broader，然后再到你的APP的话。对，其实你越加越多加成绩的话，那性能上带来的好处可能是兼容性好，对吧？比如说跨平台之类的，但是你的性能损失就越多。在某mobile这么一个平台的话是不可能的。在mobile的话就是越越底层越好。你恨不得直接上C一和C加加，直接调open GL来来来画图。对，感觉是这样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:36",
      "text": "还有第三层的话，javascript engine的话，其实那时候根本没有发展的特别彻底。比如说那个V8的话都是我们自己加进来的。再比如说的话那个natural那个引擎，就是saffery里面的那个natural这个引擎，你在你你用你写程序的话，用UI web I web view的话，根本就没法没有。对，就没有。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:55",
      "text": "只有在自己的那个那个浏览器里面才会有。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:59",
      "text": "对，是的。还有的话就是这个java script的。Java script engine一个最大毛病就是说它是单进程单线程的。那单线怎么跑的？所以的话经常你在用javascript做一些比如说fish data就是取数据的操作的时候，经常把那个javascript engine卡住，把它的那个主线程卡住，或者是java javascript在做那个garbage connection的时候会占用主线程。对，就一下子卡住之后，当时暂停吗？直接导致你的用户的输入没有响应。就是你点这个屏幕的话，这个屏幕没响应。对，这样的话就是最大的一个问题了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:38",
      "text": "其实对，后来当时有那个web worker，有web worker.",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:41",
      "text": "有web worker，这是一个很好的问题。Web worker web web worker所做的一个事情，就是说让javascript的可以支持多线程。对，你可以重新开一个线程来专门做一个worker的操作。对，是这样的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:55",
      "text": "但UI这块好像还是在同一个那个跟起码跟javascript执行的那个解析器是在同一个进程里面的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:01",
      "text": "是的，但它的缺点是你只能做一些非大M相关的。你只要你你如果要操作dump的话，你就必须出了回来了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:10",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:12",
      "text": "所以说你要操作dom的操作的话，必须把它重新再call back回来。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:17",
      "text": "对，这也是为什么后来我不知道刚才你说那个boat后来的这个react有没有关系。后来是其实没有关系做的，但起码后来那个react做对了一件事，就是把那个dorm操作从虚拟出来。因为dom操作是最费时的。对，所以把那个内存虚拟出来，在java screen里面重新搞了个the virtual dorm，然后再再来搞一遍。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:39",
      "text": "这样通过v dom来进行。其实你看这个对dump的一个操作，其实本质上是和所有的OS都是异曲同工之妙。比如说和IOS，比如说安卓的话，他们的本质就是说你要进行UIK的操作。比如说你要进行渲染操作，那就可能到你的主线程。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:58",
      "text": "明白。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:59",
      "text": "所以当时因为这个原因的话，这个效率就提不起来。这个效率提不起来的话，就是用户的体验非常差。当时的话iphone 4其实已经体验非常好了。对，但是我们的体验的话基本上还在iphone 3，就是连iphone 3GS都没有。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:16",
      "text": "在落后了两年至少对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:18",
      "text": "就根本就是没法用。另外还有一个就是说你加了中间加了各种各样的成绩的话，你的效率是低下的。效率低下的话你必须用更好的硬件去补。对，用更好的硬件去补的话，你的电话就是更耗电。这样的话对用户就是一种，这个手机为什么这么烫的一种体验。同时的话还有就是说你效率低的话，你经常要漏的整个网页，而不是像那种原生的APP这样子只需要发一个请求来一批Jason，对吧？我们经常要发整个HTTP request的，把整个HTMLL，还把CSS还有javascript TT全部拿过来的话，对于整个用户的而且我们没法特别好的缓存。因为我们没法控制浏览器的缓存，所以导致的就是用户数据量消耗很大。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:05",
      "text": "就每次都要重新去服务器上去，然后再发给服务器去存。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:09",
      "text": "对，是的。所以这个项目就一下子的被就是觉得没希望就是觉得没希望就觉得没希望那种感觉。后来就被一步一步降低优先级。然后一从一开始从十几个人一开始直接扩招，来了很多director，来了很多manager，然后这个组就一下变成80个人，再到最后将近200人，再到最后就慢慢消减。然后的话相当于整个HTM5在其他的在facebook的IIOS和facebook android这上面都做的不是特别好。所以整个的话公司就扭转了这个形式，就不再遵循H天猫五了。也就是说这个facebook phone的话也没有受到那么多重视，然后就把这个facebook phone后来就越来越消遣，硬件就不用了，OS也不用了，这些web APP也不用做了。最后就变成在android的上面的一个叫facebook home的一个项目。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:06",
      "text": "这个是就facebook home是facebook phone的一个缩减后的结果。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:11",
      "text": "对，一步被削减之后，就变成这个玩意儿。开始的时候要做一个航母，然后就发现航母太难了，就做做一个大型战舰大和号。然后觉得大和号太大了，造不出来怎么的，然后造一个小区组建，然后造着造最后变成造一个游艇了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:30",
      "text": "这个在在这之前中间就没有任何人或者这个项目里面没有讨论过说HDM5这个性能问题解决不了的话，为什么不用原生的像java或者是其他什么来写。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:44",
      "text": "有有讨论过。然后我们的android APP和IRS的APP，就是facebook的话全部都转为原生了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:52",
      "text": "对，因为当时zack发了一封信，说是是放弃这个。他们也是不光是这个facebook phone，其实包括像facebook的在安卓，像其他的一些原生的官方客户端，也是尝试了相当长一段时间走这个H015化的道路。但是后来也是这个新的问题，让我们过去选择放弃了。是的，OK是这样。这几件事情其实同时发就差不多在同一个时间发生。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:21",
      "text": "的那个时发生的对，也正是因为这个转型的话，后来brad Taylor的话自己的HTMI5的整个战略的话就是需要告失败。以及他在整个公司的话基本上就没有太多的说话力量，也没有太多的项目由他主导了。后来他就离开了这个公司，去创立了一个叫creep的应用，做的也很不错。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:42",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:43",
      "text": "真的因为也是因为有这个原因的话，我再多啰嗦一句。当时的话因为我们也考虑过，能不能就直接全部做原生的一个缝出来了。对，但是我们考虑来考虑去的话，就是这个缝的话其实本质上是没有一个竞争力的。就是你没做成一个OS出来了，你没法做自己的OS做这些SDK，然后和android的IOS来打了，你就只是变成一个360手机，就是后来做的那个facebook home一样。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:13",
      "text": "但是这个思路，这个想法，其实你用HT5和用不用HM其实并不影响这个结果。是的，就是我我不明白为什么。如果如果认为用原生的这个代码去写应用就和就没有什么differences的话，那那跟用H65做了之后又会有什么definition，好像也没有。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:38",
      "text": "也没有是任何的different。选一选也就这样的话，整个HTM five的话就不就不再坚持了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:44",
      "text": "那那整个凤这个项目本身也是同样道理放弃了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:48",
      "text": "对，因为也就是说如果我们旋转原生的话，我们必须自己做一个OS出来。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:56",
      "text": "了就觉得撑不住了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:57",
      "text": "就完全不可能。是的。然后因为我们在整个移动上面的话，就是android的和和IOS自己的本线，就自己的主线的话做的很差，所以的话我们要把好的工程师都输送到那边去。另外的话在11年下半年的时候，google plus出来了。整个facebook做的一件事情是go china暂停，认真的和google对打。所以的话这么一个高成本的一个项目，最后就只能被砍掉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:29",
      "text": "所以其实可以这么说，是google plus的出现给facebook造成了一个比较大的什么生存挑战。所以使得他们放弃了一些可以说是非核心业务，非核心的一些项目，集中精力去做好这个老本行。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:45",
      "text": "是的，好OK。其实在facebook .",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:48",
      "text": "phone这个组里面，你你你在做哪一部分的东西？",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:52",
      "text": "我在做就是当时用javascript的整个写了一个data的layer。接下来指的是我当时是用的HTM five的，里面有个DB就是HTM five的话就是在那个浏览器里面加了一个关系型数据库。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:10",
      "text": "是那个circle light吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:12",
      "text": "类似于circle light对OK。然后基于这个数据库，我就写了一套类似于这种ORM的一套框架，以及自动获取的一个框架。同时还有一个就是发network request，就是把这些数据从server那边同步过来。我们叫data think的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:31",
      "text": "就是有点类似于这个s core的core data那一个部分的组件是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:36",
      "text": "对，有点类似。然后的话我们会加一个desk cash，首先它本质就是说从server把数据取下来，对吧？对，然后你就发HTTP request从server了。同时的话你要注意你的时间，你的time dump是不是用那个就是做那个data sink，也就是说只sink这个增量，而不是每次选取。然后在本地的话，西安是存在数据库里面的，就是你的disk cash persistent。然后再接下来的话，前面再加一个memory cash，就是说很快的这种memory cash放这里。对，然后再到前面的话，就是变成你有一套这个class，就是把这些数据的话就变成一个java javascript的class，然后可以让大家来用。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:25",
      "text": "就这个是也是提供给作为一个框架或者是一个library提供给你们自己第一方的这是一个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:32",
      "text": "很大的data layer，对就是给所有的first party .",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:37",
      "text": "APP来用的。Ok是，所以这个框架后来后来就不了了之了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:42",
      "text": "还是后来就对整个框架都都不需要被用了？",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:47",
      "text": "其实我一直很好奇，因为现在也看到后来还有一些新的尝试，特别是像去年还是前年。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:54",
      "text": "去年后面的有有一段时间，他说不好意思，我继续打断，就是后面接下来的一的时间计划。基本上就是我就在做整个安卓的很底层的一些东西了。它是类似于这个安卓的自动更新，以及安卓里面它就是C加加那一块的东西。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:15",
      "text": "当年我还是和有一个叫黑客，一个叫George hotz的，就是JJ hot，那个哥们儿就坐就在一个组。然后我们经常很晚的时候也在这个房间里面，说各种有趣的东西。他就说他他当年hack那个iphone以及hack那个playstation的时候，各种故事。对，只有猴子，只不过后来他就干了七个月就走了。现在的话他又红起来是因为他做了一个无人驾驶汽车，和那个伊朗bus打赌说我这个汽车比这个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:45",
      "text": "那哥们儿我想特斯拉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:47",
      "text": "这个汽车对他就接house。对他做p playstation hacked playstation的时候被索尼告，然后他就直接在电视里面骂索尼，就录了一个youtube的。然后说索尼什么傻什么什么的，就要告我之类的。然后他旁边有一堆朋友，然后他在网上募资，然后说大家好，我是gay hot。我觉得很多人听过我是因为我hack的iphone，然后给大家用了gear break的iphone。",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:11",
      "text": "然后现在的话我被索尼告一个日本的公司，一个外国的公司来告我。你们大家都是同胞，都是美国人。然后我做的之前的开源，我做的这些破解的东西都是免费发放给你的。但是因为此，我现在并没有钱请律师来帮我摆脱关系。",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:27",
      "text": "还肿出了一个律师项目。",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:29",
      "text": "来给我穆穆兹。对，来给我捐款。对，就很多人出手，一下子钱就超募了。首先他们的民族凝聚力是有的，我觉得特别强。而且它里面的人就是他一开始做这些东西凭兴趣，并不要既要钱那种也不为吃穿来发愁。但是真正他遇到什么事情的时候，真正要一大笔钱的时候，就很多人来帮他解决的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:57",
      "text": "还有一些他朋友里面，还有一些崇拜他里面就是有deep pocket那种。他他上那个电视直播，还上那个BBC采访他的时候，他后来说you have a lot of friends with deep pocket。这是口口口袋很深的一些朋友啊，就是很有钱的土豪朋友。对，就给他捐钱。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:15",
      "text": "像现在我就众筹一件T恤，98人民币的这个T恤。就是很多人在北上广吃一顿饭的话，就不止人均就不止100块。可能对我众筹这么一件T恤就22 20件的话，我都愁了。现在多少？将近两个星期了，还有十天。希望听我这些的，或者是之前看我知乎的，或者是之前多多少少我的我的我说的这些东西，觉得你觉得有趣也好，或者觉得你有孤独也好，希望你能够支持我。一件T恤也就100块钱。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:47",
      "text": "对，我们那个链接放在宣读词里面，大家有兴趣可以点开看一下去去去支持一下众筹T恤这个项目。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:56",
      "text": "对，回到对清朝大魔王求支持的那件T回到facebook phone这个项目的话，当时后来就被取消了。取消的话我总共的话已经工作了将近两年了。在这个时间一年七个月，类似于这种一年八个月。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:11",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:12",
      "text": "大家认识很多很厉害的人，比如说那个map pop keeps，比如说我们从NVIDIA挖过来一个category three的主架构师，他做硬件的take go 3的主架构师也很厉害的。以及一批从google挖过来的，做那个web kit，做chrome，做VA javascript，还有就是那个gel house，就是这种黑客黑科技的人物还挺有意思的。天对，当时也是在这段时间，我和赵海萍认识，主要是打台球，打乒乓球认识。然后当时进去的时候，中国人才十几个，大家互相都认识。哼当时认识了葛爷，就是葛洪。后来做那个news feed和news feed as的在news feed里面怎么加S这也是一个中国人主导，我们现在变成了facebook最猛的一个现金流，将近99% 10多的现金。对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:06",
      "text": "red就原生广告这一块的。是的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:09",
      "text": "对，是这样。后面当然也是因为这个认识张一飞，也就是之前我小时候他的偶像做这个竞赛特别厉害的，也是中国国家队和IOI的选手。对，整个facebook phone基本上就是这样。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:25",
      "text": "当时的时候是特别神秘的一个项目，或者是特别高度机密的。当时有人泄露了这个项目就直接被开除了的话，他泄露给take rch，然后take出去又不会写写的又很不对讲tech。Ch每次做个什么东西的时候，他会跟你讲的这个东西，我靠像造原子弹一样的感觉。当时我们要做一个facebook chat的时候，facebook chat就是一个即时聊天的工具。在facebook上面很很简洁明了的一个chat的时候，我靠他写出来太空上就写出来就是facebook is doing gmail killer，就是G要干死gmail的。我靠，谁根本就不想去干那个e mail.",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:03",
      "text": "各种吹牛逼。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:05",
      "text": "对。然后我们要说一我们加一个高度定制化的social phone的时候，他就直接来要搞iphone killer之类的。然后还得zack那个zack伯格将近两个星期就不停的在给旁边的这些战略合作伙伴们打电话，给他们解释就是我们不是要做一个手机，也不要干你们的，我们是想把手机上面的这个数学功能做得更好这样的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:28",
      "text": "后来facebook home这个项目你有参加吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:32",
      "text": "Facebook home没有，就是最后发布的时候没有参加了。对，那时候我已经在。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:37",
      "text": "measure了OK。因为这个项目其实我还挺巧，因为当时刚好他们发布会那天，我刚好在那个facebook上一个办公地点，那个叫买的上那个楼叫什么来着？Mental park.",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:51",
      "text": "对，mental park那边的中转点，刚好我在那边去找朋友玩。然后他们发布的时候刚好在那边看，他们在那个一个小厅里面发布，而且还挺神秘的，看了一个现场直播什么的。后来看一下那个后来回去看了一下网上的报道，好像也觉得没什么，就觉得这个项目肯定会挂掉的。结果果然。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:13",
      "text": "是的，可惜没有参与到后面这个东西。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:17",
      "text": "对我整个全程就已经在那个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:19",
      "text": "时候已经开始在may messenger开始做了。当时就开始苦心钻研那个voice message，把它加到facebook phone里面去，就是把它加到facebook songe里面去。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:33",
      "text": "那个时候是因为什么？是因为有那个WhatsApp的竞争吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:37",
      "text": "还是怎么样？",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:38",
      "text": "是就是当时我记得face messenger还就不是特别用的人不是特别多，然后也不是特别好用。是的，当时faceless .",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:46",
      "text": "messenger还在整个facebook大的APP里面的后面才慢慢把它就拆出来一个。就是说为什么他非常重视messenger，以及在整个messenger里面，他是怎么看这个市场的。整个messenger对facebook或者对social的这边的冲击，要以及要后来是怎么收购what up的这中间发生这些故事就怎么转型的话，我们留在下期呗。OK这里的话就是还有一个在boot camp以及在facebook phone这个项目在做的时候，还有一个比较有意思的一个，就首先奥巴马来访问了OK.",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:20",
      "text": "那个是在1几年11年的时候对吧？对，是的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:24",
      "text": "我讲一个轻松的话题。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:25",
      "text": "这样应该会好一点。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:27",
      "text": "当时就是奥巴马为了自己连任，所以来整个硅谷逛一圈，相当于是在california这边给他的选票拉好，之前一直是大华尔街帮支持republican，然后奥巴马作为democrats，也就是民主党的话，一直是来自这种IT业的IT精英们的支持，所以他一直跑到硅谷来。当时就有一张非常著名的照片，大家在奥巴马宴请整个google，整个硅谷的各大公司的话是第一次。ZARA berg就是穿一个T穿一个整个西装出现在这个照片里面。同时的话他坐在奥巴马的左边，对，然后奥巴马右边是坐的Steve jobs，在一个圆桌里面吃饭，还有eric smidt，还有那个intel intel的oracle的microsoft之类的对，然后再后来就是他来facebook做一次访问，类似于这样。当时的话是要内部抽签来拿票的，后来就拿到其中一张票了之后我就得到一个奥巴马的票，就说你被录取了之类的。那个票的照片的话我也发在网上了，到时候会附在这个链接里面的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:41",
      "text": "哼我当时就记得很清楚一件事情，就是说快到发布会的早上的时候，我们准备去排队和吃早饭的时候，就发现这个街道，还有我们的整个facebook园区，聚集了很多很多这种新闻采访车。就看电视里面的什么那种fox twenty four还是什么的NBC各种电视台就在那里，然后架那个车，那个车的话就把有卫星的天线怎么输的很高转过在做对对，就在做现场直播。然后外面的时候你经常会被一些记者拦下来，就问你你有没有参加，你要不要参加，你怎么想的？他会讲什么东西之类的。然后rock berg在你们内部有没有讲这次和奥巴马的会晤，大概会讲个什么东西之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:32",
      "text": "但是我们之前就是被P2的团队整个训练过，他帮我们发了一个邮件，就是说不要接受媒体的采访。媒体来问的话，你就说一句，我不知道这个问题，我也不是回答这个问题合适的人。你可以去refer，你也可以defer到PR的人，PR at facebook点com，或者是给他一个电话，就是我们的电话，我们来说这件事情，然后接下来就是拿这个票凭票入场，大家排队没有很多人，而不是不是那种人膳人和人善恶那样。整个的话因为我们face部内部的话，我们就一千多人，就好像参加一个公司年会一样，参加公司的all hands一样，就是全体大会一样，大家排队就慢慢进去。安检的话稍微严格了一点。好像是整个secret service，secret service就相当于过白宫密探，就是总统的护卫队。对，类似于那个大内密谈，中南海中南海保镖。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:33",
      "text": "中南海保镖。对，这个是对对应的概念。",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:36",
      "text": "对，整个secret service就是重重守卫那个会场。哼整个一套的安检系统，你就感觉比那个飞机还要严格的。就把你整个身上要扫一遍，然后看你还搜身，就是摸你的身上那些口袋里面有没有这种尖锐的物品之类的。同时你得把你的工牌要拿好，还有那张票也要拿好。对，所有东西都你受证件都齐全的话，很快，大概一分钟就检查完了，你就进去，进去之后你找个位置坐就好了。然后他整个会场的照片的话我也有。然后我还专门拍了一个secret service的特工的照片。就是我旁边那个特工还比较矮，我一米七，好像都没有我都不知道怎么会让特工这种所谓的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:25",
      "text": "你看这个叫什么掩人耳目，让你觉得他不是特工。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:29",
      "text": "对，就1.7米没有穿个西装，不过还挺精神的，带了一个耳机，就好像是那种坚挺的人。然后就开始等等了好久之后，然后开始开场了。开场进来的时候，奥巴马就一个一个和大家握手。当时都是有现场直播的，就是电视转播那些的对，然后有专门的主持人，就感觉好像是在录制一档电视节目一样。哼然后大家整整个过程是1个小时。扎克伯格问奥巴马问题，然后奥巴马就回答类似。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:59",
      "text": "所以当时你们去了现场，去了多少人？",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:02",
      "text": "我们现场整个公司基本上都在都在是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:05",
      "text": "是的，那还挺好。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:06",
      "text": "对，当时我记得清清楚楚的话，就是非常回答问题的后奥巴马非常的多。就是说回回回答问题的时候，他答案非常的冗长。一个问题经常要从要回答15分钟十分钟才讲完。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:25",
      "text": "他都问了什么？",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:27",
      "text": "就比如说你怎么看这个health care，你怎么看我们现在的油价的，你怎么看这个energy，你怎么看我们的这种硅谷的IT行业最近要怎么发展。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:39",
      "text": "所以它其实是给宣讲他的如果要连任的话，那些施政的一些理念。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:47",
      "text": "所以都是外交层次。其实很无聊的。我觉得在当时听的时候，就是开始照片的时候，看到奥巴马本人以及他们开始开场白的时候，讲一些平常的话，讲一些笑话比较有趣。在后面的话就很枯燥很无聊了。在后面的话比如说问我们现在那个时候油价特别贵，那时候油价140美元一桶。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:10",
      "text": "哼油价。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:11",
      "text": "特别的贵。然后就问他你当时怎么你当时是怎么想，有什么方案能够把油价能够降下来？当时在加州的话，油价已经将近五块钱了。一开始刚到美国的话才两块多钱，类似于这种。对，但是奥巴马就不会说，我有个什么方案，明天就把它降下来，或者降一块钱之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:30",
      "text": "他从最开始这个energy来说，再说政府怎么把这个energy接下来，然后再做clean energy的汽车，在推广各种public policy来减税。如果你买电动车的话，以及我们的政府整个整整个政府部门以及大的公司的话，会先鼓励大家使用清洁能源的汽车，把所有的这些气排放降下去。然后这样的话我们对石油的依赖就会小。然后这样的话，油价就会慢慢因为供求的关系降降。它一个整个整个过程，五年、十年最后才能实现。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:06",
      "text": "我就在那听讲，我觉得好无聊，我觉得我不行，等不了那么久。是的，大概就是这样过程。所以的话奥巴马就是我我能够寄出来就是这些了。然后接下来就是一些照片放这里，大家可以看。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:22",
      "text": "差不多是这些。今天的节目暂时就先到这里，感谢收听IPM podcast网络旗下的IT技术主题娱乐节目内核恐慌。我们号称hard core，但也没有干货，想听的人听，不想听的人就别听。你可以为本节目捐款，捐款地址是kernel panic dot FM slash donate捐款金额随意，只要是八的正整数倍就可以捐款，不会给你带来什么，不捐也不会让你失去什么。我们的口号是no heart feelings。如果你有任何反馈，可以发电子邮件到krona l panic IPNDLI。同时也欢迎您收听IPN旗下其他几档节目。IT公论会知道太乙来了，流星通信high story印象无次元博物志选美陛下关，我们下期再会。",
      "speaker": "发言人1"
    }
  ],
  "lab_info": {
    "summary": "本期《内核恐慌》节目深入探讨了Facebook Phone项目的开发历程及其最终被放弃的复杂原因。该项目旨在利用HTML5技术和社交网络特性，创造独特的智能手机，但因技术难题、性能不足、市场定位不明确等挑战，未能达成预期目标。项目过程中，面临了诸如浏览器优化、硬件依赖等技术挑战，最终因无法克服这些障碍而逐渐缩减直至取消。讨论还涉及了与Facebook高层和知名人士的互动，以及参与重要活动的体验，展现了移动技术发展与市场接受度之间的微妙平衡。",
    "qa_pairs": [
      {
        "question": "上期我们讲到的Facebook Bootcamp后面还有些故事没有讲完，能请你接着讲一下吗？",
        "answer": "当然可以。我回到上期提到的Bootcamp，当时我注意到参加这个培训的人员背景都非常强大，包括斯坦福、MIT、伯克利、CMU等名校毕业生，以及一些顶级编程竞赛的豪门级选手，比如ACM ICPC的顶级Coder，还有来自华沙大学、莫斯科大学等东欧名校的变态级人物，以及像Google Waves、Google Maps前任掌门人等业界知名大牛。",
        "time": "00:01:57"
      },
      {
        "question": "线段树是什么？",
        "answer": "线段树是一种数据结构，它能方便地进行区间判断、分割区间和合并区间等操作，并且可以实时查询某个区间内的特定信息，例如在100到1之间有多少个特定标记。其应用场景类似于火车订票系统中对车票的购买、退票和重新组合。",
        "time": "00:03:38"
      },
      {
        "question": "在Bootcamp期间，你还提到了一些重量级人物，能具体说说他们的情况吗？",
        "answer": "当然。其中有一位叫Kent Beck，他是JUnit的创始人，同时也是极限编程（TDD）的发起人。他的代码开放透明，通过公司的code review系统，所有员工都可以查看并学习他的代码。此外，还有Google Waves的负责人Large Lars，他曾是Google Maps的重要人物，后来被Facebook挖角，他的技术和理念对Google IO大会产生了深远影响。",
        "time": "00:06:01"
      },
      {
        "question": "当时公司内部使用的工具和文化是怎样的？",
        "answer": "公司内部提供了强大的笔记本和手机配置，电话费用全免，包括国际长途。他们使用Chrome或Firefox浏览器，收藏夹中展示了公司的data dashboard，这个 dashboard具有强大的数据查询功能，对所有员工开放查看，体现了公司重视数据采集、展示和透明的文化。数据由专门的增长组和数据组负责维护和开发，以支持数亿用户的运营需求。",
        "time": "00:11:20"
      },
      {
        "question": "在05年或06年的时候，他们做了什么事情？Facebook早期团队在技术方面存在哪些问题？",
        "answer": "他们把公司搬到了California，并且由于用户量增大，不得不频繁添加server来应对需求。当时团队中很多人缺乏高可用性、大规模应用和可扩展分布式系统方面的经验，导致他们写的代码性能不是特别好。",
        "time": "00:13:49"
      },
      {
        "question": "Chris Cox在Facebook的地位如何？",
        "answer": "Chris Cox在Facebook相当于二号或三号人物，仅次于Sheryl Sandberg。他演讲具有很强的号召力，能让人感受到Facebook早期的创业激情和起伏。",
        "time": "00:14:51"
      },
      {
        "question": "Chris Cox提到的一个重要产品功能是什么？",
        "answer": "Chris Cox强调在做产品时要把搜索放在头脑中，他提到的一个突破性功能是photo tag，即用户不仅可以上传照片，还能给照片添加标签，标记出照片中的人物，这一功能让Facebook在短短一年内超越了当时的行业老大Flickr，成为世界上最大的照片分享网站。",
        "time": "00:15:49"
      },
      {
        "question": "photo tag如何激活了Facebook照片的社交功能？",
        "answer": "通过photo tag功能，用户可以轻松找到自己在聚会等场合的照片，还能收到通知指出自己出现在他人照片中。这个功能使得照片的社交属性得到极大激活，用户可以方便地浏览和管理自己的照片集合，同时也加强了用户之间的联系。",
        "time": "00:17:27"
      },
      {
        "question": "Facebook在发展过程中是如何保持创新和用户友好的？",
        "answer": "Facebook始终注重将搜索基因融入产品中，并不断优化用户体验。例如，他们通过一个直观易用的标记人脸功能，让用户能够轻松定位和分享照片中的特定人物，这一功能即使在今天也十分先进且实用。此外，Facebook提倡在产品设计上要找到用户的“啊哈点”，即带给用户惊喜和差异性的功能，并确保交互设计符合用户的直觉，无需用户过多思考或学习。",
        "time": "00:21:21"
      },
      {
        "question": "对他所述的内容，你认为对本科生或大学生有何启示？",
        "answer": "我觉得每个本科生或大学生都应该去看一下，因为他的奋斗历程、出国经历以及对个人事物的看法非常实用且具有借鉴意义。",
        "time": "00:26:51"
      },
      {
        "question": "Facebook phone诞生的背景是什么？",
        "answer": "Facebook phone诞生于2010年，当时移动互联网发展迅速，Google布局Android，Microsoft也有所动作，而Facebook想要做一个差异化产品，即社交属性非常重的手机，并基于网页和HTML5技术来开发。",
        "time": "00:28:33"
      },
      {
        "question": "为什么Facebook决定去做一个基于社交属性的手机，并且命名为“Buffett”？",
        "answer": "Facebook希望在移动领域做出差异化，所以没有做纯粹意义上的智能手机，而是想做一个社交属性突出的产品。Buffett这个名字来源于项目初期的代号\"Social layer\"，后来为了规避与Steve Jobs的公司名称冲突，改为了更可爱的名字“Buffett”，象征着Facebook将社交层融入手机的设计中。",
        "time": "00:28:33"
      },
      {
        "question": "Facebook年会有什么特别之处？",
        "answer": "Facebook的年会与国内不同，通常在12月举行，由扎克伯格亲自在简陋的环境中宣布公司战略、当年目标完成情况以及来年规划。例如，在我加入Facebook初期的年会上，扎克伯格详细阐述了公司在移动领域的发力，特别是Facebook phone项目的重要性，该项目内部代号为“Buffett”。",
        "time": "00:30:14"
      },
      {
        "question": "对于在外企工作的华人，你有什么观察和感受？",
        "answer": "我发现一些在外企工作的华人倾向于在中文环境中使用英文名，这种现象我觉得很可悲。相较于阿里巴巴员工使用具有中国文化象征意义的花名，这些外企华人似乎更愿意融入英文环境，这其实不利于他们在中国职场的融入和发展。",
        "time": "00:33:24"
      },
      {
        "question": "在硬件方面，你们是否进行了高度化的定制？",
        "answer": "没有，我们并没有做高度化的硬件定制，因为我们本身并没有硬件团队。",
        "time": "00:40:32"
      },
      {
        "question": "那么在软件和硬件合作方面是怎么样的模式？",
        "answer": "我们主要是和厂商合作，类似制作360手机的方式，没有深度自定义硬件。",
        "time": "00:40:51"
      },
      {
        "question": "能介绍一下Facebook 4项目中关于软件方面的经历吗？",
        "answer": "当时团队老大Matt Pop Keyboard从Google被挖来负责该项目，他推动了采用HTML5和其他web技术进行上层应用开发。而Brad Taylor是项目最终的主导者，他坚决支持基于网页的应用，并将Matt Pop Keyboard招入团队。",
        "time": "00:41:44"
      },
      {
        "question": "刚进入团队时，底层系统和中间层的应用选型是否已经确定？",
        "answer": "没有完全确定，在制作过程中逐渐完善。",
        "time": "00:41:14"
      },
      {
        "question": "Facebook Phone项目的硬件部分是如何规划的？",
        "answer": "决定由我们自己来做硬件中间的OS层以及系统自带APP和生态系统SDK，整体变得较为复杂且重量级。底层与HTC合作，修改安卓Gingerbread版本，并移除了大部分原生APP。",
        "time": "00:42:58"
      },
      {
        "question": "当时针对web kit移植和多进程模型有什么特别的做法吗？",
        "answer": "我们把web kit移植到安卓浏览器内核中，并为解决web kit单线程问题，我们移植了多进程模型的V8 JavaScript引擎，以保证浏览器稳定性。由于移动平台限制，最终实现了固定的三进程系统，通过全局变量前缀避免进程间冲突，从而保证各个进程下的应用稳定运行。",
        "time": "00:46:34"
      },
      {
        "question": "性能问题是否随着时间得到改善？",
        "answer": "性能问题确实随着时间逐渐得到了缓解，硬件技术进步和优化措施使得现代设备性能足以支持类似的设计。但在当时，由于浏览器性能限制以及多层架构带来的性能损耗，整体性能并未达到理想状态。",
        "time": "00:50:20"
      },
      {
        "question": "Java script engine在执行某些操作时会出现什么问题？",
        "answer": "Java script engine是单进程单线程的，所以在进行如数据获取（例如fish data）或垃圾收集等操作时，会占用主线程，导致用户输入无响应，体验极差。",
        "time": "00:53:59"
      },
      {
        "question": "Web worker的作用是什么？",
        "answer": "Web worker的作用是让JavaScript支持多线程，可以开启一个新的线程来专门处理worker的操作，从而解决主线程被阻塞的问题。",
        "time": "00:54:41"
      },
      {
        "question": "UI和dom操作是如何处理的？",
        "answer": "尽管在不同进程中执行，但对DOM的操作仍需通过回调函数从worker线程中返回到主线程执行，因为某些操作对UI有直接影响，例如DOM修改。",
        "time": "00:55:12"
      },
      {
        "question": "Facebook在移动应用上的策略转变是怎么发生的？",
        "answer": "由于HDMI5性能问题、效率低下以及用户数据量消耗大等问题，Facebook决定放弃HDMI5，并转向原生代码开发，同时整合了Google Plus的出现和其他内部项目的影响，导致了一系列战略调整。",
        "time": "00:58:30"
      },
      {
        "question": "在Facebook phone项目中，你具体负责哪部分工作？",
        "answer": "我在项目中负责构建了一个基于JavaScript的数据层，包括使用HTM5中的关系型数据库（类似circle light），并开发了一套ORM框架、自动获取数据框架以及网络请求机制，服务于整个公司的第一方APP。",
        "time": "01:01:52"
      },
      {
        "question": "这个数据层框架后来如何了？",
        "answer": "这个数据层框架最终没有被持续使用，但在之后的时间里，我转向了安卓底层的一些开发工作，如自动更新和C++相关的部分。",
        "time": "01:03:54"
      },
      {
        "question": "Facebook phone这个项目是否高度机密？",
        "answer": "是的，当时Facebook phone项目非常神秘，甚至有人泄露该项目信息后被开除。当时该项目的一些目标，比如要做一个可以干掉Gmail的即时聊天工具，以及高度定制化的社交手机（如iPhone杀手），听起来都很宏大且具有挑战性。",
        "time": "01:08:25"
      },
      {
        "question": "你是否参与了Facebook home项目？",
        "answer": "我没有参与Facebook home项目的最终发布，当时我已经在Measure OK工作。不过，在项目早期阶段，我确实参与了并努力将WhatsApp的功能整合进Facebook phone中。",
        "time": "01:09:32"
      },
      {
        "question": "Facebook决定重视Messenger并收购WhatsApp的原因是什么？",
        "answer": "当时Face Messenger的使用人数不多且功能并不完善，与 WhatsApp的竞争很激烈。Facebook高层意识到Messenger对于其社交平台的重要性，并且为了强化Messenger的地位，最终决定收购WhatsApp。",
        "time": "01:10:38"
      },
      {
        "question": "奥巴马访问Facebook时的情况如何？",
        "answer": "奥巴马在2011年访问Facebook，目的是拉拢科技行业支持他的连任。那次访问时，Facebook园区聚集了许多媒体，场面十分热闹。尽管我有幸参加，但根据公司规定，我们不能接受媒体采访。在安检严格的情况下，我作为员工排队入场，并有幸与奥巴马握手。他在现场发表了一小时的演讲，内容主要是关于政策理念和施政方向。",
        "time": "01:13:32"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "内核恐慌：秦超与Facebook的故事（下）",
        "summary": "本期节目继续深入探讨秦超在卡内基梅隆大学的学习经历以及加入Facebook的过程。节目主旨在分享技术领域的个人成长故事，以及在技术公司工作的心得体会。主讲人将讲述Facebook实习营后续的故事，力求让听众的时间花在有价值的内容上。同时，节目鼓励听众通过kernow panic dot FM slash donate进行捐款，支持节目的持续制作。"
      },
      {
        "time": "00:01:14",
        "title": "Boot camp体验：与顶尖人才共事的感受",
        "summary": "在Boot camp中，参与者被周围的强大学背景和竞赛成就所震撼，其中包括来自斯坦福、MIT等名校的毕业生，以及在编程竞赛中取得优异成绩的人士。此外，还提到了一些在特定领域有突出贡献的人士，如在数据结构方面有研究成果的人。与这些顶尖人才共事，既让人感到兴奋也带来压力。"
      },
      {
        "time": "00:05:16",
        "title": "与技术大牛共事的经历分享",
        "summary": "在某公司实习期间，遇到了多位技术领域的知名人物，包括曾负责Google Maps和Google Wave项目的负责人以及JUnit的创始人。这段经历让感到既挑战又压力山大，同时也认识到公司能吸引并留住这些顶尖人才是其最大的财富。此外，还与几位中国同事成为了好朋友，尽管后来他们已回国发展，但这段共事的经历对个人职业发展产生了积极影响。"
      },
      {
        "time": "00:09:14",
        "title": "公司数据透明及处理系统介绍",
        "summary": "第一天入职时，公司提供了笔记本和手机，并且手机费用全报销，支持国际通话。电脑预装了Firefox浏览器，首页收藏夹链接到公司数据仪表盘，该仪表盘对所有员工开放，显示包括日活跃、月活跃等在内的各种数据，并具有强大的查询功能。这体现了公司对工具的重视、对数据的重视和透明度。数据仪表盘由增长团队和数据团队维护开发，以支持公司六亿多用户的海量数据处理，采取了对员工全数据上传，而对用户则是随机抽样1%的数据上传策略。此外，还涉及到了大数据处理技术的应用，如HDFS和大数据管道，以及公司开源的大数据处理工具。"
      },
      {
        "time": "00:12:32",
        "title": "Facebook早期发展及关键功能突破",
        "summary": "对话内容涉及了Facebook从创立初期到成长为全球最大的社交平台的历程。最初在哈佛校园起步，随后扩张到不同学校，最终向非学生群体推广。特别强调了Chris Cox的演讲，讲述Facebook如何通过不断的创新和技术进步，尤其是在照片分享功能上的突破，实现了快速增长。特别提到了将照片标签功能（photo tag）作为关键的创新点，使得Facebook照片分享在短时间内超越了当时的市场领先者Flicker，成为世界上最大的照片分享网站。此外，还提到了在公司快速发展过程中，对高可用性和大规模应用的挑战。"
      },
      {
        "time": "00:17:04",
        "title": "社交媒体中照片共享与人脸识别功能的进化",
        "summary": "照片共享和人脸识别在社交媒体中的应用经历了显著的进化。最初，用户在派对等聚会上拍摄的照片难以共享，因为照片通常只保存在个人相册中，难以互相访问。Facebook通过引入标签功能解决了这一问题，不仅允许用户标记照片中的人物，还会通知被标记的人，极大地增强了照片的社交功能。此外，Facebook还逐步改进了照片的分享方式，从最初的群发邮件请求查看，到直接在照片上进行标记，再到后来利用人脸识别技术自动标记人物，这一过程反映了用户交互设计的深入理解和技术创新的应用。尽管这些功能后来因隐私问题进行了调整，但它们对增强社交媒体用户体验产生了重要影响。在国内，类似的功能也被人人网等平台采纳，并加以改进，如添加更多标签选项以丰富照片分享的内涵。"
      },
      {
        "time": "00:21:21",
        "title": "产品设计中的Magic Point和用户交互原则",
        "summary": "讨论了在产品设计中寻找'Magic Point'（让用户感到惊喜的点）和确保交互设计直观易用的重要性。强调产品应满足用户的核心需求，让用户无需过多思考即可使用，同时提及了对某些公司产品设计理念的观察，指出了国内外公司在产品设计和演讲表达上的差异。"
      },
      {
        "time": "00:24:18",
        "title": "文化差异对工程师创新的影响",
        "summary": "讨论了在不同文化背景下，对工程师的重视程度以及赋予的工作自由度如何影响创新。在一个自由度高、权限控制少的环境中，工程师能更快地参与到实际项目中，如修复重要网站的bug，这种做法减少了繁琐的审批流程，从而降低了工作的摩擦力，加速了工程进度。相比之下，某些文化或组织可能因为过于保守和权限控制严格而束缚了工程师的创造力，增加了维护和工作的成本，不利于快速迭代和创新。此外，分享了个人加入Facebook并成为其一员的经历，强调了开放和鼓励创新的工作文化对个人成长的重要性。"
      },
      {
        "time": "00:27:04",
        "title": "Facebook Phone项目背景与挑战",
        "summary": "2010年，随着移动互联网机会的显现和SDK及生态系统的繁荣，各大科技公司如Google、Microsoft纷纷布局。Facebook亦不例外，意图开发一套具有社交特性的操作系统，不单纯为了打电话而设计，而是注重社交属性，并计划基于网页技术，尤其是HTML5来实现。项目启动初期资源投入巨大，但由于技术难度和市场战略调整等原因，最终未能成功，经历了多次转型。项目初期的保密性极高，甚至与Facebook主办公区域隔离，以避免影响与APP开发者的关系，特别是考虑到Facebook创始人与Steve Jobs的私交。"
      },
      {
        "time": "00:29:26",
        "title": "Facebook工作经历分享",
        "summary": "分享者在Facebook不到两个月的时间内经历了公司年会、公司战略介绍以及公司文化等方面，特别是扎克伯格在年会上的讲话，对公司发展方向、特别是移动端的重视以及进军中国市场的决心进行了强调。此外，还讨论了公司内部项目代号的文化和对外企工作中使用英文名的现象。"
      },
      {
        "time": "00:36:17",
        "title": "扎克伯格学习中文与文化适应挑战",
        "summary": "扎克伯格决定每两周学习一次中文，并邀请所有中国同事授课，以加深对中国的了解。这一决定反映了他对中国市场的重视，并试图通过学习中文来建立更坚实的基础。然而，尽管他在2015年能够用中文在清华大学发表演讲，他的中文水平导致他在使用中文时表现得像一个孩子，与使用英文时成熟的形象形成鲜明对比。这一现象揭示了语言障碍如何影响人们在不同文化背景下的交流和合作，特别是在试图融入一个不同语言环境时，人们可能因语言表达能力的不同而被边缘化，难以被视为平等的战略合作伙伴。此外，对于在硅谷努力的华人来说，当他们使用中文时，可能会在外国人眼中显得不成熟，这可能影响他们在商业和政治层面的互动，从而造成沟通和理解上的障碍。"
      },
      {
        "time": "00:38:50",
        "title": "Facebook尝试进入手机市场及其策略",
        "summary": "在智能手机领域，Facebook决定不直接与苹果和安卓竞争，而是采取一种不同寻常的策略，专注于开发中间层级的产品。他们选择与硬件制造商HTC合作，设计并生产一款手机，旨在满足特定需求而不过度定制硬件，如选用NVIDIA的Tegra 3芯片。此举显示了Facebook试图通过与现有硬件厂商合作，而非全面进入硬件设计领域，来探索进入手机市场的方法。"
      },
      {
        "time": "00:40:57",
        "title": "Facebook Phone项目发展历程",
        "summary": "项目初期不到十人，后扩展至近200人。选择技术栈包括HTM L5和Web技术进行应用开发。项目由Google挖来的负责Chrome OS的Matt Pop键盘领导，采取了Facebook 4的开发策略。Brad Taylor是项目的最终主导者，他之前是Friend Feed的CEO/CTO，曾在Facebook担任CTO，并是Tornado的作者。"
      },
      {
        "time": "00:42:39",
        "title": "推动HTML5技术与浏览器优化的实践",
        "summary": "对话内容围绕一个项目展开，该项目基于HTML5技术，旨在创建一个新型浏览器和操作系统。项目负责人坚定地支持HTML5，从Google引进了技术人才，致力于硬件、操作系统、原生应用和SDK的全方位自研。该项目从安卓系统的姜饼版本开始进行深度定制，移除不必要的原生应用，并对浏览器内核进行重大调整，引入Webkit并针对多进程支持进行优化。为了提升浏览器性能，项目团队还特别重视JavaScript引擎的优化，引进了V8引擎的开发者，从而大大提升了浏览器的执行效率。此外，通过创新的三进程架构，实现了不同应用场景下的稳定性和效率的平衡。"
      },
      {
        "time": "00:48:56",
        "title": "探讨Web技术在移动操作系统中的应用与挑战",
        "summary": "对话中讨论了在移动操作系统中引入Web技术（如Web Kit引擎）的重要性，强调了底层稳定性的关键性。通过比较，指出了这种技术路线与Chrome OS的相似之处，即通过一个修改过的Web Kit浏览器引擎来运行所有的应用，从而摒弃了原生应用，实现了一种基于HTML5的大一统Web应用模型。同时，提到了由于时间和开发资源的限制，所有的第一方应用被迫在同一个Web进程内运行，而第三方应用和网页则分别在其他Web进程中运行，这种做法虽然简单直接但并未能显著提升性能。"
      },
      {
        "time": "00:50:31",
        "title": "回顾2010-2011年间的前端技术发展",
        "summary": "在2010年到2011年期间，硬件条件相对有限，此时iPhone 4已推出，带来了Retina屏幕技术。Backbone框架开始受到关注，而硅谷的一些团队开始开发类似于Backbone的框架，如bot GS，但并未开源。这一时期，前端技术主要用于基于浏览器的Web App开发，强调MVC或类似结构。JavaScript在当时被认为是创建移动应用的有效方式，通过HTTP请求与后端通信，并且已经开始使用GraphQL技术，尽管它当时仅对认证的开发者开放。面临的主要挑战包括浏览器性能不佳、性能损失以及JavaScript引擎的单线程问题，这些问题直接影响了用户体验。"
      },
      {
        "time": "00:54:38",
        "title": "Web技术发展及Facebook项目调整",
        "summary": "对话内容涉及Web Worker技术的应用，说明了JavaScript通过Web Worker支持多线程的能力，但同时指出了在处理UI操作时的限制。进一步讨论了React的引入及其对DOM操作的改进，以及这种方式与操作系统处理UI更新的相似性。还讨论了早期Facebook项目在效率、硬件使用、数据消耗方面遇到的问题，最终导致项目方向的调整，放弃了HTML5，转向了基于Android的Facebook Home项目。"
      },
      {
        "time": "00:58:05",
        "title": "Facebook Home的发展历程及其转变",
        "summary": "Facebook Home的项目起初计划开发一个完整的操作系统（OS），但在遇到技术挑战后，项目目标逐步缩小，最终转变为一个应用集合。在项目进程中，团队曾考虑过使用原生代码（如Java）替代HTML5来解决性能问题，但最终还是决定放弃这个方向，转向开发原生应用。这一转变的原因包括技术难题、资源分配和市场竞争等因素。特别是，Google Plus的推出对Facebook造成了压力，迫使他们集中精力应对竞争，放弃了一些非核心项目。项目的主要负责人Brad Taylor也因此离开了公司，创立了一个新的应用。"
      },
      {
        "time": "01:01:48",
        "title": "从Facebook Phone到安卓底层开发的历程",
        "summary": "讲述者分享了他在Facebook Phone项目中负责使用JavaScript开发数据层、HTML5的内置数据库以及类似ORM框架的工作。项目后来被取消，他转而深入安卓底层开发，涉及自动更新和C++相关工作。此外，他还提到了与著名黑客George Hotz的合作经历，以及后者因破解iPhone和PlayStation而引起的故事。最后，他提到了自己的众筹项目，目的是为了支持他的个人项目。"
      },
      {
        "time": "01:07:10",
        "title": "Facebook项目和人才故事",
        "summary": "讲述了在Facebook工作的经历，包括与多位杰出人才的相识，参与重要项目如Facebook phone的开发，以及对Messenger项目的投入。期间，还提到了与奥巴马的会面，显示了Facebook作为一个科技巨头的影响力和其内部的工作文化。"
      },
      {
        "time": "01:11:23",
        "title": "奥巴马硅谷之行与政策宣讲",
        "summary": "奥巴马为了连任竞选访问硅谷，以争取IT行业精英的支持。期间，他宴请了包括Google在内的硅谷各大公司负责人，与Facebook员工进行了交流，并在Facebook总部进行了一场政策宣讲会，重点讨论了包括医疗保健、油价、清洁能源汽车推广等议题，展示了其连任的施政理念。整个活动受到了媒体的广泛关注，安保措施严格。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [],
              "content": "节目定位：hard core，但没有干货，面向特定听众群"
            },
            {
              "children": [],
              "content": "捐款信息：随意捐款，金额为18的正整数倍，不捐款亦无影响"
            },
            {
              "children": [],
              "content": "节目网址：kernel panic dot FM"
            },
            {
              "children": [],
              "content": "联系方式：krona l panic IPNDLI"
            }
          ],
          "content": "节目概述"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "项目背景：2010年移动互联网兴起，Facebook欲进军移动领域"
                },
                {
                  "children": [],
                  "content": "项目目标：开发一款社交功能强大的手机"
                },
                {
                  "children": [],
                  "content": "技术挑战：性能问题、硬件与软件的兼容性"
                },
                {
                  "children": [],
                  "content": "项目团队：初期十几人，最终近200人"
                },
                {
                  "children": [],
                  "content": "技术选择：HTM5技术，遇到性能瓶颈，最终转向原生应用开发"
                },
                {
                  "children": [],
                  "content": "项目结局：项目被削减，最终变为Facebook Home项目"
                }
              ],
              "content": "Facebook Phone项目"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "HTML5的挑战：性能问题、浏览器兼容性"
                },
                {
                  "children": [],
                  "content": "数据层框架开发：使用HTML5数据库开发数据层框架"
                },
                {
                  "children": [],
                  "content": "JavaScript性能：单线程问题、数据处理效率"
                },
                {
                  "children": [],
                  "content": "硅谷文化体验：开放、自由的工作氛围，重视创新与挑战"
                }
              ],
              "content": "技术与文化"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "奥巴马访问Facebook：连任宣传，与硅谷公司的交流"
                },
                {
                  "children": [],
                  "content": "硅谷的政治倾向：主要支持民主党，奥巴马与科技界领袖的互动"
                }
              ],
              "content": "社会与政治"
            }
          ],
          "content": "主要内容"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "George Hotz：黑客，因破解iPhone和PlayStation而闻名，后来致力于无人驾驶汽车"
                }
              ],
              "content": "赵海萍：通过打台球、乒乓球认识，分享在Facebook的工作经历"
            }
          ],
          "content": "人物故事"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "开源项目与社区：开源项目在硅谷的技术文化中扮演的角色"
                },
                {
                  "children": [],
                  "content": "数据同步与处理：开发数据层框架，实现数据的高效同步和处理"
                }
              ],
              "content": "Web技术的局限性：在移动平台上，HTML5的性能和稳定性问题"
            }
          ],
          "content": "技术讨论"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "硅谷的工作文化：开放、自由、重视创新，但也面临各种挑战"
                },
                {
                  "children": [],
                  "content": "技术挑战与创新：探讨了HTML5在移动设备上的限制和挑战，强调了持续的技术创新和实验的重要性"
                }
              ],
              "content": "Facebook Phone项目：代表了公司对移动互联网的探索，尽管最终失败，但带来了技术和文化上的深刻教训"
            }
          ],
          "content": "总结"
        }
      ],
      "content": "内核恐慌节目摘要"
    }
  }
}