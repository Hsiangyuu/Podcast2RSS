{
  "pid": "5e284e0c418a84a0462693e4",
  "eid": "5e84c3ac418a84a0462df969",
  "title": "23. 程序员之路",
  "task_id": "wg57n3a56mv5qkr3",
  "transcription": [
    {
      "time": "00:00:00",
      "text": "欢迎收听IPM podcast网络旗下的IT技术主题娱乐节目中老年程序员夜话。我们号称哈佛，但也没有干货，想听的人听，不想听的人就别听。本节目的网址是IPN dot LI slash cornel panic。我们推荐大家使用podcast客户端订阅节目，详情请访问IPN dot LI flash FAQ。欢迎你为本节目捐款，捐款地址是IPN到LI slash kernel panic slash donate，捐款金额随意，只要是能被八整除的正整数就可以捐款不会给你带来什么，不捐也不会让你失去什么。我们的口号是no hot feelings。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:41",
      "text": "你看你用这种朗诵的技巧来念，还是念杂。",
      "speaker": "发言人2"
    },
    {
      "time": "00:00:46",
      "text": "不容易好吧。是对我是前两天我们发现了一个知乎上的一个问题，叫如何叫什么来着？标题我忘了，叫大概意思如何训练一个播音员的嗓音。我觉得我们有必要给我们各位主播普及一下。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:02",
      "text": "怎么说呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:04",
      "text": "他他给了有有好多人回答下面各种那种教程，我们我觉得应该我们去看一下，特别像你你我这种声线都比较容易伤的人，应该要去经过一个基础培训。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:16",
      "text": "对，应该学会以丹田之气，金嗓子喉宝。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:23",
      "text": "我们的口号是no hot elan.",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:25",
      "text": "我们口号是没有蛀牙。我觉得我们以后可以每一期换一个口号，对对对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:34",
      "text": "要学那个。我以前很喜欢看一个动画片，叫feature rama，中文叫什么来着？中文叫好像飞出一个未来，飞出一个未来。他每次对你知道那些很多那些美剧很多，它不是有个开场动画，开场画面，你不叫动画？有些是那些实体的，它会有一个一样的，也就是看video但是他现在做的比较好的，因为他会有每次你看的其实看的大体上是一样，但是它的某一个小细节是不一样的。比如说那个future rum，就是它每次会有一个标语，就是某一个地方会出现一个标语，然后每次标语都不一样，然后非常搞笑的标语。哼我也搞个这个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:10",
      "text": "对，我们我以后每次每一期的那个口号都不一样。比如说什么足够强大的科技与魔法无异。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:21",
      "text": "是要用那个starcraft里面那个神族那些人的声音来念吗？对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:26",
      "text": "power over well. 这entire alone.",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:38",
      "text": "什么legacy of the void出了那个Better的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:41",
      "text": "你买了吗？我已经买了。对我还。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:43",
      "text": "我还没来得及买，因为这两天比较忙，我想等你说现在买还是等它降价再买。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:52",
      "text": "我觉得我也不知道，我觉得我买它只是作为一个星际玩家的自我修，所以忠诚。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:01",
      "text": "了老友记。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:03",
      "text": "刷忠诚度。但是前三个任务关我都已经没有办法在猪头的难度下打过去了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:08",
      "text": "所以为什么是太难了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:10",
      "text": "brutal太难了，就brutal尤其是第三关，第三关sport alert.",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:18",
      "text": "不要说我还没有玩好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:19",
      "text": "反正就是最后。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:21",
      "text": "淘宝下期再见太难了。对，因为我我你看那个什么星际二的三部曲第一个叫什么heart of swan，我是就买来打玩的。然后第二个是叫什么来的？",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:35",
      "text": "第一个叫win of liberty。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:36",
      "text": "对我第一个win of liberty是我是买来按正是28节打完的。然后第二个那个VIP ty我就是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:43",
      "text": "纯粹为了看第二个是第二个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:45",
      "text": "叫heart，说错不好意思，现在晚上有点头头昏。那个heart of song我就买来那个选那个easy模式打战役，然后把剧情过完就没怎么打，那个多用户对不对？联机打了。对，然后我估计得买那个legal的void，应该情况也差不多，买来打完剧情，然后就扔那里了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:07",
      "text": "是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:07",
      "text": "反正剧情主要是在看电影。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:10",
      "text": "是是是，第一步是看的男朋友去救女朋友，第二步是看女朋友回来救男朋友，第三部不知道。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:20",
      "text": "所以其实那个战役的你还没打完是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:23",
      "text": "战役不贝塔里面只给了三个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:26",
      "text": "没有开完。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:27",
      "text": "的序幕。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:28",
      "text": "对，那我不能等，我必须等到一一他出了正式版，我要一气呵成打完，他才正式。好像11月出来了，十月是吧？那我可以再等等，不着急。OK，扯了半天蛋，我们今天开始正题，不是正题，现在正本期的听众反馈。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:50",
      "text": "首先刚才说的这个no heart feeling，有一位听众说你们这个他说他英文不好。你们知道no heart feeling什么意思？是不走心？No heart feeling没有心里的感觉，所以是不走心的意思。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:05",
      "text": "对，我们我们都看过no heart feeling，没有那个声调说no heart feeling。",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:12",
      "text": "对，这句口号是源自于我们之前一直在说游戏portal里面的那个torrent。就是一个炮塔，你把它你把他打死了之后，炮塔会说no hot feelings.",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:27",
      "text": "也是意思是那玩意儿要叫炮塔，你不觉得很奇怪吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:31",
      "text": "机枪塔。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:32",
      "text": "对不准确来说它是一个什么？你想象一下看过那个电影的窝里吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:38",
      "text": "你说他像if.",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:40",
      "text": "那eve压压扁if是个是个桶，你把它压成一个扁扁的，然后把那个屏幕换成一个红色的。那个叫什么什么两千的那个灯，买的那个机器人叫号黑，还有9000对的那个红灯。然后你想象它两边可以展开，然后出现了一个机关枪哒哒哒一直打你。对，这么一个东西叫炮塔，其实太奇怪了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:05",
      "text": "对这玩意儿会用一个很萌的声音说，know how feelings, 然后这就是我们的口号，不过只到这一期为止了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:15",
      "text": "我们进入本期的第一条听众反馈，这个是一位叫做鲁杺，是鲁迅还是鲁？我也不是鲁昕。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:27",
      "text": "总之我们上一期这个开发版节目播出之后，获得了恶评如潮。虽然我们在对虽然我们在节目的末尾一再声明说，这只是两个学computer science的人在这边纸上谈兵隔靴搔痒的说这个开发板这一块，但还是招来了很多反馈。就是很多人很多朋友们很不客气的指出了我们的各种错误。在这里我们也一一虚心接受，并且改不改就是好像没什么可改的，因为将来可能还是不会去设计这一块。不过本从我们从很多的听众来信里面挑了几封比较有代表性的反馈意见，在这里跟大家。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:15",
      "text": "念一下OK，我来念第一则好啊，鲁新说或者鲁新说没听完22期内核恐慌，迫不及待写下这封邮件。这个也是写的非常长。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:27",
      "text": "对他写了三封邮件，他一边听他他这一封邮件是听到一半的时候写的。然后再听了一会儿又写了第二封，最后整个听完写到了第三封。有有这样的热心听众，我们还有什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:39",
      "text": "就是一个要求反馈的三部曲。这是我们我们来念的是这个字，when liberty.",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:44",
      "text": "对，没错，现在是way so flighty。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:47",
      "text": "Real本期节目里，对，are doing, 这怎么念？到底are doing还是are doing呢？Are do you know OK重音？Do know重重音在一上的，are do you know？At芯片的误解，尤其是在性能上的纠结，估计会成为很多听众，尤其是WE领域和智能家居产品开发人士的攻击焦点。个人完全理解real从CS角度看阿do eo的态度，但这里存在太大误会，需要逐个纠正，大家有耐心，是逐个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:17",
      "text": "首先单片机microcontroller一直都不是以性能为主要考虑的，低功耗以及开发环境才是最需要考虑的标准。单面积最大的应用市场为嵌入式产品，比较广为熟知的就是今天的智能家居产品等。虽然我也认为现在这些产品都只是鸡肋，此类产品不需要涉及算法，一款单纯的智能产品只需要做两件事儿，采集数据，对特定数据做出反应。所谓今天的智能设备，其实背后都有强大的云端支持，云端服务器才是用来分析数据、大数据分析的一种并用算法进行优化的地方。表现案例为nest智能温控器。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:58",
      "text": "I do know最大的特色其实是开源硬件。开源意味着任何人都可以根据公开的图纸自行生产或者修改设计，加入自己的元素。于是，中国强大的山寨能力，让阿杜伊诺开发版只用不到10美元就能买到。美国实体店有micro center are do you know？Mega开发板只需要9.99美元，suno更是只需要7.99，而常用在实际设计中的mini则最低只需要3.99美元。中国人最厉害的不是山寨杜伊诺，而是去年拿出了一个ESP8266的带wifi模块的SUC。Ebay上价格只要2.5美元，带wifi，这几乎直接颠覆了对脑的市场。阿杜ino今天更主要是成为了一个生态，以至于intel在进入物联网市场的时候，都要打着兼容阿杜ino的旗号来走江湖，参加Edison开发板。",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:55",
      "text": "阿里云是一个很广的话题，具体说来还有很多细节，尤其是传感器七部分成为了一个生态，其实现能实现的效果是绝对强大的这不是单纯看八位和16 mega heart这些指标能体会到rusper pie有点不同，它的定位更像是迷你PC而非控制而而非物联网设备控制芯片。因为用的是ARM的标准芯片，所以可以运行完整的linux但功耗对于RDE完全不是一个等级的了。从我个人的实际用经验看，rusper pie更像一个高级玩具，没实际作用，do you know? 则实实在在能做很多东西。需要涉及算法的部分，我个人直接用家庭服务器处理了。我在家运行了一个hyper v server，上面跑了几个ubon to server和windows server。我算是比较专业的geek用户。",
      "speaker": "发言人1"
    },
    {
      "time": "00:10:50",
      "text": "好厉害。对，我们可以直接就在这边，请讨论一下他说的。他在第一部分这个wings of liberty部分里面说的那我觉得可能最重要的一点就是他提到了说对运动其实是最重要的特点是开源。然后谁都可以山寨，谁都可以去恶性的以这种廉价倾销的策略来来造出符合标准的板子。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:19",
      "text": "对，因为它就是一个commodity.",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:22",
      "text": "对，所以我们比较他们的官方售价其实没有什么太多的意义。然后如果你说你买一个2.5美元的一个小板子，就可以做出一些，就可以让你的特定的家电变得智能。我觉得这个是其实是非常物超所值。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:38",
      "text": "对，而且大家刚刚提到有一点，其实我们上期也一直忽略了，就是说这个智能家电或者是智能硬件。其实真的真正的智能其实是在云端的这一点上。其实我们其实是完全没有想到这个事儿，就直接在说这个端的出计算能力太弱了。其实想来这个说法也其实蛮对的，因为你这样只有把端做的足够简单，足够蠢才可以用比较低廉的价格，然后实现快速的供货。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:09",
      "text": "对我觉得其实有点像就像仿生学一样，就你在末端的神经末梢，其实只需要做那个action reaction的这个逻辑就可以了。然后有什么复杂的数据处理，就是传送的脑部处理。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:23",
      "text": "这个比喻很好，在这个比喻里面就是FENO是属于那些神经末梢的东西。然后真正的这个大脑其实在云端的对所以从这个角度来讲，阿杜ino本身的这个低就是性能低反而成为它的一个优势。第一个性能低，它的这个的成本低，可以比较快速的量产。然后它也是一个开源的这么一个硬件，然后它可以因为就像那个respire pie，它的那个SUC是不开源的，它是broken自己的一个poetry system。对，然后租赁的这个低性能的一个自然就低功耗。然后之前有人说你用一个比如说五号电池去做一个大堆，可能跑好几个月，你跑一个rusper派估计就跑几个小时就没了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:08",
      "text": "就跑不起来了。可能super派可能至少要有一个9伏的那种方形的电池才行。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:14",
      "text": "不用他用那个USB驱动的无服务就可以了。那ok对他那个应该是，但是它的耗电应该还是有个从100毫还是一瓦一两。不对，上次看到是两三瓦，应该是整个满负载的时候，应该是有个两三瓦。但是那个阿do ino的功耗是毫瓦级别的，就是叫做的毫瓦，什么1‰瓦。对，所以这个还是有数量级的差异的，上次我们没有考虑这个耗电的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:43",
      "text": "OKOK我来我来听我来念第二段。OKOK, 听话员二两位主持人也一再表示resort play的尴尬定位做威批恩，做nas。但是大家都不信任real之前提到的智能物流，今天随便都能支持威批恩功能，甚至自带对我的我的那个路由好像就是四代nas。再不然电旧电脑上装上nas for free或者free net系统，也就成为专业的next，比respire pii强太多了也稳定。关键在于网卡是giga BPS级别的，还可以自我添加支持IC timing的功能。",
      "speaker": "发言人2"
    },
    {
      "time": "00:14:23",
      "text": "Real老是从电脑角度来说，阿东运动性能低下，没有什么质量可言。但是real忘记了，现在是云时代，终端不需要做那么多计算。为什么阿里运动设备要自己进行复杂的运算，做复杂的处理呢？这里给出一个很简单的例子，两个基于阿雷诺制作的设备，一个是吴涛提到的可以开关窗的装置A一个是厨房烟雾煤气探测装置B当B探测到煤气泄漏，发出无线电话或者有线通知，A出现的煤气泄漏情况需要开窗透气，于是A做出反应，自动开窗透气，并点击警报。整个过程正是未来家居的一种可能，一种可一种表现，不需要很复杂，更涉及不到什么高深算法。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:07",
      "text": "为什么要用上一个半瓦的ARM芯片呢？装上两节AA电池riser怕用不到两天，都遇到。如果优化好了几个星期是没有问题的这就是阿里运动能做，而rest berry pie做不到的地方。如果纯粹从性能来比较，我用PC就好了。现在mini ITX也很小，也有GPL输入输出，那我买respite来做什么呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:30",
      "text": "Again, no offence说这些评论主要是想表达对于贵节目的支持，而且你们想请嘉宾，我觉得我可以代表maker和做硬件的留学生们说点什么，不能让程序员们太垄断了，不是江河日下。如今学WE的都转CS了，WE找不到工作不算，工资还特低。对我觉得这个草图的也是就现在我们WE的同学，其实学的东西要比cons很多。对，但是至少在美的目前，conscience还是要比WE好找工作的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:08",
      "text": "不过但是我觉得大家学W的同学不用着急，马上今后的五年就是你们大放异彩的时候了。因为就实话来讲，传统的像CS这些能做的事情，现在基本上也是做的挺鸿海的。现在接下来的什么什么创客，maker movement，其实全是要靠你们大博弈的同学来做。这个时候你们可以好狠狠的鄙视一下CS的同学，他完全不懂。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:34",
      "text": "没错，我觉得从80年代开始，软件可能比较猖獗。但是我觉得至少从2008年左右开始，就业界开始有明显的潮硬件转向的这么一个趋势。Maker moments也就是随这个起来的。所以我觉得接下来的几年里面，dw OE应该还是大有可为的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:00",
      "text": "而且我觉得做这个WE或者是做这个硬件的东西有一个好处，就是你们变现渠道实在是太多了，直接就可以。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:10",
      "text": "卖钱没错，那个什么钱？而且还有一个优势就是就好像学物理或者学数学的再去学计算机一样，你们要转计算机实在太容易了，好吗。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:24",
      "text": "好吧，我们接着念下面一段，这个是第三部分。Part three, Edison和real最后说的智能门锁的案例需要纠正和补充。Edison补充一下，就是Edison是指intel的那个算是开发版吧？对，也不叫开发版，就是英特尔的智能硬件。我也智能SUC对Edison本身其实并不大，尤其是芯片部分，大概就是半个拇指大小，括号我手指比较粗。Allison芯片是一个SUC内部集成了英特尔的夸克双核处理器以及wifi模块和蓝牙模块，所以功耗不低。Edition开发版就是那个看上去很大的那块，是为了兼容arduino的针脚。括号阿杜ino标准shide就能直接用在上面。特别制作的尺寸比阿杜ino mega大一点，相当于两个阿里云的vano的长度。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:20",
      "text": "Edison的出现让respire pie更尴尬了，比较高的性能的机器人开发项目，阿杜伊诺做不了。Edison可以respire处在中间，又不自带wifi和蓝牙模块，完全没有意义。Edison所谓和arduino兼容，不只是在真开发板真脚上，更是在IDE开发指令上也一样。同样是set up and loop，这个包可以从英特尔网站上下载，这几乎等于让adeno的开发人员无痛平移到intel的生态。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:50",
      "text": "智能门锁用arduino可以做，当然具体案例还需要具体设计和功能来看。如果利用FID阿杜瑞诺可以加一个FID读取器也行。如果利用手机APP控制阿do unio加一个wifi模块联网，通过TCPIP协议控制也能实现。这就是我之前说的respire pie的尴尬。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:11",
      "text": "Respire pie现在在国外主要用来做微型web server，或者是吴涛提到的多个阿杜伊诺控制器的coorting。毕竟阿杜伊诺的内存只有KBG，做web server很有限。当然家里自设服务器的同学又没有这个必要了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:27",
      "text": "Ebay上买几年前淘汰的二手双ZM处理器，服务器大概只要200美元，16GB内存，四个硬盘，备双4核Z样。先说一下最后那个那个二手服务器的事情，性能上确实没有问题，而且我相信几年前几年的这个至强处理器，拿来做这种事情也是完全可行的。其实是错有错手于唯一的问题是比较费电。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:56",
      "text": "那肯定的，这种东西都都一定要插到那个地窖里面，然后放在地下室里面，然后在那边搞一个自己家的data center。否则真是因为这些。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:06",
      "text": "东西它点起来就一个那种普通的这种机架。机架式服务器，就是idol，就是闲置状态，也有个好像一两百瓦的功耗。对，然后那满载的话，四五百瓦很轻松的事情。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:20",
      "text": "所以放在家里面又吵又热。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:22",
      "text": "我觉得这个东西噪音和制噪音和这冷却不是问题。它因为它这个负载也不大，而且它也是跑鞋线转，它内置的那个风扇都没问题，但是噪音是非常大。因为你知道那个机架式服务器，它的整个高度是比较窄，一般都是一U或者2U的。然后它那个风扇的扇叶是比较小的，为了他保他设计的时候，为了保证气流的通过量，才能带走足够热量。它那个风扇转速是比较高的，它的小风扇高转速意味着什么吗？吵死我不我不知道有多少人我不知道有多少人进过那个机房，就是那种正儿八经的很多服务器那种机房。我之前去过一次，我靠，那你们就震耳欲聋。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:08",
      "text": "我因为在我现在做的这个公司，他们会提供他们和戴尔合作，就专门提供那个送上门的一站式解决方案。然后会送一个会会送15个还是六个服务器。最基础的包是五六个服务器装在一个机架里面，然后送到客户那边去直接演示OK然后每次我去机房就觉得我靠在这里面简直是，但是因为机房又是恒温的，所以还挺舒服的。但是那个造噪音和对噪音和那种到处都是线的这种状况就让人觉得很抓狂。",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:46",
      "text": "对吧？所以你想象一下你家里点着一个一直可能四五百瓦的东西，然后发出极大的噪音。如果你单身估计还行，如果你家里有你有老婆小孩，哈哈哈你等着死。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:59",
      "text": "对我觉得还是前提是你得有个地下室或者是隔开的工作间之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:05",
      "text": "不过说到这种家用的服务器，刚才一个是讲了那个respire pii是一个不错的选择，因为它完全没有声音，因为它没有风扇。对，还有一个选择就是现在有那个就上次我提到过英特尔出了叫做NUC，叫做next unit of compute还是computer。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:21",
      "text": "就是一个机顶盒比可能比机顶盒跟机顶盒差不多大的一个小小。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:25",
      "text": "我觉得它比大部分机顶盒小，大概就是一个2.5英寸的一个值。不是，可能不是2点54，就是一个光驱的一个一个一便携式光驱还要小一点，可能稍微高一点的一个小盒子。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:40",
      "text": "可以直接藏在你的显示器的后面，作为显示器作为作为显示器的主机用。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:44",
      "text": "那个那个显示器很多背后不是有那个叫做VISA mont 4个螺丝点的那个支架，就为了挂墙用的。它那个东西是有一个配套的那个那个板，可以直接把那个机箱挂在那显示背后，你就可以勉强拼出一个所谓的一体机了，但是还是有限的对，那个就非常小，然后你可以买一个，而且那个非他是用的那个移动处理器。就是你买英特尔官方的话，他是用的那个是I好像最低的有atom的。然后有那个cl就是赛扬的，有那个I3、I5、I7的那你可以买个最低端的阿萨姆的来做。它是X86的，你不用考虑像那个rush派，你还要去编译ARM的包包，它没有那么数量那么多，而且这个东西的功耗也非常低，好像最低那款只有不到6瓦，还是七瓦。要正常的话，你买个I3的。其实idol就是闲置的功耗也就在十瓦以内了，还是非常不错的。一个家用服务器的东西，家家用服务器的一个解决方案，特别是小了，就我自己想买个来做这个家里的网关了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:23:44",
      "text": "Anyway扯远了，说回这个。然后刚才讲提到这个Edison和这个rush play的关系。其实从这个描述来看，Edison是一个更加一站式的解决方案，就是跟russert派其实要配各种各样的蓝牙模块，对所谓上外对各各种外各种壳子和各种外挂的东西，才能够实现一些稍微复杂的功能。而且它的ARM的好像性能也一般。但我不知道Edison on的性能到底怎么样，它英特尔的我记得夸克双核处理器，它不是X86架构的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:18",
      "text": "应该不是我记得应该。",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:21",
      "text": "夸克好像是ARM的，查一下，先我确认一下，这个不要搞错了。不是夸克，是32B的X86的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:30",
      "text": "我对，我记得我们好像那一期做功课的时候查。",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:35",
      "text": "了这个东西，应该它是一个现在是一个32纳米制成的。然后现在主频是400 mega hds，然后它可以插这个ddr 380的内存，然后TDP功耗是2 2.2瓦左右，其实它比那个rusty pay应该性能又会好一些。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:56",
      "text": "对，然后有40个GPR的针脚。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:01",
      "text": "价格也不算贵，十几刀一个SUC对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:05",
      "text": "看完陆鑫的来信，其实我有点被安利了，我觉得我可以。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:09",
      "text": "去买。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:09",
      "text": "一个来试试。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:11",
      "text": "对我我那天上上一个什么网站，我去查那个rusper pie，后来他就老给我推edition，我不知道。英特尔估计也花了不少钱在上面做广告。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:21",
      "text": "而且他有各种各样的starter kit，就是带一大堆东西。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:26",
      "text": "对，其实你说这个Edison和i do you know这个针脚的兼容，其实上次我们也聊了这个事儿。你刚刚也之前也说，这个agen可能强，就像它的生态。如果Edison它连这个开发模式和针脚都兼容的话，它其实可以作为一个怎么说来的？就是do ino的一个替换替换的一个完全可以替换的用来用如果你需要靠写的话，对对对，然后它的那个性能按这个说法应该是比rush play pair要好的。不知道比rush play pair 2是怎么样.",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:58",
      "text": "不知道这个我们反正接下来几期可能会请到这位录新朋友来做嘉宾，我觉得到时候可以再到戏里面聊这个。呃接下来一条反馈是来自一位叫做陈霖琨的朋友，他说我在介绍alen o的处理器的时候，说成AML其实是AT mail now这是一个比较有名的微处理厂商，对，非常有名，也生产过50，我还也生产过51内核的芯片。至于阿杜伊诺能做什么，至少可以用它来写底层的驱动，比如说只基于时钟控制IO完成UR通信，或者接上DA和AD完成声音采集与重现。就是低这条to anal analog和analog的这个，然后有麦克风阵列就可以做声源的定位以及定向的降燥。这个听起来蛮高大上的，比较有名的还有基于阿鲁伊诺完成的四轴飞行器控制项目arjo copter。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:00",
      "text": "节目里提到了intel edcon开发板。我知道的一个项目是清华准备把他们自己的操作系统u core移植到Edison on Edison上面去。然后他给出了一个网址，我们后面这个网址贴到show note里面。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:12",
      "text": "话说回来，开发板的概念太宽泛了，小到除了下载程序必备的器件之外，只剩IO引脚，大到有网口和音频视频硬件解码编辑器，甚至主控芯片不是微处理器，而是DSP或者FPGA，都可以称为开发板。如果没有实际开发经验的话，说起来实在是太抽象了。对你好说的没错，我们没有实际开发经验，所以开说起来真是有点大而无当。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:41",
      "text": "但隔靴搔痒。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:42",
      "text": "对，但没办法，我们谁让我们这个主题告诉了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:47",
      "text": "不得不彩。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:48",
      "text": "这种自己不到深浅的水。但是也我们也很高兴，因为毕竟有这样的反馈进来，也就帮助我们认识到更大的世界，是吧？对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:59",
      "text": "不过他说那件事很重重要，就是说其实开发版是一个非常覆盖面比较广的一个概念。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:06",
      "text": "但我们也遇到了相反的观点，就是认为说开发版就只能是阿维诺或者是那个之类的才能叫开发了。如果是restore pie的话，就已经是就怎么说呢？已经是电脑了，已经不能叫做一个develop board了。你必须你如果你要把这个东西包括到节目里面来说，应该叫智能硬件。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:28",
      "text": "所以以后什么是开发版会成为另外一个圣战吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:35",
      "text": "好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:36",
      "text": "OK, 我们念下一位。这个听众很屌的，他他来自hover，就是哈佛大学，但是他不愿意透露姓名。就是我。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:47",
      "text": "怎么说呢？其实这位听众写了两封信，第一封信写的比较就比较婉约，然后第二封可能怕我们念他的信就又来了。第二封信说你们还是不要念东西了，我会觉得不好意思的。但是我觉得这个婉约的部分还是值得念一下的，所以对不起我们我们。",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:07",
      "text": "不透露姓名，我们少念一点。OKOK凑合，我来吧。很很偶尔的在网上发现你们的节目，然后就一直听到了。现在听你们的讨论对我最大的影响可能是让我意识到编程是一件能够让数学思想直接在现实世界中被实现的一种方法。算法实现了许多代数理论算法的优化是一个SO moph c structure的问题，而bug也可以被看作是逻辑问题。不仅仅是数学，思想、哲学甚至美学的理论都能编程所实现、复制以及推广。我之前一直觉得计算机是一个类似于蒸汽机一样的发明，现在觉得计算机是一个如文字造纸一样重要的事情。听完bug的故事时候想起mark，mark one现一是什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:58",
      "text": "Mark就是那个出bug的计算机。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:02",
      "text": "对对对，mark one现在就陈列在我在的一楼，就是在hover。对，那除了来这里第一周看过一眼之后，就再也没有看过。昨天仔细的去看了世界上第一台的电脑。这些都是我之前没有仔细想过的事情。但是因为你们的节目让我能够想到这些，而且或许会让我以后选择不一样的路。我相信也有很多其他人被你们影响着，或许他们比我年轻一些。他们能真正的对这个变化的世界产生更多的硬盘。",
      "speaker": "发言人1"
    },
    {
      "time": "00:30:34",
      "text": "他们能真正的对这个变化的世界产生更多的impact。我这句话实在是绕梁3，你说这个听众说，而且或许会让我以后选择不一样的我是说以后会他会被我们忽悠的变成去当程序员。我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:53",
      "text": "我在这里要先说一下，为什么我们选择念这一部分？因为今天我们后面的主题跟这个或多或少有一点的关系。对，所以先做个discover。就是如果你们被我们忽悠，选择了不一样的人生，后果自负。OK我念完那封来信最后他说听了你们的节目后，我才买了我的第一台mac这个决定让我提高了至少10%的电脑上的工作效率。所以非常感谢你们。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:25",
      "text": "我也这个我这个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:26",
      "text": "我我这个苹果公司给我们提成，还是我们该放一个什么来着，那个叫做river link。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:35",
      "text": "我们友台节目不是经常被称为苹果公司吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:39",
      "text": "我们这个要变成一样的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:42",
      "text": "中网言程序员苹果恐慌。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:45",
      "text": "对，下面我们现在说，刚才他说了一点，他说他觉得这个计算机是一个如同文字造纸一样重要的事情。这个让我想到之前还是去年，还是今年早些时候，美国流行的一个算是一个小运动或者小思潮，叫做program is leader acy就是叫什么来着？Ok就是。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:07",
      "text": "不会编程就是文盲。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:10",
      "text": "对，翻译成中文应该是这么讲的。是就这么说，就是说编程可能会成为一个新时代的一个基本技能。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:20",
      "text": "往下其实就是像识字率的这个概念。没错，你会用电脑，你才是一个现代社会的所谓唔识字的这么一个人。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:31",
      "text": "对，因为在过去的话，我们说一定要要识字，要读书，要不要做文盲。其实考虑的是说在那么一个需要知识，需要沟通的这么一个商业化的社会，我们是需要人与人之间有一个基本的一个共同的语汇，就是所谓的叫做基础教育，这个算是这一块的。但是其实在我们现在这个时代，那个已经要求我远远已经不合格了。如果你只会说看书写字的话，这种应该不算是一个足够的要求。特别是现在我们这个计算机就是computing这件事情已经如此的深入我们的生活的时候。可能除了与人沟通之外，你还得学会怎么与机器沟通。而与机器沟通就是编程所要解决的事情。所以从这个角度来说，确实可能编程真的是像文字或者是读书写字一样重要的事情。进而就美国会有一些运动了。比如说上次是说上次是奥巴马总统也去学写了一段javascript代码，你知道吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:33:27",
      "text": "是啊，没错，对，我们我们在推特上讨论过了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:31",
      "text": "对对对，然后什么像苹果这个他也会搞一些这个就是在教育那个分类里面会推一些像编程的节目，编程的东西内容。然后我们B节目我们也有幸的被他们推荐到了编程所要听的podcast里面。虽然我们这个主要是娱乐为主。",
      "speaker": "发言人1"
    },
    {
      "time": "00:33:50",
      "text": "对，然后前一阵子那个bloomberg就是彭博商业周刊专门写了出了一期来讲编程。封面上是一段python代码，然后最下面写着说如果你看不懂上面的东西，你就过时了。还是诸如此类类似的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:08",
      "text": "一个要这里要特别解释一下彭博商业周刊是一个什么样的东西。它是一个华街人必看的一个把刊物。他其实都讲的是金融，什么财股票那些。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:22",
      "text": "对，就是高帅富们的读物。然后没错，专门花了一期整整一期来讲编程。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:28",
      "text": "对，你可想而知这件事情多么的重要。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:30",
      "text": "对，如果不愿意读读英文版的话，如果愿意读英文版的话，它有在线版本。如果不愿意读英文版的话，我们的国内一位非常知名的不愿透露姓名的名叫惊雷的译者会已经把它译成了中文，然后即将上市，大家可以去读。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:48",
      "text": "敬请期待。我们会把链接放出来，上了之后OK那么今天的听众反馈就告一段落。我们花了真高效，只用了半个小时，这也是醉了，心里不禁一点恐慌。对，这本期节目怎么办？我们还有一个半小时要走。OK，我们进入新闻环节，首先播报一个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:14",
      "text": "重磅消息，所有的花痴粉丝们听好了。对，曾经上过我们节目的沐瑶同学，有了自己沐瑶老师。对，沐瑶老师此处差不多。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:28",
      "text": "因为他真的做过老师，所以我这个说法是正确的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:31",
      "text": "没错，此处以跪姿朗诵。沐瑶老师出了一期podcast.",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:38",
      "text": "对他出了一次他是自己开了一档podcast.",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:41",
      "text": "应该是对他自己开了一档podcast，名字叫做梦瑶的桌子。然后我们会把链接放在show note里面，各位如果感兴趣的话也可以去听。当然他讲的不是我们这么有意思的对什么肤浅的中老年程序员，而是科学史更哲思。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:03",
      "text": "一点东西。",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:05",
      "text": "我觉得对比较对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:06",
      "text": "就是你们喜欢威亚老师的东西，你会在哪发现更多？对，OK, 下一则新闻是其实在前两天在twitter上有我们的热心粉丝在问我，你们你在德国吗？然后gams come在科隆。对他说你有没有去看？是你有没有去看？没有你有去看过吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:30",
      "text": "我从2007年开始，每年都嚷嚷着要去看，如今已经过去了。对，八年。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:36",
      "text": "所以这并不是真爱是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:39",
      "text": "反正每年都有事。去年去年不去年不记得是反正去年就克隆有两件事情非常吸引我。一件事into moto intermodal，就是摩托车展。然后另外一件就是games call，就是欧洲的最大的游戏展。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:00",
      "text": "不过科隆还是个挺漂亮的城市，我也挺喜欢那里。大家如果去克隆的话，一定要去试一下那个巧克力工厂。What在哪呢？就你不知道在那个河上河边上有一个就沿着你去克隆教科隆大教堂，那个是个地标。沿着那个河往你在科隆大厦那一边，沿着如果你面向河的话，往右边走大概1公里左右。然后在那个河的上面会有一个建筑，是一个巧克力工厂，是link的在那开的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:32",
      "text": "OK我觉得那你就可以然后你就可以去尝试。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:34",
      "text": "一下那个那个Charles chocolate factory那种感觉，但没有那么大了。但是还是你可以看到从巧克力怎么从巧克力树一步一步变成巧克力的，然后你可以现场品尝流状液体的巧克力，OK超爽，一个巧克力喷泉。牙齿一酸该去看牙医了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:57",
      "text": "说明OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:58",
      "text": "接着说这个games卡。对，如果各位去。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:01",
      "text": "克隆的话，我作为一个成年人推荐的是科隆啤酒。喝什么4711.",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:11",
      "text": "香水的OK.",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:14",
      "text": "当然还是games com。Games com应该是大家听到这一期节目的时候结束，就是从六月号6 8月6号到9号.",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:22",
      "text": "所以你没去，我们有什么亮点可以讲的？",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:27",
      "text": "我也不知道，我觉得可能主要是最近几年不管是E3还是games com都可以看到某种都让人觉得某种复兴的感觉。我不知道你怎么你你怎么讲，就是在08年的左右，08年的时候可能games com e3都让人觉得我靠电子游戏产业完蛋了，就乏善可陈。然后主机没人买，电脑上的大作业全都要死不活的样子。不知道为什么过去两年游戏界又风生水起的感觉，然后玩玩家多了，可是为什么呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:10",
      "text": "我不知道跟移动有关系吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:15",
      "text": "按理说移动端产业的兴起，移动端游戏的兴起，应该让这种传统的重度的这种所谓交互软大型交互软件的的这个产业萎缩才对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:29",
      "text": "可是此处插入引号。Council game是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:33",
      "text": "不是，就是就games com这个主办games com的机构是德国的所谓交互式娱乐软件主管局。反正就是类似于广电总局这么下属的专门管游戏的这么一个部门组主办的。然后他之所以叫这么拗口的名字，而不是直接叫什么游戏机之类的，就是因为它包含了一些比如说互动的卡拉OK，或者是什么互动的导游软件，或者是不一定是娱乐性质的娱乐软件。买娱乐不是不是娱乐性质，不是游戏性质的娱乐软件。我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:18",
      "text": "这个可能。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:20",
      "text": "也怎么说呢，反映出了现在的这种多媒体的交互手段，可能真的是到了一个就突破了一个临界点，让人觉得真正变得真正好玩起来了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:34",
      "text": "有可能我不知道你怎么想。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:36",
      "text": "就比如说我们有一期，我记得还去年什么时候在有一期IT公司里面说，我问到现在teenager玩玩什么？然后劳尔斯去采访一个呵呵傻笑的，听一阵少女说现在都在玩撸啊撸，对吧？撸啊撸，然后我跟real其实也在玩一个类撸啊撸的游戏，只不过更比撸啊撸可能更弱智一点。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:07",
      "text": "不要这么自黑。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:09",
      "text": "叫hero of the storm.",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:13",
      "text": "也是爆出缩写是HOTS。所以我这里要吐槽一下暴雪的这个命名，就是因为heart of swarm也是这么写，没错。然后每次说hot的时候，第二问，你是说心悸呢，还是心悸呢？还是心悸呢？",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:33",
      "text": "那你心里只有心机。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:34",
      "text": "就是不是因为这个hero of storm里面有暴雪旗下三个franchise的角色，有starcraft，有word craft，还有一个是那个暗黑暗叫什么来着？",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:49",
      "text": "就叫DD secretary，好像叫secretary anyway.",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:53",
      "text": "就是他他会把暴雪旗下的那些，就现在不是都是流行搞联盟，什么就是漫威带来坏头是吧？各种拼一起，弄弄一块。他暴雪一看我们有三个franchise要合并，你出了个这个hero of the store，然后里面英雄大乱斗。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:09",
      "text": "而且其实还有什么失落的维京人，以及将来会出的那个叫什么ora watch里面的英雄，也会应该也会出现在这个游戏里面。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:19",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:20",
      "text": "主要原因还是因为dota这个莫名其妙的怪胎一炮。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:25",
      "text": "太成功了。对，然后其实我不太明白，是你说像hero the storm和撸啊撸和多塔他们之间有什么本质的区别吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:38",
      "text": "我觉得从我一个你玩过撸啊撸吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:42",
      "text": "我看别人玩过，我自己没玩过。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:44",
      "text": "你玩过dota我也看别人玩过，我自己没玩过。你玩过dota 2吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:49",
      "text": "我看别人玩过没，自己没玩过。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:51",
      "text": "你知道所有这些东西的来龙去脉吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:54",
      "text": "我大概理解dota是在那个叫什么来着？那个魔兽争霸warcraft的编辑器里面的地图编辑里面改出来了一个游戏。对，然后后来又有人把他好像分家，然后做了一个叫什么什么来的这种legal .",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:13",
      "text": "legends。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:15",
      "text": "这个是报这个是腾讯山寨的那个吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:18",
      "text": "不不不，legal legends就是L.",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:21",
      "text": "不就是撸啊撸，撸啊撸是是从dota演变出来的，但是不是暴雪的了。对，然后国内应该也有人玩。腾讯有一个叫什么来着？",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:33",
      "text": "腾讯高腾传奇也是什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:35",
      "text": "是叫dota传奇吗？还是我不知道，反正腾讯有一个非常类似的游戏，然后做非常火OK。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:42",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:43",
      "text": "然后就是我们现就我们两个在玩的这个，这是暴雪终于发现，暴雪他们费了老大劲在那憋那个那个星期二发现怎么刀塔这么赚钱，我怎么赚到钱呢？我就卖个单机游戏，哪比得上这个dota这种玩法这么赚，是吧？我们也来做个这个，于是就出了这个叫什么hero of the store，这是后来者。",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:06",
      "text": "还是基本正确的。整个历史线其实是最开始dota在魔兽之争霸3的时候就已经出现了。最开始是作为一个一个帽子，就是一个游戏的用修改器，用编辑器编辑出来一个特定地图，然后打的人实在是太多了，知道。然后那个魔兽争霸三的资料片冰封王座出来之后，又被发扬光大，出现了更好的dota地图。Delta的全称是defender of the out .",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:41",
      "text": "of .",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:41",
      "text": "the what a代表什么我不知道，ancient.",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:48",
      "text": "查一下。",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:51",
      "text": "Asia古守护者。对，在里面它是其实就是那个我记得action就是股数，其实就是两波英雄各自守护自己的树。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:03",
      "text": "这是一个主基地的样子的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:05",
      "text": "就是那个东西那那个东西被打爆了，你也就输了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:09",
      "text": "对，然后我记得他名字就是我看的。我说这个什么游戏？他们叫dota我说怎么为什么叫这个名字？",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:14",
      "text": "他说你好，这不就是魔兽吗？为什么要叫dota呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:17",
      "text": "对吧？对，他说你好，冀，你知道这叫刀塔就行了，就打破别人的塔你就赢了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:21",
      "text": "没错，差不多刀是砍别人塔。后来魔兽是魔兽争霸三逐渐就变成了一款古老游戏。之后原来做这个dota的地图的创始人分成了两个团队，一波投奔了ww就是我们苦苦写信求主题歌，韦德的就做stream.",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:48",
      "text": "那个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:49",
      "text": "对steam.",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:51",
      "text": "那个是啊，然后还不。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:55",
      "text": "进去球报，做了一个dota 2。另外一波人自立山头成立一个叫做riot games，是他们自己成立的。Anyway, 反正riot games作为一个游戏叫做legal。对，这就是国内熟知的额度。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:12",
      "text": "然后暴雪不甘寂寞，一开始也有一个自己的项目就叫blizz dota。但是后来因为侵权，好像现在是valve有dota这个词这个商标了，然后被迫改成了所谓heroes of the storm。但其实根本就是同一游戏的三个分支，三种后代。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:34",
      "text": "对，其实刚才你说的，我们那就跟溯源讲一下那个地图编辑器是个什么东西。我觉得很多人应该有接触过早年玩那个心机魔兽的时候都有这个东西。他会你在那个游戏目录里面发现除了有那个主程序、游戏程序之外，还有一个叫做editor。对，编辑器这么一个东西，它打开之后就像一个什么来着？",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:56",
      "text": "我觉得有点像MS paint。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:59",
      "text": "对，就像一个绘图软件。它有一个主界面，就是一个空白地图，然后左边有各种各样的地形、兵种，然后小工具，你可以在上面任意设定地图的大小，然后这边摆。就画图，等于是我当时我当时我是你用那个东西来改个做个地图，应该90后可能.",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:15",
      "text": "没有这个概念，但是我们小时候在网吧里面，那个时候网吧是不联网的，很难想象的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:23",
      "text": "网吧是不联网的，没有局没有广域网。",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:26",
      "text": "只有局域网，就只有烂。然后你在line上面你要跟别人对战，然后觉得那个地图太烂。当时打红警又能了，打红警的时候觉得默认的地图都太讨厌了。这搞什么，我不就想造兵互相砍吧，互相喷。那对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:44",
      "text": "造那么地形干啥？全部纯平的一个地儿，全部都是金矿。没错。",
      "speaker": "发言人1"
    },
    {
      "time": "00:47:48",
      "text": "我就打开地图编辑器弄一个弄，直接开打。有时候甚至是全地图都是框，然后只有一小块可以把那个基地车展开。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:57",
      "text": "还得先把那个矿挖掉才能造反。对，就是坑爹。然后打星际的话就是因为默认地图的那个矿太少了，还是1500的1坨水晶。我记得对，就发现完全不够，打造个战舰，得挖就挖造一队战舰，一片矿没了。过程来改成先选256乘256最大的地图形，然后把那个数字调到最顶，我看多少2万，然后把那个气矿加成那种最大的，就是基本上挖不完了，然后一看基地封死入口，家里憋一堆传出去，开始干。一般你看一般有小破孩的打法。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:32",
      "text": "对，这就是80后小破孩在网吧里面干的事情。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:36",
      "text": "对，但是当时我也有意识到这么一个事儿，就是因为那个时候是叫做叫做即时战略性，基本上还是一个人控制一堆兵，然后就互相PK，对吧？当时后来打那个战役模式，就觉得你会有那种所谓英雄单位，就是you here unit，就他会比普通单位要厉害一些。比如说攻击力强一些，就是耐操性强一些。这样这种情况发现，如果你只控制一个单位，然后就直接是就等于直接考B超了，这还挺有意思的。后来也有人改成就是按那种故事情节来做了。再再后来就发展出那以后就别控制多个单位了，就一人就只能控制一个。你这个英雄别的都是电脑或者是队友，然后你这样互相开支开始干。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:19",
      "text": "这说明其实我打即时战略的人，还是喜欢像玩ARARBG这样去打一些比较个人情主义的东西。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:30",
      "text": "但我觉得其实跟知识战略的考操控有关系。因为其实你这样大的调打的好的话，你真的需要对每个兵种进行一定的程度的微操的。当然之后你要照顾家里生产，要挖矿，一定要防守。其实他一个人玩还是蛮分不过神来的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:45",
      "text": "我觉得重要的一点是你作为一个玩家，你其实真正喜欢的是什么？有些人真正喜欢的感觉其实是所谓即时战术的感觉，而不是即时战略的感觉。就是即时战略其实如果你要真正做战略层面的东西的话，你下围棋好操心。不是你不应该去操心每一个单独的兵种应该干什么。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:04",
      "text": "然后还是有一定智能的是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:06",
      "text": "对，你你你我你所做的应该只是给策略，而不是去局部微调。越级指挥，告诉每一个兵你站在这儿，然后另外一个说你在这里使用那个魔法。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:17",
      "text": "这个是很蠢的。我觉得所以其实从这个角度来讲，现我们现在所谓的即时战略游戏都叫做即使不按照一个管理学家的术语叫做micro management game，叫薇薇薇管理的老板事无巨细，事必躬亲。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:34",
      "text": "没错，90年代那些即时战略游戏，其实就是那个时候每个人都就每一个人们不知道玩家喜欢什么，不像现在分的这么细，那时候的集石山流去就真的什么都有一点点。你看那个红军里面不是也有什么滩羊之类的，优里这种只能造一个的东西，对吧？但是我觉得现在就有人就比较分的比较清楚，有些即时战略游戏是还是走那种纯粹的真正的即时战略的路线。比如说横扫千军的那个哼继任者叫什么来着？Total command还是叫什么，然后包括现在的叫什么planets command，还是whatever类似的一个名字组成。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:14",
      "text": "对，兵站是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:16",
      "text": "对你就对你把那个地图缩到最小，然后你看到的整个地图上就只有那个代表兵种的符号，然后互相在那砍。这个是纯粹意义上的即时战略了。而像暴雪去做那种星际二什么的，都已经有点朝着像AARVG的方向扩拓展了。我觉得对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:41",
      "text": "anyway我们好像跑题了，说回这个games count，然后这个games count这个hard a hero of the storm有什么新鲜事儿说一下。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:52",
      "text": "出了两个新的英雄。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:55",
      "text": "还嫌不够多吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:56",
      "text": "还嫌不够多什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:58",
      "text": "我应该是半年前，就是beta OK没结束之前。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:03",
      "text": "你还是公测的时候就已经结束了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:05",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:06",
      "text": "ok我是一直玩到，我从公测的时候一直玩到现在，所以会比较追这些事情。最新的英雄前一阵我想想，前阵子出的新英雄是butcher屠夫，就是develop里面的那个butcher。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:23",
      "text": "你等一下，之前拿着大镰刀把这边拉过来吞到肚子里面那个东西是什么呢？",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:27",
      "text": "那个那个叫stitch OK，那个是魔兽争霸。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:31",
      "text": "里O.",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:32",
      "text": "K是一只赠物。然后上个英雄是LIC，就是那个魔兽，也是DW里面的那个骷髅王。然后本次games tom上出了两个新的英雄，一个还是dl世界里面的武僧，叫什么cousin之类的一个名字。然后另外一个新的英雄叫做雷克萨斯魔兽世界，魔兽世界里面的一个英雄。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:03",
      "text": "所以现在英雄总数一共有多少个了？有五十多了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:05",
      "text": "应该我没有数，但五十差不多。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:10",
      "text": "对，就我其实这一点我觉得要讨论一下，就是为什么要搞这么多。我之前看别人玩那个撸啊撸和那个dota的时候，就这个疑问，我说那么多个人就是你的对手。因为他那个角色是要么是随机的，你看不到对方选什么，你无法预测对方选什么。所以他每个角色的那个技能，每个英雄的技能又是不一样的。然后他每个英雄的技能和他团队的那其他英雄技能的组合也是要有签有有那个讲究的。所以你要玩的好这个游戏，你肯定是要知道对方的那个组合有什么有长处和弱点，然后你自己要想办法去扬长避短。所谓这个时候就要求你对其实要对每个英雄的属性都要挺了解的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:53:51",
      "text": "这个时候我就在想，那你搞这么多英雄我怎么记得住？我玩那个hill storm玩了好久，就只能记一个可能60%常见的这些英雄的技能和和他的那些组合会怎么样子。然后要遇到一些稍微冷僻的，我还是每次都很很悲剧的撞他们说这个会干嘛来着？我应该怎么他对吧？就非常然后就死了然后就死了。对，就非常悲剧。然后我就不明白为什么还要不断的加。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:19",
      "text": "我觉得这个逻辑其实很简单，就总有一款适合你们。而且举一个类比，就是90年代的那个格斗游戏，格斗游戏发展到就是21世纪的时候，每一个人都可以选，从密密麻的头像里面选一个角色出来，其实不是一样的道理吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:39",
      "text": "你那个不是拼假象的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:41",
      "text": "所以你每次都选不知火舞是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:44",
      "text": "被揭穿了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:49",
      "text": "我觉得因为撸啊撸或者是就这种mobile游戏吧，你在玩的时候它本身没有太多的故事性，对吧？那你要是强调说玩家的怎么样在玩腻了的时候有一个新的挑战或者说新鲜感是吧？对，就是你玩你会觉得这么多英雄我总得一个一个试一遍。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:13",
      "text": "所以会造成这个因为他的英雄那么多，就基数已经那么大了。然后他每个人还有什么这个技能树，这个成长的点，他可以有很多选择点，就是方向是不一样这样了。这样造成他整个的变种其实是非常多样的。这样的话你基本上不可能打两场同样的仗。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:31",
      "text": "没错。所以如果你愿意细钻研的话，每一个人像撸啊撸，每一个人可以有不同的符文系统，你可以加不同的符文来改变自己英雄的某些特定的属性。对，比如说冷却更快，或者是伤害更高，或者防御更高，写更长之类的。另外你可以在游戏里面买东西，来改变自己的，来给自己的英雄通过某些物品来达到某一些特定的功能。比如说你可以瞬间移动，或者是忽然砍别人一刀之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:01",
      "text": "对对对，所以其实你看这就是它这个mobile对mobile的全称叫什么massive online.",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:08",
      "text": "大头air arena.",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:10",
      "text": "就是大规模在线格斗竞技场。对某其实就其实和传统就是拿心机来比，它就是模式很简单，你只要是虫族，你和对方是一模一样的虫族，你的并不会比比对方厉害一点。那你的优势和对方的优势是你的和你的短处跟对方都是一模一样。对，然后对比，你当然也有升级的概念，但是一个是per game，就是游戏结束就重新从头开始来过。这点是跟魔法是一致的。但是玩法就是这个兵种的变化和就比较一致。因为之前那个像新基那种，而且它长，就像新基他常打的地图也是那就那么几张，就会很容很很容易变成模式化的一个东西。就是最开始几分几秒的时候出一个农民去对方骚扰一下，然后这样对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:56",
      "text": "我想到就笑了，说世界说一个学生上课的时候正在开小差，被老师叫起来说请列出世界著名四大古战场。然后他说lost temple the hunter，还有什么？还有两个我现在已经。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:12",
      "text": "想不起来了。对对对，然后相比起这个，另外就是这个角色扮演类的，就跟这个有点相关的，就是他每个人的成长是不一样的。刚才说那个星际里面你升级和对方升级都是路线是一模一样的，就种族一样的情况下，但是在角色扮里面，你每个选择角色不一样，他可能成长路线是不同的，而且你的成长阶段是可以存盘的。然后你可以退出游戏之后再玩，还是助战车接着从那个地方接着玩起。但是moba就等于是有点结合两者的这么一个意思在里面。就是你的成长可以在per game里面是有，但是每局是从头开始的。但是他跟我那个骑士战略不一样，就是因为从刚才讲的英雄和组合太多了，你不太可能有一个统一的开场的模式。所以新鲜感和这个团队配合是挺应该，对团队配合还是一个挺重要的点。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:07",
      "text": "玩星际这种即时战略，一般玩一V一的情况下就没有什么配合了，就直接跟对手比这个微操、比战术、比战略对吧？那你可能玩了两人、四个人、八人这种情况下还要还要稍微还有点配合在里面。但是像moba像这个hard top的song，它是强制五人的，是吧？是强制五人场。对，5V5的对，就是一共十个人在玩。这种团队的默契也会会好得多。而且因为他每个角色他在选人的时候就要考虑说我这个角色怎么跟你的角色配合。他每个人选的时候是有个先后顺序的。你要根据前面你的队友选了什么，以及你的对手选择的是什么，再去做一些调整。这里面我觉得这整个团队配合那种团队感是比技术战略要强很多的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:58",
      "text": "对，而且很大的一个副作用就是很容易怨队友。有时候我也做这种事情就是一顿骂他。对，其实总觉得自己遇到了猪队友，但有时候自己才是一个猪队友。对，我觉得在撸啊撸里面可能这种状况比较严重。就是逆风抓战犯，顺风就是自己的功劳。只要输就是别人的错，赢就是自己做主打多好。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:22",
      "text": "我这个带的多好啊。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:24",
      "text": "我的人性在撸啊撸mobile游戏里面体现的非常明显。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:29",
      "text": "对，所以然后玩那个mobile的时候，其实有一种感觉，就是有时候你会觉得比较顺。就是你你连打好几局就遇到不错的队友，或者干脆你就跟那个配合的比较好的人组队了，对吧？你觉得终于有一种找到有一种归属感是吧？当然觉得就是挺厉害的，个人擅长迎面，而要能够互相取长补短这样。但也有不顺的时候，就是连续五局都是诸葛亮的队友，直接就进来五个人，就只有三个人在玩，你怎么玩对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:59",
      "text": "没错，这个比较久。但我觉得其实为什么要提到撸啊撸，也是我为什么提到hots，也是因为这就为什么你和我都不玩撸啊撸，而后选择house。我会觉得其实我。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:14",
      "text": "我的原因很简单，就是因为我是星际迷，hot hot hot里面有我的那个角色。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:22",
      "text": "这么简单就就。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:23",
      "text": "很简单一个理由，有reno有nova就够了，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:27",
      "text": "说的是。我觉得玩一下，我一方面是这个原因，另一方面是对，你说的这个原因其实挺重要的。我觉得玩撸啊撸没有激情的原因之一就是那些英雄都跟我认识。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:42",
      "text": "对，不认识。我知道你玩星际，你要玩暗黑，你也玩，你玩那个我。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:48",
      "text": "暴雪每一个游戏我都玩的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:50",
      "text": "我这我就是没玩过那个workcell那套英雄不熟，但是其他两款还挺熟的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:56",
      "text": "Word of arts我是从0405年打到现在了，所以了解中间可能AFK只有两三年的样子，就基本上是一个人生成长的轨迹。对，然后我觉得另外一个最重要的区别就是hot里面的英雄是不需要买东西，也不需要加什么天赋点的。然后这个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:22",
      "text": "是什么要解释一下。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:24",
      "text": "就是你在玩dota或者是撸撸啊撸的时候，你在游戏里面你需要花钱去买装备。有些装备会给你加上，有些装备会让你变得像神一样，就比如说几秒无敌，或者是让你能瞬间反应瞬间移动之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:42",
      "text": "然后这个花钱是花真钱的意思。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:45",
      "text": "不是，就是花钱是说你在游戏里面打杂兵，那个濒死就是对撸啊撸和dota都有一个传承自最原始的dota版本的特征。就是一个兵如果他死了的话，他会掉东西，不是他会掉钱，但等等应该是一个兵只有在你杀掉他的情况下才可以让你得到钱。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:15",
      "text": "所以要补最后一刀。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:17",
      "text": "对，这就是补刀这个词的由来。就是你一定要去抓这个英雄，这个小兵，每次写的时候打他一下，然后你就可以得到钱。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:26",
      "text": "然后他这个是对他们被被诟病的设计不公平。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:30",
      "text": "对我觉得其实这个是非常愚蠢的一个设计。但当然此时可能所有撸啊撸的玩家会先桌来指指着我说你这个蠢货。但我还是觉得买东西这个设定实在是太太太增加了很多无用的。我也不知道该怎么说，但我相信有很多人会觉得这个设计非常精妙。但是在我看来就是他他太真。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:00",
      "text": "你觉得伤害了游戏性吗？对，不会有这种感觉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:05",
      "text": "所以在house里面买东西，然后也不用去在意自己升级比别人快。因为所有人都是在都是共享经验值的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:15",
      "text": "因为而且好奇的买东西，我一买就只能装饰性的东西。你骑个什么彩虹小马换。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:21",
      "text": "个人撸撸啊撸什么的也都有，都也也是要花花真钱去买。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:27",
      "text": "对，然后游戏里面只有经验值这么一个东西，就打小兵游戏保涨经验值，给团队一起升级这样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:33",
      "text": "对，然后你每三级会可以拿到，可以升级自己的一个技能，不像撸啊撸或者什么，你每升级都可以加个技。对我相信在专业的比较比较专业的魔法玩家里面，魔法玩家的眼睛里面，耗子是非常低龄化的一个低龄化快捷的对，其实没有太多可玩性和内涵的一个游戏。但是在我们这种就叫中对中老年程序员看来。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:02",
      "text": "就没有谁叫咱谁叫咱是那个什么暴雪脑残粉？",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:07",
      "text": "没错，这就解释了为什么t ager都在玩撸啊撸，然后我们都在玩暴雪的东西。因为我们是暴雪，在我们眼睛里面就像像神一样的，但在青年一代里面可能没有这种感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:24",
      "text": "是大叔？",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:26",
      "text": "对。所以games com上还有暴雪的另外一个新闻，就是魔兽争霸，魔兽世界又要出新的资料片了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:37",
      "text": "这是这叫沃尔沃吗？这个叫对word .",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:40",
      "text": "for craft。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:42",
      "text": "我对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:43",
      "text": "山口山，国内俗称山口山。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:48",
      "text": "太形象了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:49",
      "text": "对，然后这个新的资料片会让玩家的等级提高到117。同志们，110级。我刚玩的时候满级是60级，然后不对，我玩的时候满级是45级。然后这过了八年九年，居然已经出到了第这是第六个还是第几个expansion，真是太不可思议了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:16",
      "text": "所以他们准备不打算停吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:18",
      "text": "这件事儿因为这个东西也曾经在08年还是09年的时候，市占率六成，就是有六成的网络游戏玩家是在玩word farc rpd。然后直到今天仍旧是一个死而不僵的这么一个巨大的游戏。还是可以每年给报纸创造非常可观的收入，所以他们是不可能卡了的。所以就要不停的放资料片来注入它的，来延续它的。这个怎么续命？流星说法。",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:51",
      "text": "续命OK。然后这次games count还有什么其他好玩的东西吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:59",
      "text": "比如说最终幻想15都出到15了。对，最终幻想15天而且自动幻想七好像也要remake，但这已经是一三级了，所以我就我不太明白，你玩的啥飞机吗？你玩什么最终幻想，或者是勇者斗龙，或者是我。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:18",
      "text": "我想玩儿。但是我唯一搞不清楚就是他们那个剧情设定实在是太。怎么说呢？如果你不理解这个日本人的思想或者这个日式文化，我觉得很难跟着那个剧情走下去的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:32",
      "text": "我也觉得是我从小到大包括仙剑奇侠传我都没有打通关，我实在是玩不这种日式RPG玩不下去，不知道为什么。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:41",
      "text": "对，那你看日漫吗？看啊，那为什么玩不。",
      "speaker": "发言人1"
    },
    {
      "time": "01:06:45",
      "text": "下去日漫我也是只看过七龙珠吧，那也不是看日漫，七龙珠是一个比较从头看到尾的漫画，除此之外没有什么日漫让我能够一直追到底，包括什么机器猫和或者是悠悠白，我都没有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:01",
      "text": "追到底。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:01",
      "text": "海贼王没有，海贼王我没看过一集。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:05",
      "text": "之类的OK我也是这区分什么80后90后的。不对，其实也有很多80后看海贼王怎么办？",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:14",
      "text": "对，我以为知乎是全员看海贼王。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:18",
      "text": "我基本没看。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:19",
      "text": "那这你不是你们不是连什么服务器都起海贼王的名字吗？是是是。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:25",
      "text": "但我自己不怎么看。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:28",
      "text": "Anyway最新最最新的一部电影叫pixel，可以去看一看，如果国内上映的话可以去看一看。就是讲那个80年代，就spoil a lot again。反正就是讲80年代的一群打游戏的人，然后怎么在利用怎么利用80年代的游戏知识，在2015年拯救世界，也算是一个，我实在很讨厌屌丝这个词的，怎么说呢？就是一个屌丝旧式的幻梦，在这个游戏里面，在这电音的事情。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:02",
      "text": "好吧，OK那个games come就新闻就讲到这里。我们刚才我们什么娱乐技术主题节目，我们娱乐完了开始讲点技术的事情好吧？好。When up to see这是个什么东西？",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:19",
      "text": "微软在前两天再次走向了再次延续了他们前一阵子我们介绍过的这个开源的潮流。他们把也就是他因为我们之前不是介绍过，他们最新推出的这个功能，就是让让IOS APP和android APP可以跑在windows phone上，对吧？对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:45",
      "text": "windows双十应该是还是windows 10 mobile.",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:48",
      "text": "还windows 10 windows 10 windows mobile。对，就是然后这个技术的中间层被他们开源了，他们的整个整个项目叫做island wood，倒木岛上的树，岛上的森林。然后他们把整个island wood里面比较重要两层在github上面开源了MIT license。这个很难得，是对，非常难得。就是你在就是你打开这个githa microsoft的那个页面，发现下面赫然有一个项目叫做win object sea。你觉得这是一种什么样的感觉？就是我靠这是太阳从西边出来了。没错，这样对卡斯罗，为什么要说对卡斯罗？40年前曾经说，当南美洲的主教成为教皇，美国有了黑人总统的时候，美国就会和我们建交了。那个时候所有的人都哈哈大笑，然后这就是今年发生的事情。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:58",
      "text": "对，说今年那个古。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:59",
      "text": "就是这种surreal的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:01",
      "text": "对吧？古巴不是美国驻古巴大使馆，然后就开张了是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:06",
      "text": "对，没错，就居然有一天microsoft可以把那个可以抛出这么一个软件。其最终目的就是让object to see写的东西跑在自家的这个机器上面，这是一种很难得的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:20",
      "text": "所以这个问object它的主要一块是什么？就它要解决什么问题？",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:26",
      "text": "其实他要解决怎么说呢？就是任何一个IOS APP，它能够在IOS的设备上面跑起来，他要做的一件事情就是让这个object c写成的程序可以跟硬件交互，对吧？对，那跟硬件交互其实需要两层，你需要是牵扯到两件事情。一件事情是把all object c编译成硬件可以理解的二进制代码，另外一部分则是就是让让这个objec所调有一些函数可以在这个硬件的操作系统上面出现。然后这个island wood整个的技术所做的事情也就是这些，就是对他们的API对它一部分是做一个compiler，另一部分则是给出一个runtime，compiler可以让object to c的代码被编辑成微软所使用的硬件，可以理解形式。然后微软的这个object c的runtime可以让IOS下面的那些函数可以被调用，可以实现那些LOGC下面的函数所要实现的功能。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:41",
      "text": "所以简单来说就是以后你可以用objec这个语言写一个代码，然后调用微软通过这个one object c提供给你的API，然后就这个程序通用微软这个编译器，编译成windows phone上运行的代码，就可以直接运行的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:02",
      "text": "没错OK这其实我相信大部分人不会拿它来写一个新的全新的程序，而是利用这个东西把自己既有的在IOS上面的APP扩展到移植到windows phone上。",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:15",
      "text": "对然后然后整个这个v object c的一个战略的目的，就是说减少那些IOS开发者向windows中移植应用的成本。可以这么理解吧？没错，其实他要做的一件很重要的事情就是他要提供一套和这个IOS上面API差不多的这么一套替代的API是吗？没错，那么下面有一个有有一个自然而然的问题，就是说如果我一个IOS的程序，不就假设没有用系统的一些什么思维，API都是用来开放就公开的，这个就是IOS的这些API，微软的这个one object c提供了多大比例的这么一个算是一个怎么来的？就是API接口的重写，它能够对模拟成一个IOS设备。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:07",
      "text": "目前来讲所实现的API的部分还是非常少的。应该说至少在报道里面说，它提它只提供了一部分UI kit library的功能。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:20",
      "text": "就是是一个字集，是不是全部的IOSAPI都有。那么在他提供的这一部分API里面，就是它和那个IOS的实现是有区别的吗？还是说完全兼容的？",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:34",
      "text": "这是一个好问题。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:35",
      "text": "因为这里涉及到一个法律问题，就是之前大家都很关注的，就是oracle告那个google那个官司里面判决的。就他他oracle告那个google的官司里面最核心的一点就是说那个java的那个标准库，那些API是不是受专利保护的，对，因为那个google它在安卓上面跑的那个是叫做什么那个虚拟那个虚拟界面名叫D什么double c是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:04",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:04",
      "text": "double devote那个虚拟机，它和那个oracle那个买买从上那里买过来的那个叫hot spot。对，就是hot spot里面搭载的那套原生就标准库的那些API和那个double c里面的它的接口是一样的，但实现是不同的。就是说我们可以理解成google出于叫做叫白盒叫白盒重写还是黑盒重写？白盒，这应该叫黑盒，黑盒重写就是不不不重写是你知道他要干嘛的对，不？你是知道他干嘛，但你不知道你就不是White room，right? 就是OK你不空屋子冲。对你就不去看别人的代码的原始代码，你只是根据它的接口来自己再实现一遍，这个东西后来判决是这个是不侵权的这不受专利保护的。也就是说对你只要这个API是公开的，那么我提供一套兼容你这个API的第三方是就是替代实现是完全合理合法的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:07",
      "text": "微软如果做这么一件事情，他也是合理的，苹果不能因此去告他，对吧？微软可以就说这个前提成立的话，他可以以微软的实力，我相信它可以去实现它和爱做的很好就一样的接口，然后这样可以实现IOS。那些程序基本上不需要怎么经过修改，就是重新编译一下就可以跑在windows放上面。然后他把那些硬件接口对着做好之后，就可以无缝无缝移无缝移植了。等于说这个意思没错。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:35",
      "text": "是。而且我觉得其实说实话就是从一个旁观者的角度看，oracle告google这件事情简直是就what fuck，你是猪油蒙了心了还是怎么着。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:47",
      "text": "你不知道吗？沃尔克的律师团队比他其他业务团队都要多吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:52",
      "text": "OK, 当然苹果。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:53",
      "text": "也是一个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:54",
      "text": "比较有时候也挺操蛋的一个公司。我记得他们还告我一个超市，说那个超市的logo跟他们太像了，就是那超市的logo是两个苹果还是三个苹果，然后他说他就就你是你神经病，你脑子被门夹了，你干嘛要去告一个莫名其妙的超市？",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:15",
      "text": "没有了，所以这个island就是这个island wood，就是这块这个stack其实有四个组件的。刚才说的有一个object c的这个编译器，一个object c的这个runtime。因为up object c它并不是一个完全的就是非它不它是一个需要runtime的语言。对，然后有刚才你说有一个微微软，是根据IOSAPI实现的这种IOS的一个标准库，但是不全。以及最后那个就是visual studio的整合对吧？对，然后他这次开源了是哪两个部件？是IOS的RC的runtime和IOSAPI对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:54",
      "text": "不是，是i object c的runtime和一个compiler.",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:59",
      "text": "应该OKIOK。所以那个upc compiler是开源的吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:08",
      "text": "Object c的compeller不都是LL vm不是。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:11",
      "text": "所以这个是他们也用的是同样的LVM那套东西吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:15",
      "text": "我想想，我记得如果没记错的话，jex c的前就是拖，它可以通过LVM的前端代码生成一个IR就是中间语言。然后这个中间语言可以被windows的这个copy er转译成windows硬件的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:35",
      "text": "二级代码OK，所以其实微软费了这么大劲儿，无非是想说，求求你给我们的windows奉献一点应用，是这个意思对吧？这个时候太可怜了，但他其实这个姿态是就是这样的意思，他还搞了安卓那套东西是一样的，逻辑是差不多的，但实现方法不一样，那么会有一个很自然而然问题了，还有人写原生的windows one应用。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:03",
      "text": "我觉得这是微软的一场生死大赌。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:07",
      "text": "你你你这么想你你作为一个IS开发者，你毕竟你小团队你就那么一个人或者两三个人的开发团队，你发现说你写了，你肯定要写IOS应用，对不对？你肯定要写安卓应用对吧？你跑不掉的，才发现抬头那么送之前也抬头说，太麻烦了，还在学一套，我又不想花时间，我维护这两个都已经很费时了，我就不写了。于是于是乎从他们就应用就是寥寥无几对吧？现在说这么套，你看那我花个一天时间，你是一个把port过去，哪怕你从安卓pot过去也好，从安port过去也好，都有这个方法了。官方也认可了你给了这套工具，那你肯定不会再写我原先的windows中应用了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:53",
      "text": "目前来看也只能这样了。具体的最大一个问题就是如果你不这样做，你还要怎么做对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:01",
      "text": "所以其实微微软微软赌的是什么？微软赌的是说如果你们都按照微软的这个步数去写windows应用，然后大家就windows phone这个平台的成长起来，就不会受到应用不足这东西的一个限制。然后他本来这个是硬件还不错，软件我们都还至少都认可，觉得比安卓好。然后让他觉得可以卖起来，成为一个第三大的平台。",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:31",
      "text": "对我觉得微软赌的就是我这么惨淡经营，这么为你们这些目前的两大巨头的开发者做这么不知道爽不爽滑的这种非常新诚心的移植的这种to chain已经做好了。那你们高抬贵手给我写一写。也许将来我的市场份额大起来，你们也会考虑说就是windows phone first。假如有这么一天的话，我觉得他赌的就是这件事情。也许有一天人们会也会去会想说做windows phone first。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:07",
      "text": "所以不管怎么说，微软的这个如意算盘见效也就是三年以后了。因为这套对弄起来估计最近一两年也不会有什么太大起色。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:19",
      "text": "到windows 11的时候还。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:21",
      "text": "会有windows，他说了不会windows 11了，你忘了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:24",
      "text": "所以将来也会有什么windows 10点10有seven.",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:26",
      "text": "对它会就是增量升级了。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:31",
      "text": "OKOK to go way to go.",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:33",
      "text": "所以这个事情讲到这里了，然后我们下面再讲一款硬件产品的新闻。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:38",
      "text": "很简单，就是在这个Cherry对cosa和海盗船Cherry下，海盗船对海盗船就是做内存的。那个海盗船跟Cherry联合宣布了一款新键盘，然后这个新键盘上搭载了我能用到搭载这个词，搭载了Cherry最新研发的秘密武器，就是Cherry red，Cherry红轴有了一款静音版本。如果你喜欢机械键盘的手，感到时候讨厌机械键盘那个class class的声音的话，如果你像我一样害怕在睡觉的时候敲键盘吵到女朋友的话，可以考虑入这一款。目前定价是159.99美元的全新的静音机械对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:28",
      "text": "OK所以它的特色就是静音。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:32",
      "text": "至少从公布的参数上来看，它的行程比红轴要短一点点，短了0.3毫米，应该是。然后力度和红轴是完全一样的。哼然后按下去没声音，就是这样OK.",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:45",
      "text": "他所以这里其实插播一下，之前有一些莫名其妙的原因。我把那个Cherry的应该是有多少？五种轴，还是六种轴。我数数红轴、白轴、青轴、黑轴，还有什么茶轴，茶轴我都买了一遍。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:06",
      "text": "What为什么。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:07",
      "text": "有些特别的原因，然后我都试了一下，其实倒也没有特别明显感觉，反而是我现在在一直在用的。跟你一样的那个就是老送我那个也就是KV pro two，还是挺top rate，那个手感还是挺好的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:25",
      "text": "我觉得重点可能是你得把每一个轴的键盘用上一个礼拜左右。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:29",
      "text": "然后才能实现这一点是吧？对，因为其实否则就好像实话说，我觉得按那些轴的感觉没有想象中那么好，可能是因为习惯了那个top rate这种感觉，去那个人OK可能感可能不是一个升级的感觉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:46",
      "text": "一不一样的主要感觉是主要的感觉是不一样，而不是我靠好很多。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:51",
      "text": "对对对，就都挺好的，但是觉得风格的不一样。然后你整个Cherry很奇怪，Cherry没有那个就ten keyless那种版本。Cherry对，Cherry官方的那个键盘它没有那个。你说Cherry自己做的，他没有，全部都是有那个。对，那个小数字键盘区，人家讨厌我不想用它，因为太太宽了，占那个什么中国人保守。对，然后我就特别喜欢那个pro 2，那个HHKB那个那个短短的，有时候也会怀念方向键之类的，真的是anyway。对，这个键盘售价多少钱？刚才讲的cher这个159.99就160刀，然后现在还是腿卧的状态是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:36",
      "text": "对，然后也不是非常好看。我要说但手感应该还不错。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:41",
      "text": "它是那种五颜六色的对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:45",
      "text": "好像对他有一个RGB版本。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:49",
      "text": "但是这个我觉得怎么说呢？我适合游戏玩家。",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:54",
      "text": "只能这么加。我以为你要说适合LGBT群体。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:58",
      "text": "你不彩虹吗？不是，我每次看那种就这种叫什么来着这种。专业键盘，这分两类，一种就是非常酷炫的，上次我之前用的那个那个dark那个牌子的，也是他那个各种酷炫的灯。其实对于我们这种写程序员来说，你搞那么酷炫干嘛我都不会看你，对吧？我们的键盘都搞无印无刻印的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:22",
      "text": "你肩膀上的字体搞那么。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:24",
      "text": "科幻感干嘛？对，没有用。但反正想想就每次看到那种RGB颜色背光的键盘，我老是觉得有一种洗剪吹组合的风格，我不知道你有没有同样的感受。给你们可能不追求的不同东西不一样，我觉得对，所以看你自己喜好了，我是不太喜欢这种花花绿绿的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:51",
      "text": "这款键盘其实的最好的搭配是一个叫做low cat，还有撸啊撸cats的的应该是ruby程序，就是ruby程序做的唯一件事情就是把你的那个终端的输出改成彩虹色的。就是靠一段话然后pipe到law cat，最终输出的效果就是一只彩虹色的牛。说了一段彩虹色的话，跟这个键盘蛮搭的，好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:25",
      "text": "我真的是醉了。OK, 我们终于在历时一个半小时之后进入今天的正题，并且本期的正题单切成单点。本期的正题是程序员。",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:38",
      "text": "的自程序员自我修养。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:42",
      "text": "听起来是非常水的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:44",
      "text": "一期是对，其实本期非常水的原因是我我根本没有时间准备，反正real很忙就不用说了。我也因为我在这宣布一件事情，就是接下来一期也有甚至两期我可能要跳票了。因为我父母要来德国待五周。对，然后要带他们去做一个grant to。以前欧洲的贵族的成男子在成年的时候，就是16岁的时候，都要去做一次开阔眼界的大旅游，叫做grand to，主要是绕着阿尔卑斯山转。然后现在这个公民怎么说资本主义发达之后，我们这种平民终于也有这样的机会了。所以就还是想要带大家好好逛一逛。",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:32",
      "text": "对，所以你是怎么只剩下我一个人跑了，是吧？那这个烂摊子不要说那么凄惨了，我来接好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:40",
      "text": "你可以去请西班牙当对。然后没有准备的原因，所以没有准备的窘况窘境就迫使我们不得不继续延续这个非常水的什么传统。然后你看我们已经非常有自知之明的把节目改成了中老年程序化。然后我们今这一期要谈的原因就是中年程序员的这个前列腺的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:11",
      "text": "又要大要逼掉吗？这也不用逼掉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:15",
      "text": "算了吧。对，其实这一期节目的主题是一个可以一直谈下去的问题，也就老生常谈的问题。首先我们的节目本身就会收到很多听众的反馈，比如说诸如此类的典型问题就是我想学编程，请问从哪入手？或者是我想学X语言，但是又又听他们说应该学Y语言，我应该哪一个？或者是我是学什么？现在几乎这接下来要说的这个专业必须非常慎重，否则就是黑了他们。我是学生物的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:58",
      "text": "我是学你为什么。",
      "speaker": "发言人1"
    },
    {
      "time": "01:28:00",
      "text": "要现在找不到工作？然后我想转行学编程养家糊口，请问我应该怎样入门？对如此类问题，不管是本节目还是在比如说知乎或者是啊程序员论坛上都会有人问起，我们从来没有做过正面的回答，然后也没有一个比较一个比较完整的时间去说这件事情。所以我们决定在这一期集中起来说一说这件事情。",
      "speaker": "发言人2"
    },
    {
      "time": "01:28:36",
      "text": "其实概括来说，本期的主题就是程序员之路。对，知道听起来非常的太高大了。对之路就是假如你想当一个程序员，或者是假如你已经是一个程序员，你你你应该从哪儿开始？你将来应该怎么走？算是一个开放性的话题，就从我们两个人的角度来讲。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:02",
      "text": "但这里要还是要先说明一下，特别是我是一个非常a typical非典型程序员，非非典员非典程序员非典型。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:14",
      "text": "对我觉得可能因为你看有些同有些听众连这个no hot feeling的都不不知道，我觉得还是不如先介绍一下你和我到底是的背景，或者是我们已经走到哪儿了这么一个statues description。你先来。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:37",
      "text": "我本科不是学这个的，你本科是学什么的？我学管理的要被鄙视，就简单的说是商科商学院的学生啊呀。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:53",
      "text": "对，我们可以把刚刚才那段话转述成，我是一个商学院的学生，然后现在我想要学编程养家糊口应该怎么做？",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:00",
      "text": "但是我可能跟问我就是我也是会像经常说到类似的问题。但我觉得跟他们的很大一个区别在于，我对CS编程这件事情是有兴趣的。然后我对这个计算机本身也是有挺大的浓厚的兴趣。所以才会导致说研究生的时候去选择读个这个感兴趣就好了。反正之前学的本科选专业的时候啥也不懂，选了个看起来还不错，其实并没有什么鸟兴趣的。你方向。",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:25",
      "text": "虽然。",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:26",
      "text": "也还可以，但是毕竟不是兴趣所在，我觉得还是有很大区别的。后来就做了这么一个事儿，然后也在拉拉杂杂的去做过一些跟这个相关的开发的工作也好。然后自己也就包括我们这个节目的一些后台的运营工作也好。然后自己日常也写一些脚本，也开发一些开源的，参与一些开源源的项目的开发，对这样这么一个过程。但是我觉得可能很本质的一点就是我学它的目的并不是出于我要用它来完成一个什么东西，或者说要我要急于找不到工作，养家糊口赚钱这种情况，我就纯粹出于兴趣。我觉得这个出发点不一样，导致后面的一些做法都完全是不一样的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:12",
      "text": "哼所以你后来是去读了一个在加拿大读了计算机科学的博士对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:21",
      "text": "研究生对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:22",
      "text": "博士这样对，所以你基本上是一个怎么说呢？半路出家，然后混到学院拍的这么一个转型过程。",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:33",
      "text": "其实就是很奇葩的一个过程。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:40",
      "text": "你的工作经历可以说吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:42",
      "text": "其实我工作已经很简单，就是知乎。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:44",
      "text": "了之后之后就不用。",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:47",
      "text": "之后就没什么特别那个的了。对，特别知名的讲，IPN算的话也可以写，也可以写算上。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:58",
      "text": "反正也在有限的时候去看那个电影。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:00",
      "text": "就是上学的时候也零星的接一些这种活，一个是要么写网站，写算法之类的东西都做，就还是挺杂的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:12",
      "text": "我介绍一下，我我是本科是本科的专业叫信息安全。基本上是一半是数学，是而且尤其是离散数学里面的那个数论密码学之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:28",
      "text": "所以其实这个不是对所有的工作其实挺好的吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:31",
      "text": "对是吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:33",
      "text": "好歹我们还在做相关。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:34",
      "text": "至少好吧，就反正学习先学这件事情给我最大的影响就是对这个头顶的星空以及那个大质数的因子分解有着深深的敬畏。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:50",
      "text": "所以你什么你你后来用什么SSH理解什么public key的时候，是完全没有障碍是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:56",
      "text": "对，那当然了肯定。反正这个专业一半是数学，另一半是通讯。对，有点奇怪。其实跟commit size ence没有太多的关系。就比如说什么commit science一些必修课，什么软件工程我都没有学过。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:10",
      "text": "这个不是开门必咳，是吗？等我一下下，我想是是是是是也是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:16",
      "text": "面向对象编程。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:18",
      "text": "我没有学过这个太好了，没有做起荼毒，这是好事。Lucky guy.",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:25",
      "text": "边缘里我倒是学了，但是学的不好。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:27",
      "text": "OK所以通讯那块你是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:30",
      "text": "学什么数电、模电、信号与系统。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:32",
      "text": "有学那个网络那块吗？就TCP那一块吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:35",
      "text": "TCPIP计算机网络也学了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:37",
      "text": "OK所以其实还是你看你基础还是蛮好的，这些我都是自学的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:41",
      "text": "OK那自学的还是比较印象比较深。没有，所以。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:47",
      "text": "我一直在想都是半罐子水。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:51",
      "text": "好了，我们不要互相谦虚，然后扣高帽anyway。然后本科学的新鲜学最后是个理学学士。Somehow someone我一直以为这个信息安全应该算工科，但最后得了一个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:03",
      "text": "理学学工科你得有那个你得去做了精工，焊了电焊了电焊，你这才拿工科的学位。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:11",
      "text": "我们专业有电工实习的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:13",
      "text": "这么奇怪。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:15",
      "text": "对我看看过收音机了好吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:18",
      "text": "好吧，那也算是一个往那个工科片那里刻了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:23",
      "text": "对，然后我大学毕业之后没有工作，直接去了直接来到德国念了一个叫通信与媒体工程的学硕士学位。然后听名字也就是通信和媒体，主要课程也是什么信号系统、然后媒体设计、交互理念，然后还有一些软课程，什么cross culture conflict management之类的课。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:53",
      "text": "这个怎么听起来像是一个商学要学的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:56",
      "text": "就有一些soft skill的课程是选修课，比如说什么教你怎么做PPT或者。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:01",
      "text": "是这种课。",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:03",
      "text": "这课其实很重要，就是我觉得很受益受益很很受益匪浅的一门课。首先你比如说课程会教你说一页上面不要有太多的字。对，然后你的设计要尽量简洁，要考虑到明亮和暗的时候，你非常漂亮的模板可能会看起来惨不忍睹。然后你在罗列那个boy points的时候，不要写完整的句子，而是要写keyword。对，然后你要你所有的细节都要用自己的话说出来，然后要要尽量有要尽量有组织良好的图片，然后永远不要回头去看你的幻灯片。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:46",
      "text": "所以其实说到这一点，我觉得这个反而是也顺便插一个话题。就是我看到因为国内很多现在有做这个技术会议，就是take conference。我觉得可能我看了国内的和像硅谷那边他们的对一个对比，就是我普遍来讲就不是就就总整体来讲像就是像欧美他这一块的，他们在talking就是讲这个是叫叫演讲的时候，还包括做这个slides。比如我们讲PPT的的时候，他的把握的会比国内的好很多。然后国内我觉得很多演讲者在这一块，就是演讲的基本，就公开场合讲话的基本的那些能力是很有欠缺的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:32",
      "text": "这是presentation skill，实际上是一个从小就要培养的。对的，不管你做人说话的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:37",
      "text": "就不管你做任何行业都需要做这个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:39",
      "text": "其实可能我这个是这跟教育有关的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:36:41",
      "text": "不，我觉得不管你做什么行业，你这个是我觉得这个是属于基础教育的一部分。后来我想了一下，其实我读商学院读了四年，后来我觉得唯一有用的两件事儿就是依旧归为一件事。就是怎么在公众场合，我或者在众人面前吹牛逼，可以面不改色进不去了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:02",
      "text": "能吹才会赢。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:04",
      "text": "对，然后后来不是很多人抱怨说，很多从中国大陆出生长大的程序员去到硅谷美的里面去，大家大公司里面或者很难越过某一个天花板。然后相反像什么印度籍的工程师，他就没有这个问题。我觉得很大一个程度上就在于你敢不敢用你那个假大洲中式口音的英文，在一堆白人面前吹牛逼。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:29",
      "text": "对，就有些人会把这个贵族归结为什么种族歧视。说上面说黄种人天生就有一个天玻璃天花板，这我承认这种现象也许在一定程度上就是英文不够溜呗。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:41",
      "text": "我觉得这个很简单。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:42",
      "text": "但其实还有很大一部分是成原因就是你根本就incompetent好吧？对，还有什么玻璃天花板，你在这个环境里面缺乏相应的软技能的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:52",
      "text": "短板太就只短板太明显。所以其实我们我来考虑一个，比如说我，如果其实商学院里面也有很多人，他是会有编程的需求的。比如说商学院用的最多的这个表格处理，对吧？因为那个数量少的时候excel也可以弄。但是你想象一下它最大65500三十六行35行没了，超过那个数量级怎么办？你还会access对吧？可以用写一些circle语句捣鼓，但是在做一些复杂的运算，就只能再想想学什么VVB。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:26",
      "text": "我以为你要说就有microsoft SQL server access importer之类的神器。没有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:33",
      "text": "大部分我觉得还是停留在VB。其实我觉得到VB或者是你说哪怕是操纵这个access，就是SQL语句那一块，已经是对于很多人来说，在生活中是大有用处的事情。但是你已经击败。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:49",
      "text": "了99%，全国98%的电脑用户。",
      "speaker": "发言人2"
    },
    {
      "time": "01:38:53",
      "text": "对，因为你只要你把这两个学好一点，我相信你在一个正常的商务场合上，因为我我当然我跟他解释说做商科这块我了也多一些，所以可能多一些。你做一些基础的数据分析，你可能就比别人强很多了。但是又有一种声音出现了，说我都做到那个层级了，我肯定找个小找个助理帮我干，对吧？也可以也不也可以不用自己写，但是你不还没到那个程度吗？到那个程度就不用听我们节目了，是不是没错？对，所以其实我觉得有一定这种literacy，就是program literacy这种技能，真的是会让你在芸芸众生中脱颖而出，成为老板里面最愿意干活，出活最多、干活最累、加班最多、工资最少的那一个。怎么怎么越听越越好像越不太对了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:41",
      "text": "这样对吗？OK anyway.",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:43",
      "text": "但至少出口多应该是个好事。我觉得特别是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:46",
      "text": "就是你生产率提高的话，你就可以有更多的时间来做自己的事情。",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:50",
      "text": "对你我之前听说我之前很久以前讲过一个故事。王老师在哪个节目里面讲，就是有一个朋友他就会学了这个酷学了这个VB编程，然后把他他日常要做的工作叫做自动化了，等于是比较全半至少半自动化了。然后发现一周五天的活，只要一天就干完了，剩下五天干什么？假装在工作，其实在做自己的事儿。那你看就你给自己省出了时间做自己的follow your heart的事情多好。对，就是不为别人为自己考虑，也要学一下编程。",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:22",
      "text": "没错，反正回到我在研究生的经历，这倒是千回百转。还是先把我的经历说完。本科研究生毕业之后，因为研究生的学业跟本科其实重合太多了，就有很多专业课我基本上就是看了看教材，然后去考试，所以很多时间都是在给教授打工。因为这样可以就至少不用去做一些体力的做打一些体力的工作，然后给教授做一些什么。比如说给那些学苦逼的机械设计的人做一个在线的auto c的模拟软件。这是另外一方面，也提反映出了没有盗版可以创造很多就业机会。就是你你不能让学生纵容学生说，你们是装个盗版。所以你只能你必须再提供一个在线的，可以让他们来来来模拟一些操作的版本。",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:26",
      "text": "这一类产品我有一个俗称叫做half s education product.",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:31",
      "text": "没错。对，然后这些东西在就是把我笑的那个玩意儿就给为我支付了很多游山玩水的费用。对，然后毕业之后赶上经济危机，所以做了两年不堪启齿的那个PHP程序员。",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:53",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:53",
      "text": "这也是黑历史，写写这个世界上最好的语言，写了两年。后来转去做了一段时间的数据挖掘，就是在反正就是一天到晚写SQL，是在一个市场调查公司，后来转去做博彩，做的是我用右脚，反正就是赌球了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:42:19",
      "text": "我终于承认这件事对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:21",
      "text": "做了一段时间的，java enterprise，那java意义的全称叫什么来着？Enterprise那种。对，这就是黑历史对吧？先PHP后这样我觉得人生已经没有希望了，还好你及时撤退了。对，还好及时撤退。然后现在在一家数据公司做集群操作系统来开发，用日常语言写的是python，就感觉还蛮爽。对，所以我们两个都是目前以程序员为业的同学，以同学为业主是对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:42:57",
      "text": "然后在这里要跟大家聊一聊怎样入门，以及怎样发展职业前景这么一个话题。先说怎样入门，我不知道你怎么想，就是我觉得所有的遇到的问题，或者说接触到的疑惑，基本上都可以集中为一个核心的需求。就是你要学编程到底是想要解决什么问题？有些人会想说我学编程是需要用特定的语言解决特定领域的问题。比如我是一个机械工程师，我需要学mat lab去去解决去去完成一些我手上的活。对。又比如说我是一个框子，我是一个计量分析师，对框子的全正式名称叫什么？",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:50",
      "text": "Quantitative analyst。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:53",
      "text": "对，就数据分析师。",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:55",
      "text": "是只是数量分析师。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:57",
      "text": "数量分析是对然后我必须学python，然后我要用python里面的一些特定的库来完成一些我的职业的工作，我觉得这是一个非常，这是所有学编程的需求里面最简单，也是最切实，也是最门槛低的一个。因为首先你的切实需求摆在那儿了，然后你也有一个你也完全不需要去面对选择什么的问题，因为你根本就没得可选，对吧？你全公司都有my tap，你不可能另辟蹊径说我要我要用别的。然后整个业界都在转向拍thon，你也不可能说我做块头，我偏要用一个没有人知道的一个别的东西。然后你这个业界里面的所有的to chain都非常成熟了，你所做的只是你所需要做的，是一步亦步亦趋的去去去学就可以了，这是最简单的一个。然后另外一个极端则是我学编程的需求是我要我觉得我的专业没有任何前景，我需要学编程混碗饭吃。因为我现在看到什么很多人去上一个培训班，上上两个月，然后就会找到一份什么IOS或者是android开发的工作。而且薪水还不错，八九千，比我这个读了四年，然后学了一个什么此处插入一个你不喜欢的专业强多了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:23",
      "text": "对吧？对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:25",
      "text": "又慎。或者说我要我要学一个，我要做马龙，我要去美的找工作，脱离这个万恶的美国的社会主义初级阶段。哼肾或者说我要写一个游戏，我有一个伟大的点子，我就差一个程序员了，但是又没有程序员愿意鸟我，所以我只好自己学程序，我要做什么什么，怎么说？有一句流行话，什么改变世界是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:53",
      "text": "哼。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:53",
      "text": "change。对我不要卖糖水的，我要去改变世界。",
      "speaker": "发言人2"
    },
    {
      "time": "01:46:00",
      "text": "所以其实从那个具体学习出发，可能会是一个比较好的业余程序员起步的路线，是吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:46:09",
      "text": "我觉得是这样。",
      "speaker": "发言人2"
    },
    {
      "time": "01:46:12",
      "text": "就因为里面这个坑实在太深了。你不可能说按照一个专业程序员那种从基础一步一步往前培训，那个周期太长。你等不到你看不到结果的时候，你可能已经放弃了。所以如果能够从你的实际需求入手，解决一些实际的问题，让觉得还小有成就，那么就可以给你带来持续的正反馈，才可能把这个事情坚持下去。",
      "speaker": "发言人1"
    },
    {
      "time": "01:46:35",
      "text": "对你不可能盯着一个最终的成果说，我看那样不错，我也想要那样。所以我要原来然后那个人那能那样是因为他会写程序，所以我也要会写程序，这是一个非常本末倒置的一件事情。我觉得就你能看到一个人通过小程序达到一些你做到一些你做不到但是又很想做的事情。他能够那他能够那样并不是他可以那样的动机，就这个意思不知道绕明白没有。但所以你也不应该以这种刻舟求剑的方法去去去学编程，因为他不是因为这个才学编程，它不是要想要达到今天的贾景浩的成就才学的编程。而是因为他学了编程，所以他才能有那今天的成就。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:26",
      "text": "对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:27",
      "text": "对，所以我同意你的说法，就是最好能从一些比较小事着手。比如说我有一个很我经常会拿出来说的事情就是我曾经帮朋友刷一个网站上的票，然后写写了一个脚本跑在服务器上。然后那个那个刷票的系统好像是每天早上定期给出一定量的票。然后黄牛们都是，我不知道黄牛怎么做的，黄牛可能手工刷的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:00",
      "text": "也许黄牛也有，黄牛怎么可能会手工刷呢？",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:02",
      "text": "早就被淘汰了。黄牛写代码啥就是怕。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:05",
      "text": "都是会写代码的。黄牛现在对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:08",
      "text": "然后黄牛们就会在这个票出来的大概30分钟之内全都抢光。然后我就写了一个程序，不停的去刷这个页面，然后成功的帮朋友刷到了票。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:24",
      "text": "你确定你刷的不是苹果店的天才？预约吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:28",
      "text": "当然不是了。谁会在认识我的情况下去找苹果店的天才。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:34",
      "text": "挖一刷你就可以了，是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:39",
      "text": "那个TPPT里面shadow Cooper曾经列举了什么？他觉得最无聊的三种职业。其他两个我忘了，反正有一个就是天genius bar。对，是人类上人类史上最恐怖无聊、没有希望的职业之一，就是jen spar。对，扯远了。就是我觉得比如说这样一个比较切实的，可以achieve的一个目标，就是你学编程了一个很好的切入点。",
      "speaker": "发言人2"
    },
    {
      "time": "01:49:12",
      "text": "对，这里就涉及到一个接下来一个很紧密的话，也就是你要根据你要解决问题去选择相应学习的工具。今天有人跑来问我，我刚学编程，我觉得学什么东西好？你都不告诉你的那个context，我怎么知道你学什么好，对吧？所以其实比如说这里的一个很多老师说的例子，就是说如果你是学商科的，你每天要跟office这套东西打交道，那你可能只要写的是visual basic，对，或者是更更远一点c sharp。因为现在它通用的组件也可以支持。真的吗？好像是这样子的，我们不太确定，但是让visual basic.",
      "speaker": "发言人1"
    },
    {
      "time": "01:49:46",
      "text": "我知道很久没有装过office.",
      "speaker": "发言人2"
    },
    {
      "time": "01:49:48",
      "text": "visual basic可能是一个更好的选择。因为你马上可以在你的生活中、工作中马上用的起来，对吧？然后如果你是学这个生物的，你可能要学这个拍方。因为可能很多这个或者你做机器人可能要去拍摄，很多这个包是相关的，可以在里面用起来。然后你会发现一些问题，也可以直接找到比较良好的解决方案。你就说再拼凑一下，就可以解决你眼前比较棘手的问题。然后你学统计学的，你看学那个叫什么R或者是这个SARS，SASS是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:50:21",
      "text": "对，SAS没有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:50:22",
      "text": "没SAS对size对，或者是那个R或者是也有拍这种的解决方案，叫那个叫牌子潘的对，有一个叫panda的，基于python的团队去解决方案，听说还不错，比R的应用范围要好一些。对，然后如果你学你学应用物理学这种东西，我不知道要学什么了。高能物理你要学C吗？C加加python.",
      "speaker": "发言人1"
    },
    {
      "time": "01:50:46",
      "text": "你是学python吗？33，我这跟高校有关，基本上是你这一波或者带你的教授用什么你就用什么，或者你们实验室用什么你就用。",
      "speaker": "发言人2"
    },
    {
      "time": "01:50:54",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:50:55",
      "text": "就是事实前提是你不是一个专业程序员。",
      "speaker": "发言人2"
    },
    {
      "time": "01:50:57",
      "text": "对吧？因为他们可以有很多现成的方法，虽然不一定从专业的眼光看合理或者是好用，但起码它是可以用的对对我相信。",
      "speaker": "发言人1"
    },
    {
      "time": "01:51:07",
      "text": "他们更多的可能还是用什么比较更更高级、更智能云的云。比什么mathematical之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:51:13",
      "text": "我my lab，或者学数学的话之类。",
      "speaker": "发言人1"
    },
    {
      "time": "01:51:16",
      "text": "我fram出的那个叫什么？是那个吗？就是mathematics mathematic该是吧？对，然后还有什么maple之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:51:25",
      "text": "对对对，比较商家的方案，就你自己去先都过一遍，然后选择一个你觉得还能够上手的方案，一同学下去。因为你知道一旦精通了，就学会了一个之后，你再学另外一个，它其实就可以触类旁通了。对，然后像这个金融的话，你学count，好像现在有一种开场做这个积累是就是不要求性能的分析。但是据我所知，你要去华尔街玩，好像还得学java或者C加之类的比较高级的对，比较高性能的语言才行。对，因为好像是这样，因为你要因为它那个高频交易，对这个延迟还是挺敏感的对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:52:03",
      "text": "我们应该请一个筐子来上一期节目，就是筐子其实是一个挺有意思的主题。不过人家都是一秒钟几百万上下。",
      "speaker": "发言人2"
    },
    {
      "time": "01:52:11",
      "text": "有什么用？在行的话，那1111次的可能5000块。",
      "speaker": "发言人1"
    },
    {
      "time": "01:52:17",
      "text": "对，没错，律师收费甚至一些很普通的，就不说什么你的行业相关的需要编程的东西。你在日常里面很有可能也能遇到需要编程解决的问题。比如说你养只猫，然后你要出去玩，你可能会选择把它托管给一个朋友，或者是托管给那个cat baby sitter。但反过来你也可以说，我为什么不自己用阿洛伊诺和家里服务器做一个定时喂食系统。就是每到比如说11点半开始，那个灯就会亮起来。这个时候猫过来如果踩一下按钮就会掉出猫粮来。然后你踩上三五次，猫就你再踩就没反应了。然后什么自动喂水，然后那个猫如果要出门的话。",
      "speaker": "发言人2"
    },
    {
      "time": "01:53:09",
      "text": "成为一个创客maker。",
      "speaker": "发言人1"
    },
    {
      "time": "01:53:13",
      "text": "对，可以把自己家改造成没错，对自己的猫很友好的这么一个智能喂猫机对吧？对，这也是一个很好的切入点不是吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:53:23",
      "text": "如果这些你都做不到的话，其实你可以先成为我们所谓一个叫做power user，知道吗？对，高级用户就姑且这么翻译，就是你会没错。你假设你不学编程，你把你手上的工具学精学透对吧？比如说office三件套，你把excel学的很精那也可以。因为这个事情顺便吐槽一下，因为之前我读那个商科，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:53:45",
      "text": "那我自己是一个挺高级的power you我自己自自己这么认为，会有一些很多取巧的方法去做事儿。我发现学商科很变态，你知道很多学像财务或者金融或者会计这一类，他会有很多计算的东西吗？他们竟然只教学生用计算器，我操。他得一步一步去把那个东西算，就用计算器。就比如考试，他说你带个计算器进去，那种就是那种叫什么来着？财经计算机。",
      "speaker": "发言人1"
    },
    {
      "time": "01:54:17",
      "text": "会有一些高级的可能可能在这种在这个context下面那个步骤比较重要。",
      "speaker": "发言人2"
    },
    {
      "time": "01:54:23",
      "text": "不但我的话是这已经这个年代了，你不是更应该强调这教会他们怎么使用excel吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:54:30",
      "text": "电子表格吗？对吧？是，但电子表格没有办法通过考试来考核。",
      "speaker": "发言人2"
    },
    {
      "time": "01:54:35",
      "text": "完全可以。你是说出题目的时候，你做哪一个，你可以去考核他，你可以去看他每一个表格里面那个公式是怎么写的吗？你知道它的过程步骤是怎么样子的吗？你考计算器算什么什么算算什么年代的事情，我觉得这个还是可能某些这种技术不那么敏感的专业也好，去院校也好，在这方面比较思维比较僵化的一个体。",
      "speaker": "发言人1"
    },
    {
      "time": "01:55:01",
      "text": "林语堂其实早就说过了，如果你把所有的学费，学生的学费凑起来用来买书，然后把所有学生们扔进图书馆里面，然后给他们几个解答疑难的问题的人，然后不要让他们的学费拿来去养什么校车，什么学校校长小老婆之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:55:24",
      "text": "还有一个行政大楼的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:55:27",
      "text": "对，逼着他们去读上四年书，其实最后的效果要比从大学出来好很多。这就你不没有办法让一个人，让一个在体制内的，其实教育也是一个体制内的东西。就是你没有办法让一个体制内的人主动的去说，我真的要让学生，我真的要培养学生有这种所谓的什么叫核心竞争力，一个很俗的词其实就大概这么意思，你没有办法去去期待他能够主动的去顺应潮流。而且他可能会说，我们是五年前才刚刚从算盘转换成计算器，好吧，你不要对我们这个要求太高了，反正你看计算机系都在，还在教turbo c对吧？不会了，期待没有吧？还有吗？现在国内还是有，这不是java的，有专业，我国内还是有很多专业在教pro c，我没有骗你。",
      "speaker": "发言人2"
    },
    {
      "time": "01:56:19",
      "text": "对，好吧？其实我觉得这个反而比较加法好，因为C至少没有OOP那套东西毒害大家。",
      "speaker": "发言人1"
    },
    {
      "time": "01:56:26",
      "text": "K教你如果要用枪打自己的脚，就一定要把腿轰掉。",
      "speaker": "发言人2"
    },
    {
      "time": "01:56:32",
      "text": "所以最后一个话题就是如果你对这个东西有兴趣，那么你是否要做一个职业的程序员呢？比如说像你一样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:56:43",
      "text": "我觉得这个是其实是一个非常需要你仔细考虑的问题。你要如果你是现在无业的一个人，然后你说我想要学编程养家糊口，我决定要拼下去了，我真的要金。虽然我前我24岁或26岁，但是30岁前半生都不知道在干嘛，然后对编程一无所知。但是迫于生计的案例，我一定要成为一个职业程序员，然后养家糊口。那那我觉得你可以放手去做。因为在所有的目前的职业培训里面来说，如果你不愿意去做一些比较实际而且市场非常大的，比如说什么砖瓦匠或者是水电工之类的。挖掘机其实非常对非常短缺的职业。如果你不愿意去做的话，出于某种奇怪的心理。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:28",
      "text": "哼sorry，然后就是蓝领。",
      "speaker": "发言人1"
    },
    {
      "time": "01:57:31",
      "text": "的要做一个。对你不愿意做蓝领的活，一定要去做一个伪白领的程序员的活的话，其实也是。我觉得你可以放手去做。对，嗯嗯，就像前面至少他的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:44",
      "text": "收入回报还是不错的对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:57:46",
      "text": "目前至少目前编程还是一个热钱流动的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:50",
      "text": "而且在中国这种奇怪的环境里面，你不会觉得会有什么你和别人跟你讲我是个程序员会有什么太大的问题。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:58:01",
      "text": "所以反过来，如果你有一个像样的职业，然后你仅仅是因为这个职业无聊或者是看不到希望，你想要转行做程序员，那我觉得这个成本其实是相当大。",
      "speaker": "发言人2"
    },
    {
      "time": "01:58:16",
      "text": "因为这个要分，如果你对这个东西是真的有兴趣的，你转行完全同意，我就不做转行。",
      "speaker": "发言人1"
    },
    {
      "time": "01:58:22",
      "text": "如果你有兴趣的话。",
      "speaker": "发言人2"
    },
    {
      "time": "01:58:24",
      "text": "什么什么都不是问题。",
      "speaker": "发言人1"
    },
    {
      "time": "01:58:26",
      "text": "如果你有兴趣的话，你早干嘛去了。如果你有兴趣的话，你早就应该像real一样，就是那个早早觉悟了，然后你你你在学那个无聊的专业的时候，就应该已经凭着自己的兴趣去去走向程序员之路。那你就不会站在这儿问这个问题了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:58:44",
      "text": "不是吗？对，不过说到这里，我可能马上就要告别这个所谓专业程序员这个行当了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:58:52",
      "text": "你要去做管理了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:58:53",
      "text": "那也不是了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:58:54",
      "text": "这个之后再你要去做风险投资人了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:58:58",
      "text": "这个只能之后再说了，因为现在还。",
      "speaker": "发言人1"
    },
    {
      "time": "01:59:00",
      "text": "没有你要去做项目经理了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:59:01",
      "text": "Oh no, PM不是比程序员被骂的对，就在任何一个公司里面骗不是被骂的最惨那帮人吗？这个活还是不太适合我。但我觉得我想了一下，可能以我这种资质，作为一个专业程序员估计也就那样了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:59:22",
      "text": "这句话各的我好疼。你的资质是什么意思？",
      "speaker": "发言人2"
    },
    {
      "time": "01:59:28",
      "text": "就是天资愚钝。",
      "speaker": "发言人1"
    },
    {
      "time": "01:59:30",
      "text": "我靠。",
      "speaker": "发言人2"
    },
    {
      "time": "01:59:30",
      "text": "对，就是觉得你坐一下，觉得就离那个行业里面这个翘楚来讲，真的是差太远了，还是不要做这个东西，就自取其辱好。这里面我觉得其实。",
      "speaker": "发言人1"
    },
    {
      "time": "01:59:45",
      "text": "有一个我心里不禁一阵悲凉，因为我觉得好像我的前途暗淡了。因为连这个资质比我不知道高到哪里去了的real同学都这么说，那我应该怎么办？",
      "speaker": "发言人2"
    },
    {
      "time": "01:59:55",
      "text": "可能就我觉得其实在那个所谓的客观训练，我觉得在这方面还是挺有挺决定你的这个前景的。对我我是这么觉得的，就是你越往后做，你会觉得之前学的那些基础的东西，就现在我我现在这么一个状态，就是说我想去也看一些更很感兴趣。但是因为之前没有接触过这种系统的教育，会觉得有东西看起来比较吃力的一些活儿。",
      "speaker": "发言人1"
    },
    {
      "time": "02:00:24",
      "text": "比如说编译原理。边缘也是要做到头发头发胡子都花白才能入门的东西好吗？",
      "speaker": "发言人2"
    },
    {
      "time": "02:00:33",
      "text": "没有我就举个例子，还有像那个什么，数据结构其实我也不算特别好。对，这其实属于属于要属于知道怎么玩，但用的是要查书那一类。",
      "speaker": "发言人1"
    },
    {
      "time": "02:00:48",
      "text": "大部分人都是这样的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:00:49",
      "text": "是吗？不是那些是不是那些大公司面试都是要现场黑板写的吗？",
      "speaker": "发言人1"
    },
    {
      "time": "02:00:54",
      "text": "那那是可以刷题的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:00:55",
      "text": "刷出来的。这样说到刷题，如果你要成为一个专业程序员，刷题好像是一个必备的话，必备的这个要做的事儿。",
      "speaker": "发言人1"
    },
    {
      "time": "02:01:04",
      "text": "刷题我觉得是找工作的时候要必备的事情。因为你要想进一些好一些的企业的话，刷题基本上是一个怎么说呢？有一种defector的验证你编程能力的一个测试。就是如果你去面试一个程序员的职位，然后对方不要求你做题的话，反而是可以的。就是你会你会怀疑说这个公司招到的程序员是不是真的会变成。",
      "speaker": "发言人2"
    },
    {
      "time": "02:01:28",
      "text": "虽然我觉我不知道你怎么想，但是我觉得大部分人都会觉得刷题的时候做的那些就面试的那些典型的题是非常不接地气，就脱离实际。然后在某种程度上是毫无意义的。因为你你为什么要手去手写一个quick salt，对吧？但他。",
      "speaker": "发言人2"
    },
    {
      "time": "02:01:49",
      "text": "不就是我的理解，他不就是考你对这种基本的这个算法的理解吗？至少初衷是这样子。",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:00",
      "text": "先但是我在没有帮助的情况之下，手中实现一个quick sort出来，到底能说明什么呢？",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:07",
      "text": "就是说明你对这个东西理解很透彻。",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:11",
      "text": "我觉得目前来目前能说明的其实就是我说阿凡提。",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:17",
      "text": "我那个是个现实的考虑，但是我觉得初衷还是好的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:21",
      "text": "是的，是就可以。就是你没有办法，最起码就好像高考一样，你找不到一个比他更好的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:26",
      "text": "更更有效的一个方法。我觉得对，因为通过这种方法就可以可以很简单。像我这种半罐子的这种家伙。",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:33",
      "text": "又来了。",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:34",
      "text": "因为确实是这样，我去刷题我不做，我不去刷题，我去面那种肯定死。",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:42",
      "text": "好吧，你看那个bw的作者不是也被不是也因为写出一个对那个事情也要说一下吗？写不出一个倒转二叉树的算法。",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:51",
      "text": "对，就是麦克上有一个很著名的包管理软件，就是home brew。然后它的作者好像是上个月还是前个月跑去google面试是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:03:01",
      "text": "然后被干掉了。然后google面试官说，好，你写一个转倒转二叉树。我不其实我现在到现在不太确定说是不是真的我所知道的transform 2叉树的那个算法，就是把把什么前序变成后续之类的，还是要把二叉树赛道，我不知道什么意思。对。",
      "speaker": "发言人2"
    },
    {
      "time": "02:03:22",
      "text": "所以我觉得如果照这种问题，就以google的这种面试变态著称的公司问出这种问题应该是蛮简单的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:03:29",
      "text": "网上有人的说法就是google的面试官觉得这个人太有名了，然后给他一个象征性的简单的题过场就把他招进来。",
      "speaker": "发言人2"
    },
    {
      "time": "02:03:37",
      "text": "我发现跟real一样是个半吊子。就被杀掉了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:03:44",
      "text": "对，然后他就去推特上rents，然后被人瑞推了好久。对。",
      "speaker": "发言人2"
    },
    {
      "time": "02:03:51",
      "text": "所以其实就是涉及到你要做一个职业程序员，你你你一定要在这方面，先不说它有没有用吧，但是你要做到刷掉是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:02",
      "text": "没错。",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:02",
      "text": "怎么才能不被刷掉？有什么好去处吗？",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:06",
      "text": "首先如果你要刷题的话，little code是一个比较好的去处。但是就好像little code现在开始收钱了，如果没没记错的话，好吧，就好像要注册还是要什么配才可以。",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:19",
      "text": "这也合理了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:20",
      "text": "然后其他的刷题的网站，其实你去搜一下什么interview question programme question，就可以找到一堆。",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:30",
      "text": "然后自己在家里一顿猛做着，跟高考之前做真题一样吗？",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:35",
      "text": "对，做之前你可能毫无头绪，但是做上几道之后你就会渐渐有有那种就渐渐能找到感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:45",
      "text": "这点我觉得可能中国学生还是挺挺适应这种方式的对。",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:50",
      "text": "我记得之前有一个你你做你做，后来我也开始做，但是没有做做到10做了十道题的方式。",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:57",
      "text": "叫什么欧文双人olen。他那个欧拉计划，我觉得他那个不是特别面向偏程序那一块，他面向于非典，他面向于数学那块多的太多，他参与数值计算的题太多。对，就数值计算还有一些数论的东西就会很多。就真的考什么算法其实是。",
      "speaker": "发言人1"
    },
    {
      "time": "02:05:17",
      "text": "非常少的对，然后用这个来去完成，其实是比较没有效率的。对。",
      "speaker": "发言人2"
    },
    {
      "time": "02:05:25",
      "text": "一种方法。对，但不过他那个做做出来一个题，对你的这个成就感？就像小时候做做完一道很机智的数学题的感觉一样。",
      "speaker": "发言人1"
    },
    {
      "time": "02:05:34",
      "text": "对，其实我觉得如果你你是本着要实现要熟悉一个语言的目的的话，你不妨在OA上面找一些比较难的题，然后用各种用你新学的语言去做一遍。对，可能还挺有用的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:05:48",
      "text": "然后如果你要想学一些实际上soft engineer的题，可能还是去了code这种东西会比较有效一些。当然也有这种做题，然后带做题，带面试，带招聘这种的网站。比如说像这个top coder这种。",
      "speaker": "发言人1"
    },
    {
      "time": "02:06:06",
      "text": "对，top coder是一个很有意思的网站，就是你你学了编程之后，你不知道能能来干嘛。你可以去上top code上看看你能不能帮助一些厂商解决一些比较实际的问题。但是我相信top coder上的问题，虽然我没有仔细的看过，还是并不是很适合初学者。",
      "speaker": "发言人2"
    },
    {
      "time": "02:06:24",
      "text": "的对他是就面需要一定的积累的才可以去做的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:06:29",
      "text": "对你得有个两三年经验才可以解决一些比较基本的问题。",
      "speaker": "发言人2"
    },
    {
      "time": "02:06:34",
      "text": "就或至少或者说至少你得写过一些中型的程序。Non trial on trial，你想理解上面的一些难度，好沉重的话题，我都从来没做过。",
      "speaker": "发言人1"
    },
    {
      "time": "02:06:49",
      "text": "我也没有你看。然后还有一些网站是就是你稍微会点编程就可以找到活，然后帮别人做。",
      "speaker": "发言人2"
    },
    {
      "time": "02:06:58",
      "text": "的低端功能。",
      "speaker": "发言人1"
    },
    {
      "time": "02:07:00",
      "text": "对，就是一个蓝领市场。就你有那种你可以去这个市场上注册一个账号，然后就有点像以前的码头工人等着出海上蹲在那儿。对，然后谁有活，然后过来找你那你你你给他一个时间上的估计和一个报价，或者说你看他的那个budget，然后估算他的工作量。对，然后帮他做。如果你做完的话，你就可以拿到钱，这样网站也是存在的。而且很多那些西方的有一个非常好的点子，就差一个程序员了的人会上这个网站来来来招聘那个愿意卖艺的人，你可以去试一试。",
      "speaker": "发言人2"
    },
    {
      "time": "02:07:43",
      "text": "当然这里面也有很大的坑，就是因为有些人是非常蠢的。他觉得自己有一个改变世界的点子，但是他只愿意付比如说500美元来完成这个点子，然后提了一大堆不切实际的幻想。比如说比很简单就是facebook那样就行了，诸如此类的一些要求，一些需求。然后你需要自己去排雷，你会说这个需求可能非常复杂，然后他是给的这个budget是根本做不出来的。但如果你贸然接了，最后没有做出来，那你就得到一个差评，然后你将来也不会有什么客户的。所以这里面是有非常潜在的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:08:21",
      "text": "让我想起大的坑，让我想起上次我们讲的那个笑话。我要是一个很简单的功能，我要我要功能就是我要做一个APP，然后能够在公园。",
      "speaker": "发言人1"
    },
    {
      "time": "02:08:30",
      "text": "里面拍照。对，然后要识别出照片上是鸟。",
      "speaker": "发言人2"
    },
    {
      "time": "02:08:34",
      "text": "对，搞死。其实说到职业程序员，就是假设你真的迈过了刚才我们说的那些各种的付出了各种辛勤努力，刷完了各种题，打完了各种怪，进入了一个大公司，坐在那工位上成为了一个码农，你有什么要注意的？",
      "speaker": "发言人1"
    },
    {
      "time": "02:08:56",
      "text": "做了三四年之后，我就我也不知道，我觉得我做了三四年之后，会有中南程序员的悲凉感。就是觉得会不知道自己接下来应该做什么，会往哪边走，对吧？除了因为欧洲是反正也没有什么阶级流动性。然后在这边做一个程序员，可以一直做到五六十岁，然后做到退休位置。因为对最近在买养老保险，然后那个养老保险上面也写了，2050年的时候，你可以拿到多少钱质量。你就会觉得好像后半辈子就这么定下来了，又不知道自己能做点什么。",
      "speaker": "发言人2"
    },
    {
      "time": "02:09:32",
      "text": "然后这个时候你就会需要一些职业规划方面的建议，对吧？我也不知道，我觉得这个时候你就需要去看一些书了。比如说什么how to be a dick，我有本书叫什么programmer how to success as a problem之类的一本书。就是教你做一些很简单的人生规划，然后教你做一些理财方面的，给你一些理财方面的建议，然后让你在有一个比较好的财务状况的前提之下，做一些你可能会想要做的事情。",
      "speaker": "发言人2"
    },
    {
      "time": "02:10:10",
      "text": "其实这都是有一个打岔的话题，也算是我们节目收尾的一个悬念。就是你作为一个职业程序员，你怎么去提高自己？因为其实我经常听到这么一个说法，就是说最先比喻，你觉得一个好的厨师会比一个普通的厨师好上1000倍吗？",
      "speaker": "发言人1"
    },
    {
      "time": "02:10:31",
      "text": "这肯定是不可能的对。",
      "speaker": "发言人2"
    },
    {
      "time": "02:10:32",
      "text": "但我这两天有个说法，就是说一个好一个顶级的程序员，他会比一个普通程序员好上1000倍。",
      "speaker": "发言人1"
    },
    {
      "time": "02:10:38",
      "text": "这是一个怎么说呢？我记得前两天好像在hacer news上看到一个批驳这种迷思的这个文章。就说其实真正意义上那个比所有人都比一般程序员生产力高上一个数量级的程序员，只是传说中存在的一个物种。然后即便你想往这个方向努力，其效果可能就是你也许你想要招到这样的人，或者是你想要成为这样的人，其效果可能也是不那么理想，就是不要太高估一个成员的生产力。",
      "speaker": "发言人2"
    },
    {
      "time": "02:11:16",
      "text": "就是这些unique太少了是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:11:19",
      "text": "对，真正的uni code只是只在传说中出现。",
      "speaker": "发言人2"
    },
    {
      "time": "02:11:22",
      "text": "但是我觉得这种人真的是存在的，而且数量不算少。我也就我也。",
      "speaker": "发言人1"
    },
    {
      "time": "02:11:27",
      "text": "选择相信unique.",
      "speaker": "发言人2"
    },
    {
      "time": "02:11:29",
      "text": "就是因为它的这个问题，就是说它这个基数大，这种非常就比例非常稀缺。但真的以上绝对数真的是不少的。而且非常不幸的是，他们都集中在那些大公司，很多是集中专业大公司，因为只有大公司才能够提供那么好的这个待遇，或者那么多的资源去供他去玩，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:11:50",
      "text": "而且很多这样的人，他是一上来就选对了职业，然后他就再也不换，对吧？他一上来选对了公司该怎么换？你像贝尔实验室那些人，他们在贝尔实验室做了一辈子，你对你随便挖一个人来，你都可以成就一番伟业。但是他们选择了在那个地方工作到死，对吧？对你你能怎么办呢？",
      "speaker": "发言人2"
    },
    {
      "time": "02:12:07",
      "text": "而且他们做出来的东西真的是可以数量正在提高生产力的。比如说大家过去还在写，很苦哈哈的写，就拿最近的例子，一直觉得react是个神作，就大家苦哈哈写MVC的时候，他来个这个东西，我靠这个牛逼对吧？确实提高了数量级的，提高了facebook可能很多员工的工生产效率。然后你再把那个员工的总数，你想有一两万人，对吧？算上就算一万人再写个代码，或者说有5000人在用这个东西的话，5000人的生产提高十倍，你想想这是多么恐怖的一件事情。",
      "speaker": "发言人1"
    },
    {
      "time": "02:12:42",
      "text": "对他就是那个公式里面的乘号。",
      "speaker": "发言人2"
    },
    {
      "time": "02:12:44",
      "text": "对吧？对他就是那个数量级的乘号，真的但我理解那件事，就是说一个好的程序员可能比一个普通程序员好1000倍，不在于说他自己的工作效率真的能比别人高1000倍，他能高到2倍、三倍、五倍已经不错了。但我理解是他的成果，他的初传的这个结果。因为被能够被用应用到更多的人上去，就会有这么一个大数的这么一个基底，是乘数效应。存完之后你发现，这个真的是就不只是1000倍的好，可能是1万倍10万倍的好。因为你那个基数大，越大的公司越就越大的公司越会为因为一些内部工具的改善，或者是一些基础的服务的提高而受益。这个真的是有有好几个数量级的提升的。但这也是可能是小公司很难和那些大公司竞争的一个原因，就是他没有那么多牛逼的人去给他做这么牛逼的事儿。对，所以就我之所以在想程序员职业程序员这条道路上可能没什么太大的希望了也是因为估摸着自己也成为不了1000 1000倍的效率的程序员。",
      "speaker": "发言人1"
    },
    {
      "time": "02:13:58",
      "text": "所以也许程序员就是自我修养的提高的一个方法，就是想要去成为这样的人，就是要努力提升自己。也许没有办法最终能达到那个级别，但是朝这个方向努力是毫无疑问是非非常有必要。",
      "speaker": "发言人2"
    },
    {
      "time": "02:14:17",
      "text": "好吧，今天的节目就唠叨到这里。",
      "speaker": "发言人1"
    },
    {
      "time": "02:14:21",
      "text": "对，怎么有种意犹未尽的感觉，就是好像还是可以说很多的，可能也跟我马上就要去去休假对心情有关。",
      "speaker": "发言人2"
    },
    {
      "time": "02:14:32",
      "text": "friday. 什么结构高考和你来念，我念了开头的。Ok感谢你收听。",
      "speaker": "发言人1"
    },
    {
      "time": "02:14:41",
      "text": "IP podcast笼络旗下的IT技术主题节目中软件程序员夜话AKA内核恐慌节目，我们号称扣，但是也没有干货，想听就听，不想听就别听。本节目的网址是IP note IOS来sh kernel panic p我们推荐大家使用podcast s客户端订阅节目，详情欢迎访问IPINOTIOS来是FAQ，欢迎你为本节目捐款，捐款地址是IP到来slash chrono panic slash的捐款金额随意，只要是八的正式数据就可以。捐款不会为你带来什么，不捐也不会失去什么。我们的口号是no hard feelings，同样也欢迎收听IPM podcast。网络旗下的其他几档节目来着，马上要变多了是吧？马上变九档10档1个.",
      "speaker": "发言人2"
    },
    {
      "time": "02:15:19",
      "text": "what's .",
      "speaker": "发言人1"
    },
    {
      "time": "02:15:20",
      "text": "OK anyway？现在已知的几档是跪节目埃踢公论，然后美食节目被知道流星通信，然后high story停播了，还说不说呢？",
      "speaker": "发言人2"
    },
    {
      "time": "02:15:34",
      "text": "就算停播了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:15:36",
      "text": "好吧，然后是阴影像还有太医来了没漏下，大概OK好吧，就这样了。感谢大家的收听，我们有可能是至少各位一个月后再见。你声音的话，对，也许要一个月，甚至六周之后，我也不知道。对。",
      "speaker": "发言人2"
    }
  ],
  "lab_info": {
    "summary": "本期播客来自IPM播客网络，主题聚焦在程序员的职业发展与编程技能的重要性。讨论者强调了学习编程不仅对职业发展有益，也是个人兴趣的拓展，它能有效帮助解决生活中的各种问题。同时，也触及了程序员面临的挑战，如持续学习的需求、职业规划，以及进入大型公司可能带来的局限性。通过具体的编程项目和个人经历分享，说明了编程在实际问题解决中的应用。尽管节目自称是哈佛级但未提供实质内容，还涉猎了播音员嗓音训练、主播声线保护、硬件与软件开发、游戏文化等多方面内容，呼吁听众互动并鼓励按八的倍数捐款。整体而言，节目内容丰富，涵盖了技术和文化等多个领域，体现了对程序员未来发展持乐观态度的同时，提醒持续学习和自我提升的重要性。",
    "qa_pairs": [
      {
        "question": "在播音员训练方面，你认为是否有必要给主播们普及一下如何训练自己的嗓音？",
        "answer": "是的，我们确实有必要向主播们普及一下如何保护和训练嗓音，特别是对于声线容易受伤的主播来说，应该学会使用丹田之气和金嗓子喉宝等方法。",
        "time": "00:00:46"
      },
      {
        "question": "你们节目是否打算在每一期更换口号？",
        "answer": "对，我们以后每一期节目都会更换一个口号，比如“足够强大的科技与魔法无异”。",
        "time": "00:02:10"
      },
      {
        "question": "是否有人提出关于“no hot feelings”这个口号的含义？",
        "answer": "有一位听众指出，“no heart feeling”这个口号的意思是不走心，来源于游戏portal中的一个炮塔被击败后说的“no hot feelings”。",
        "time": "00:05:12"
      },
      {
        "question": "听众鲁新针对上一期节目中关于Arduino开发板的部分提出了哪些反馈意见？",
        "answer": "鲁新在邮件中提到，尽管我们声明节目中关于开发板的内容只是纸上谈兵，但仍收到了许多恶评。其中，他指出了我们在性能方面的误解，并对单片机、Raspberry Pi以及阿里云等部分提出了详细的质疑和建议。",
        "time": "00:06:27"
      },
      {
        "question": "对于智能家电或智能硬件的真正智能在哪里？",
        "answer": "真正的智能主要在云端，而非终端设备。端设备往往只需要做简单的动作反应逻辑，复杂的数据分析和处理由云端服务器完成，这也是开源硬件如Arduino能够低成本快速量产并实现智能功能的原因。",
        "time": "00:11:38"
      },
      {
        "question": "为什么要用上一个半瓦的ARM芯片，而不是选择PC或Raspberry Pi？",
        "answer": "使用上一个半瓦的ARM芯片是因为其能提供更持久的电池寿命，比如装上两节AA电池可以使用两周以上，而Raspberry Pi可能无法做到这一点。此外，尽管PC性能更强，但对于一些微型ITX设备，ARM芯片设计的小巧和低功耗使其成为更适合的选择，尤其是当考虑到要通过电池供电时。",
        "time": "00:15:07"
      },
      {
        "question": "对于学习WE（Web Engineering）的同学未来就业前景如何看待？",
        "answer": "虽然目前很多学WE的同学转行CS，且工资较低，但接下来五年将是他们大放异彩的时期。因为传统的CS领域的工作已经做得比较饱和，而创客运动等方向需要更多WE同学参与，他们可以在这个领域展现优势。",
        "time": "00:16:08"
      },
      {
        "question": "智能门锁案例中，Edison（英特尔的智能硬件开发版）与Arduino相比有何区别？",
        "answer": "Edison集成了英特尔夸克双核处理器、WiFi模块和蓝牙模块，相比Arduino体积更小且功耗可能更高。它不仅在硬件接口上兼容Arduino，还提供了相同的IDE开发指令集，使得开发者可以轻松迁移。而智能门锁项目中，虽然Arduino也能实现类似功能，但Edison提供了更完整的硬件支持和无线连接能力。",
        "time": "00:17:24"
      },
      {
        "question": "家用服务器方面，Raspberry Pi和Intel NUC有何特点？",
        "answer": "Raspberry Pi适合做微型web server或作为多个Arduino控制器的协调器，但由于内存限制，在运行web server方面有限制。而Intel NUC则是一款小型机顶盒形态的设备，体积小巧，可直接挂在显示器背后作为主机使用，功耗低且无需风扇，是家用服务器的一个不错选择，尤其是对于追求静音和低功耗环境的家庭用户而言。",
        "time": "00:19:11"
      },
      {
        "question": "Edison与Arduino相比，在硬件开发上的优势是什么？",
        "answer": "Edison在硬件上提供了更完整的解决方案，无需额外添加多种模块即可实现复杂功能，同时它的ARM架构性能可能优于Arduino，并且支持多种内存配置和功耗选择，更易于集成各种外设。这使得Edison可以作为Arduino的一个更强大的替代品，特别是在需要更高性能和更多无线连接选项的应用场景中。",
        "time": "00:23:44"
      },
      {
        "question": "在听了我们的节目后，有听众表示受到了影响，做出了购买第一台Mac的决定，这是否说明节目对听众产生了积极的影响？",
        "answer": "是的，非常感谢听众的反馈，听了我们的节目后采取了这样的行动，并且提高了工作效率。这也体现了我们的节目能够启发和引导听众去做出一些改变。",
        "time": "00:30:53"
      },
      {
        "question": "你提到了“program is literacy”这个概念，能否详细解释一下这个观点？",
        "answer": "这个观点是说编程可能会成为新时代的基本技能，就像识字和读书一样重要。在现代社会，除了基本的文字沟通能力外，还需要学会与机器进行沟通，而编程正是解决这个问题的关键。",
        "time": "00:32:10"
      },
      {
        "question": "是否有实例证明编程在当今社会变得越来越重要了？",
        "answer": "美国总统奥巴马也曾经学习编写JavaScript代码，苹果公司在教育类别中推广编程内容，彭博商业周刊甚至用一期整版来谈论编程，并强调不懂编程就跟文盲一样过时。",
        "time": "00:33:31"
      },
      {
        "question": "彭博商业周刊是一本什么样的刊物？",
        "answer": "彭博商业周刊是一本华尔街人必看的专注于金融、股票等财经内容的刊物，但这次他们花了一期来专门讨论编程的重要性，可见其关注度之高。",
        "time": "00:34:08"
      },
      {
        "question": "最近关于沐瑶老师有什么新闻吗？",
        "answer": "沐瑶老师自己开设了一档名为“梦瑶的桌子”的podcast，内容涉及科学史和哲思类话题，听众可以在show notes中找到链接收听。",
        "time": "00:35:14"
      },
      {
        "question": "对于德国科隆游戏展（Gamescom）有什么值得关注的内容？",
        "answer": "科隆游戏展是一个大型游戏展会，今年的展会从6月持续到8月底，期间可以看到电子游戏产业的复兴趋势以及各种多媒体交互手段的发展。同时推荐大家去体验科隆的巧克力工厂，并尝试当地特色啤酒。",
        "time": "00:38:14"
      },
      {
        "question": "暴雪早期有一个项目叫blizz dota，后来为什么改名了？",
        "answer": "因为暴雪的这个项目侵犯了Valve拥有商标权的dota这个词，所以被迫改名为heroes of the storm。",
        "time": "00:46:12"
      },
      {
        "question": "地图编辑器是什么？",
        "answer": "地图编辑器是一种游戏开发工具，允许玩家自定义和修改游戏地图。例如，在魔兽争霸游戏中，玩家可以使用地图编辑器来设计和创建自己的地图，调整地图大小、地形、兵种等元素。",
        "time": "00:46:34"
      },
      {
        "question": "早期网吧环境是怎样的？",
        "answer": "早期网吧环境通常不联网，只有局域网，玩家会在网吧里进行对战游戏，如红警、星际等，并且会自己动手修改地图以满足游戏需求。",
        "time": "00:47:26"
      },
      {
        "question": "即时战略游戏中的“微操”是指什么？",
        "answer": "微操是指在游戏中对每个兵种进行精细的操作控制，比如指定每个兵的行动和技能使用，这对于游戏战略层面对玩家要求较高。",
        "time": "00:50:34"
      },
      {
        "question": "为什么暴雪在《英雄联盟》中设计了如此多的英雄？目前《英雄联盟》中新出了哪两位英雄？",
        "answer": "暴雪设计大量英雄是为了提供更多的角色选择和组合，让玩家在每场比赛中都能体验到不同的策略和战术，同时也能保持游戏的新鲜感和持久的挑战性。尽管记忆所有英雄技能和组合有一定难度，但正是这种多样性使得《英雄联盟》等MOBA游戏具有很高的重复玩价值和团队配合要求。最近，《英雄联盟》新出了两位英雄，一位是来自《魔兽世界》的武僧Cousin，另一位是来自《风暴英雄》的雷克萨斯。",
        "time": "00:53:10"
      },
      {
        "question": "在mobile游戏中，你有没有遇到过队伍配合特别好的时候？",
        "answer": "是的，在mobile游戏中确实会有那种连着几局遇到好队友，甚至能和配合默契的人组队，这种感觉就像找到了归属感，大家互相取长补短。",
        "time": "00:59:29"
      },
      {
        "question": "你为什么选择玩house而不是撸啊撸？",
        "answer": "我选择玩house是因为我是星际迷，对于hot系列有特别的感情，同时觉得玩撸啊撸没有激情的一个原因是英雄角色我都比较熟悉。",
        "time": "01:00:14"
      },
      {
        "question": "热游中的英雄购买装备和升级设计是否公平？",
        "answer": "我认为购买装备、花钱升级这一设计并不公平，它增加了许多无用的操作，并且在游戏性上有所损害。而在house中，英雄无需购买装备或点天赋，更注重技能升级。",
        "time": "01:00:56"
      },
      {
        "question": "在hot中是否需要像在dota或撸啊撸那样补兵来获得金钱？是否担心这种补兵设计会影响游戏体验？",
        "answer": "是的，在hot中也需要通过补兵来获得金钱，这是从最原始的dota版本继承下来的一个特征，但这一设计被诟病为不公平。我个人认为这种设计降低了游戏性，但对于一些玩家来说可能觉得很精妙。而在house中，玩家无需在意升级速度，因为所有玩家共享经验值，且装饰性物品的获取也较为简单。",
        "time": "01:02:26"
      },
      {
        "question": "对于最终幻想15、勇者斗龙等日式RPG游戏的看法是什么？",
        "answer": "我个人很难坚持玩日式RPG游戏，尤其是剧情设定方面，如果不理解日式文化和思想，很难跟随剧情发展。",
        "time": "01:06:18"
      },
      {
        "question": "对于微软开源iOS和Android应用在Windows上的技术（Island Wood）有何看法？",
        "answer": "微软开源Island Wood项目让人感到惊讶，它允许开发者用 Objective-C 编写代码，并通过微软提供的API调用硬件进行交互，从而实现iOS应用在Windows手机上的运行。这一举措旨在降低iOS开发者向Windows移植应用的成本，虽然提供的API部分有限，但无疑为跨平台开发带来了新的可能。",
        "time": "01:11:41"
      },
      {
        "question": "Oracle起诉Google这件事是什么情况？",
        "answer": "这个事情很不理解，就像Oracle的律师团队比其他业务团队还多一样，感觉很过分。",
        "time": "01:15:47"
      },
      {
        "question": "微软这次开源了哪些部分？i object c的编译器是否开源？",
        "answer": "微软开源了i object c的runtime和一个compiler，并非整个stack，stack包括编译器、runtime以及基于IOSAPI实现的标准库等组件。对，i object c的编译器是开源的，并且它是基于LL vm这套工具链。",
        "time": "01:16:15"
      },
      {
        "question": "微软的主要意图是什么？微软这场赌注的关键点是什么？",
        "answer": "微软的主要意图是鼓励开发者为Windows平台编写应用，通过提供移植工具和资源，降低开发门槛，希望以此促进Windows平台应用市场的增长。微软赌的是如果开发者遵循其步骤为Windows开发应用，并且Windows手机平台因此成长起来，就不会受到应用不足的限制，从而提升市场份额。",
        "time": "01:19:01"
      },
      {
        "question": "Cherry和海盗船合作推出的新款静音机械键盘有何特点？",
        "answer": "新款静音机械键盘搭载了Cherry红轴的静音版本，具有更短的行程（短了0.3毫米）和相同的力度，从而实现无声音操作，售价为159.99美元。",
        "time": "01:21:32"
      },
      {
        "question": "对于想要入行编程的人，应该如何开始？",
        "answer": "这一期节目主要讨论的主题是程序员之路，即探讨想成为程序员或已经从业的程序员应如何开始并规划未来的职业发展路径，但强调因个人兴趣和背景的不同，选择的起点和路径也会有所差异。",
        "time": "01:28:36"
      },
      {
        "question": "你本科的专业是信息安全，这个专业背景对工作很有帮助吗？你的信息安全专业具体包括哪些课程？",
        "answer": "是的，这个专业背景对很多工作都有所帮助，尤其是对于理解SSH和public key等技术没有障碍。专业的课程一半是数学，尤其是离散数学中的数论和密码学；另一半是通讯相关的课程，比如数电、模电、信号与系统以及TCPIP计算机网络等。",
        "time": "01:32:50"
      },
      {
        "question": "在德国读的通信与媒体工程硕士学位，课程内容主要是哪些？",
        "answer": "主要课程涉及信号系统、媒体设计、交互理念，还有一些软技能相关的选修课，例如跨文化交流管理、如何制作PPT等。",
        "time": "01:34:23"
      },
      {
        "question": "是否认为演讲技巧（presentation skill）在学习和工作中十分重要？",
        "answer": "非常重要，无论哪个行业都需要这种技能，它不仅是基础教育的一部分，对于在公众场合表达自己的能力和软技能提升也极其有益。",
        "time": "01:37:42"
      },
      {
        "question": "对于编程技能的学习，应该如何根据个人需求来入门？",
        "answer": "可以从实际需求出发，比如解决特定领域的问题，或者为了转行到技术行业而学习编程。如果是为了解决工作中的具体问题，那么学习相应语言和库会比较直接有效，并能带来正反馈，持续推动学习进程。而对于改变职业方向或实现个人项目的人来说，可以从这些实际需求入手，逐步进入编程世界。",
        "time": "01:42:57"
      },
      {
        "question": "黄牛们是如何刷票的？",
        "answer": "黄牛现在都是会写代码的，他们会编写程序，在票出来后的大概30分钟内把票都抢光。",
        "time": "01:48:05"
      },
      {
        "question": "你确定你刷的不是苹果店的天才预约吗？",
        "answer": "当然不是，因为谁会在认识我的情况下还找苹果店的天才预约。",
        "time": "01:48:28"
      },
      {
        "question": "学习编程的切入点应该是什么？如果我是学商科的，应该学什么编程语言好？",
        "answer": "学习编程的一个很好切入点是根据你要解决的实际问题来选择相应学习的工具。如果是学商科且每天要与office打交道，可以考虑学习visual basic或c sharp，因为它们支持很多通用组件，能直接应用在工作中。",
        "time": "01:49:12"
      },
      {
        "question": "对于不同专业的学生，应该如何选择编程语言？",
        "answer": "比如学生物的可能需要学习pascal或面向机器人相关的编程语言；学统计学的可以选择R或SAS；学应用物理学可以考虑C或C++以及Python。",
        "time": "01:49:48"
      },
      {
        "question": "对于非专业程序员，应如何选择合适的编程工具？",
        "answer": "非专业程序员可以选择一些现成的方法，不一定要求从专业的角度看合理或好用，但至少要能用起来，随着精通一门语言后，再学其他语言可以通过触类旁通的方式进行学习。",
        "time": "01:50:57"
      },
      {
        "question": "对于一些日常生活中需要编程解决的问题，比如智能喂猫机，怎么入手？",
        "answer": "可以先成为power user，即高级用户，精通手上的工具，例如excel等。若想进一步，可以尝试通过编程实现智能喂猫机。",
        "time": "01:53:23"
      },
      {
        "question": "是否有必要成为职业程序员？",
        "answer": "是否要成为职业程序员是一个需要仔细考虑的问题。如果是出于生计考虑或对编程有兴趣，可以尝试成为职业程序员；但如果只是为了转行，成本可能较大，应考虑个人兴趣和优势。",
        "time": "01:56:43"
      },
      {
        "question": "面试中要求手写算法题，比如quick sort，这是否脱离实际、无意义？",
        "answer": "虽然有些人认为这些题不接地气，但其实它们旨在考察求职者对基本算法理解的透彻程度。尽管在没有帮助的情况下写出quick sort并不能说明什么，但在一定程度上，这类问题的初衷是好的。",
        "time": "02:01:49"
      },
      {
        "question": "那么刷题对于求职者来说重要吗？如何高效地进行刷题练习？",
        "answer": "非常重要，如果不进行刷题训练，很多求职者在面试时会表现不佳甚至无法通过。可以去一些网站如little code进行刷题，虽然现在部分需要付费注册。此外，通过搜索interview question programme question也能找到很多刷题资源，模仿高考前做真题的方式，逐步提高并找到做题的感觉。",
        "time": "02:02:34"
      },
      {
        "question": "对于初学者来说，哪些资源比较适合提高编程技能？",
        "answer": "初学者可以通过一些面向非专业程序员和数学背景的网站，如欧拉计划，来做一些数值计算和数论相关的题目。另外，对于想要学习实用型编程题的初学者，可以尝试code面试网站或者top coder网站，不过top coder可能需要一定的编程积累才能应对基本问题。",
        "time": "02:06:06"
      },
      {
        "question": "在职业程序员道路上，除了刷题外，后期发展需要注意什么？",
        "answer": "在做了几年程序员后，可能会面临职业规划困惑，建议阅读相关书籍学习如何成功规划职业生涯和理财，以保持良好的财务状况并尝试更多可能性。",
        "time": "02:09:32"
      },
      {
        "question": "顶尖程序员是否真的比普通程序员好上千倍？",
        "answer": "这种说法虽被批驳，但确实存在一些顶级程序员，他们的工作效率和成果影响力可能远高于普通程序员，他们的工作可以对大量人群产生乘数效应，提高整个团队甚至整个公司的生产力。尽管很难达到顶尖水平，但努力提升自己朝这个方向努力是非常必要的。",
        "time": "02:13:58"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "IT技术主题娱乐节目中老年程序员夜话",
        "summary": "本期节目中，主播们讨论了播音员嗓音训练的问题，分享了自己对动画《飞出一个未来》的喜爱，以及对星际争霸游戏的讨论，包括游戏难度、购买决策和游戏剧情的感受。他们还提出了一个想法，每期节目更换不同的口号增加趣味性。此外，他们也讨论了听众反馈，但对于具体内容未展开详细讨论。"
      },
      {
        "time": "00:04:48",
        "title": "听众反馈与误解纠正",
        "summary": "本期节目首先解释了“no heart feeling”的含义，并分享了其来源——游戏《Portal》中的炮塔台词。随后，讨论转向了听众反馈，特别是关于上期节目的一些负面评价和错误指正。尽管节目团队预见到可能的批评并提前声明，但仍然收到了多封邮件，指出了节目中的错误和误解，尤其是在芯片性能和开发板讨论方面的误区。团队承诺虚心接受所有反馈，并表达了对听众热心反馈的感激。"
      },
      {
        "time": "00:08:16",
        "title": "开源硬件和单片机在智能设备中的应用及优势",
        "summary": "讨论集中在开源硬件和单片机，特别是阿杜伊诺和ESP8266在智能设备中的角色。强调了单片机并非以高性能为主要考虑，而是注重低功耗和开放的开发环境，适合于嵌入式产品如智能家居。特别提到阿杜伊诺的低成本和开源特性，使得智能设备的开发变得简单且成本低廉。同时，指出了真正的智能和复杂的数据处理是在云端完成的，端设备只需要进行简单的数据采集和反应，类比为神经末梢和大脑的关系。此外，还讨论了Raspberry Pi的定位和功耗问题，与阿杜伊诺相比，它更像是一个迷你PC而非单纯的控制芯片。"
      },
      {
        "time": "00:13:41",
        "title": "探讨智能设备与未来家居的可能性",
        "summary": "对话中讨论了智能设备在家居中的应用潜力，特别是无需复杂运算即可实现的功能，如自动开关窗装置与煤气泄漏探测。同时，指出目前市场上对于硬件工程师（WE）的需求趋势，强调了硬件项目在实现商业价值方面的优势。还提到了Edison开发板的功能与应用，显示了硬件和软件结合在智能设备开发中的重要性。"
      },
      {
        "time": "00:18:19",
        "title": "探讨Edison对Arduino的影响及家用服务器选项",
        "summary": "Edison的发布使得Respire Pie项目显得尴尬，因为它在性能上超越了Arduino，且在不自带WiFi和蓝牙模块的情况下显得无意义。Edison与Arduino在开发指令上兼容，使得Arduino开发人员可以轻松过渡到英特尔生态系统。对话中还讨论了使用Arduino制作智能门锁的可能性，以及通过添加WiFi模块和手机APP控制来实现的功能。此外，讨论还涉及了如何选择家用服务器，包括使用Respire Pie、旧服务器以及英特尔NUC作为家庭数据中心的方案，考虑了性能、噪音和功耗等因素。"
      },
      {
        "time": "00:23:43",
        "title": "比较Edison与Raspberry Pi的性能及应用",
        "summary": "对话中讨论了Edison作为一站式的解决方案，与Raspberry Pi相比需要搭配多种蓝牙模块和外挂设备来实现复杂功能。Edison采用英特尔的32纳米制成的夸克双核处理器，非X86架构，主频400MHz，支持DDR380内存，TDP功耗约2.2瓦，表现出比Raspberry Pi更好的性能。同时，Edison的价格适中，十几美元一个，并有各种starter kit配套，使得其在开发模式和针脚兼容性上可作为Arduino的完全替代品。另外，还提到了基于Arduino完成的复杂项目，如四轴飞行器控制项目。"
      },
      {
        "time": "00:26:58",
        "title": "探讨开发板的定义及其多样性",
        "summary": "对话中提到了Intel Edison开发板和清华的uCore操作系统移植项目，强调开发板概念的广泛性，从小型的仅有IO引脚的板子到包含复杂硬件解码编辑器的大规模设备，以及主控芯片可能是DSP或FPGA的非传统开发板。讨论还涉及了没有实际开发经验时对开发板的理解难度，以及对于开发板定义的争议，例如Raspberry Pi是否应归类为智能硬件而非开发板。这一讨论展现了对开发板定义的不同观点，以及这一主题可能引起的争议。"
      },
      {
        "time": "00:28:36",
        "title": "听众分享对计算机和编程的新认识",
        "summary": "一位来自哈佛大学但不愿透露姓名的听众，通过两封信表达了他对计算机和编程的新见解。起初，他将计算机比作蒸汽机，后来意识到计算机的重要性堪比文字和造纸，能够直接将数学思想在现实世界中实现。他还提到了算法对代数理论的优化，将bug视为逻辑问题，并认为编程能够实现思想、哲学甚至美学的复制和推广。通过一个节目，他意识到了编程的这一重大价值，并由此购买了第一台Mac，显著提高了工作效率。"
      },
      {
        "time": "00:31:24",
        "title": "编程成为新时代基础技能的讨论",
        "summary": "对话中讨论了编程在现代社会中的重要性，将其比作与读书写字一样的基础技能。提到了美国的'编程即领导力'运动和奥巴马学习编程的例子，以及苹果公司和彭博商业周刊对编程的推广。强调了在计算机普及的今天，与机器沟通的能力变得越来越重要。"
      },
      {
        "time": "00:35:14",
        "title": "沐瑶老师开播客与科隆之行",
        "summary": "沐瑶老师推出了一档名为《梦瑶的桌子》的播客，内容涉及科学史和哲思，与他之前的形象有所不同。此外，讨论了科隆的活动，包括科隆游戏展（Gamescom）和巧克力工厂的访问，以及科隆啤酒的推荐。同时，也提到了科隆的地理位置和当地特色，如科隆大教堂和4711香水。最后，对近年来电子游戏产业的复兴进行了反思，探讨了移动游戏对传统游戏产业的影响。"
      },
      {
        "time": "00:40:32",
        "title": "探讨MOBA游戏的发展和不同版本",
        "summary": "对话涉及了MOBA类游戏，特别是'撸啊撸'（League of Legends）、'刀塔'（Dota）和'风暴英雄'（Heroes of the Storm，简称HOTS）的发展历程和它们之间的联系。提到了'刀塔'最初是基于'魔兽争霸3'的一个自定义地图，后来分别发展出了Dota 2和League of Legends两个独立的游戏。同时，也谈到了暴雪推出的'风暴英雄'，该游戏整合了暴雪旗下多个游戏系列的角色。此外，还提到了MOBA游戏的普及和影响力，以及各游戏之间的竞争和模仿。"
      },
      {
        "time": "00:46:34",
        "title": "即时战略游戏地图编辑器与游戏发展",
        "summary": "讨论集中于即时战略游戏中的地图编辑器，其允许玩家创建自定义地图，改变了游戏体验。早期的网吧环境中，玩家通过调整地图来优化游戏体验，如调整资源分布和地形，以适应特定的游戏策略。对话还提到了游戏中英雄单位的概念，以及即时战略游戏向更加注重微管理和策略深度的演变。最后，讨论了即时战略游戏的未来发展，包括对更加纯粹的即时战略和微管理游戏的区分。"
      },
      {
        "time": "00:51:39",
        "title": "探讨游戏《风暴英雄》中新英雄及游戏性",
        "summary": "对话中讨论了《风暴英雄》最近加入的新英雄，包括来自不同游戏世界的角色，使得英雄总数达到五十多位。发言者表达了对于游戏不断增加新英雄的看法，认为这增加了游戏的多样性和挑战性，但也带来了记忆和策略组合上的困难。此外，还提到了与其他游戏（如撸啊撸和DOTA）的比较，以及游戏设计的逻辑，即通过增加英雄来提供新鲜感和挑战，满足不同玩家的喜好。"
      },
      {
        "time": "00:55:30",
        "title": "MOBA游戏的特点与团队合作的重要性",
        "summary": "MOBA游戏，如撸啊撸（通常指《英雄联盟》），允许玩家通过符文系统和购买物品来定制英雄属性，提升游戏体验。这些游戏强调了玩家之间的团队配合，需要考虑角色选择和战术策略，以取得胜利。与即时战略游戏不同，MOBA游戏中的个人成长和策略选择更为灵活，每场比赛后重新开始，增加了游戏的不确定性和新鲜感。同时，MOBA游戏也暴露了玩家在遇到挑战时可能产生的负面情绪，如抱怨队友，凸显了人性在虚拟世界中的体现。玩家在这些游戏中的体验可能因队友的质量而有很大的波动，优秀的团队配合能带来强烈的归属感和胜利的喜悦。"
      },
      {
        "time": "00:59:58",
        "title": "从游戏选择看个人偏好与社区归属感",
        "summary": "对话者表达了对不同游戏的个人偏好，强调了自己作为星际迷对《星际争霸》（hots）的偏好，主要是因为游戏内包含自己喜爱的角色。同时，他对比了《英雄联盟》（撸啊撸）和其他游戏，指出自己不玩《英雄联盟》的原因是缺乏对其中角色的熟悉感和游戏机制的个人认同，比如不需要购买装备和加点的设计。他还提到了对《魔兽世界》新资料片的兴趣，展现了对暴雪游戏的深厚情感和对青年一代游戏选择的观察。"
      },
      {
        "time": "01:04:36",
        "title": "网络游戏和日式RPG的探讨",
        "summary": "对话涉及了对网络游戏《魔兽世界》（俗称山口山）及其资料片的讨论，提及了游戏等级的提升和其作为网络游戏的持续吸引力。此外，还谈到了日式RPG，如《最终幻想》系列，以及个人对这类游戏的接受度问题，认为理解日式文化和思维对于跟随剧情非常重要。最后，对话转向了电影《像素大战》（Pixel），以及对网络游戏和日式动漫的个人看法。"
      },
      {
        "time": "01:08:18",
        "title": "微软开源技术促进iOS和Android应用在Windows Phone上的运行",
        "summary": "微软最近继续其开源潮流，开源了使iOS和Android应用能在Windows Phone上运行的技术——Island Wood。这个项目在GitHub上以MIT License开源，标志着微软在推动应用跨平台兼容性方面迈出的重要一步。Island Wood主要分为两部分：一个编译器和一个运行时环境，允许Objective-C编写的程序与微软硬件交互，并在Windows Phone上运行。此举旨在降低iOS开发者将应用移植到Windows平台的成本，并提供与iOS API相似的替代API，减少移植过程中的障碍。"
      },
      {
        "time": "01:13:06",
        "title": "微软对iOS API的兼容实现及法律问题探讨",
        "summary": "对话中讨论了微软尝试通过提供兼容iOS API的工具，以促进开发者为Windows平台开发应用。特别关注了API兼容性与法律问题，引用了Oracle诉Google案来探讨API是否受专利保护。此外，还讨论了微软开源的部分组件，以及对未来Windows应用生态的期待和挑战。"
      },
      {
        "time": "01:20:37",
        "title": "Cherry与海盗船合作推出新款静音机械键盘",
        "summary": "Cherry和海盗船联合推出一款搭载Cherry最新研发的静音红轴的机械键盘，针对那些喜爱机械键盘手感但又担心声音影响他人的用户。这款键盘定价159.99美元，特色是其静音设计，轴体行程比普通红轴短0.3毫米，力度保持一致。此外，讨论了Cherry不同轴体的手感差异及个人偏好，提到Cherry官方键盘普遍带有小数字键盘区。最后，对键盘的外观设计和RGB版本表达了个人观点，同时提到了一个能让终端输出变成彩虹色的Ruby程序，与这款键盘颇为相搭。"
      },
      {
        "time": "01:25:25",
        "title": "探讨程序员职业道路",
        "summary": "本次讨论主要围绕程序员的职业发展和自我修养展开，特别关注中年程序员面临的挑战。由于准备时间不足，主讲人采用轻松的口吻，探讨了从学习编程的入门方法到职业转型的建议。此外，主讲人还分享了个人即将陪伴父母旅行的计划，暗示未来几期节目可能会暂时停更。整体上，本次讨论既包含对程序员生涯的深刻洞察，也透露出主讲人的个人生活动态。"
      },
      {
        "time": "01:29:02",
        "title": "非典型程序员的转型经历与学习编程的心路历程",
        "summary": "本次对话中，两位分享了各自从不同背景转型到程序员的经历和心路历程。一人本科学习管理，对计算机编程有着浓厚的兴趣，因对CS编程感兴趣而选择进一步学习。尽管缺乏直接相关背景，但其通过自学、参与开源项目等方式，逐步进入编程领域，并强调了兴趣的重要性。另一位本科专业为信息安全，基础扎实，通过在德国的学习，进一步深入到通信与媒体工程领域。对话还涉及了关于技术演讲与展示技能的讨论，指出这一技能在技术领域的重要性。"
      },
      {
        "time": "01:36:41",
        "title": "软技能与编程能力在职场中的重要性",
        "summary": "对话者分享了其对于软技能，特别是公共场合的表达能力以及编程基础在职业发展中的重要性见解。他提到，尽管在商学院学到的大部分知识可能并非直接应用于工作，但学会如何在众人面前自信地表达自己的观点是极其宝贵的。此外，他还强调了基础编程技能，如使用Excel、Access和学习VB等对于提升工作效率和个人竞争力的重要性。通过分享个人职业经历，包括从PHP程序员到数据挖掘再到数据公司工作的转变，对话者展示了持续学习和适应新技术的重要性，以及这些技能如何帮助他跨越职业发展的障碍。"
      },
      {
        "time": "01:42:56",
        "title": "编程学习入门及职业发展探讨",
        "summary": "对话内容涉及如何入门编程及其职业发展前景。首先，强调学习编程应解决实际问题，满足特定职业需求，如机械工程师学习Matlab或数据分析师学习Python。其次，对于非专业背景的人来说，可能出于职业转型或兴趣驱动，如希望通过学习编程从事iOS或Android开发，或者开发游戏来实现改变世界的梦想。建议从实际需求和小目标入手，通过解决具体问题来持续获得正反馈，从而保持学习动力。最后，通过帮朋友刷网站票的例子说明了编程解决实际问题的可行性，强调了从实际需求出发学习编程的重要性。"
      },
      {
        "time": "01:49:12",
        "title": "选择编程语言的智慧：根据实际需要学习",
        "summary": "对话强调根据个人所处的领域和实际需求来选择合适的编程语言进行学习。例如，商科学生可能需要学习Visual Basic或C#来处理Office相关工作；生物学或机器人学领域的学生可能需要学习Python及其相关库，如Pandas，以解决具体问题；统计学学生则可能选择R语言或SAS。此外，对于应用物理学等特定领域，学习C或Python可能是更合适的选择。同时，对话也指出对于金融行业而言，Java或C++等高性能语言是必要的。最后，讨论了即使在非技术领域，掌握如Excel等工具的重要性，并批评了教育体制在技术教学方面的滞后。"
      },
      {
        "time": "01:56:29",
        "title": "转行程序员的思考与挑战",
        "summary": "对话内容涉及了对是否转行成为程序员的深入思考，包括考虑个人兴趣、生计需求以及职业前景。讨论了对于无业者和有稳定职业者转行的差异，强调了兴趣和市场需求的重要性。同时，也分享了个人对于编程学习的体验，包括面对挑战和基础学习的难点，以及刷题在求职过程中的必要性。最终，表达了对个人资质和职业发展的深刻反思。"
      },
      {
        "time": "02:01:27",
        "title": "刷题和面试准备的实用性探讨",
        "summary": "对话中表达了对刷题和准备典型面试题目的实用性质疑，认为它们脱离实际，尽管承认这种做法的初衷是测试基本算法理解。讨论了刷题在面试准备中的必要性，以及通过刷题提升解决问题的能力。提到了一些刷题网站和资源，如little code和top coder，讨论了它们对不同层次程序员的帮助。同时，指出了通过刷题学习新语言和解决实际问题的重要性。"
      },
      {
        "time": "02:06:48",
        "title": "程序员的职业发展与挑战",
        "summary": "对话讨论了程序员通过在线平台接项目的情况，指出这类工作中存在的风险和挑战，比如客户可能低估项目难度和预算。随着职业发展，程序员可能面临中期职业困境，不知道未来发展方向。对此，建议进行职业规划和财务管理学习。此外，讨论了顶级程序员的生产力可能远超普通程序员，但同时强调了个体贡献与团队、公司规模之间的关系。最后，分享了对程序员职业道路的看法，认为尽管成为顶尖程序员的机会有限，但提升自我仍是重要且必要的。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [],
              "content": "节目名称：IPM podcast网络旗下IT技术主题娱乐节目"
            },
            {
              "children": [],
              "content": "节目特色：号称哈佛，但内容轻松，意在吸引听众而非专业干货分享"
            },
            {
              "children": [],
              "content": "推荐：使用podcast客户端订阅，网址：IPN dot LI"
            }
          ],
          "content": "主题节目概览"
        },
        {
          "children": [
            {
              "children": [],
              "content": "技术讨论：涵盖编程、硬件开发、游戏开发等话题"
            },
            {
              "children": [],
              "content": "听众反馈：积极回应听众邮件，包括技术问题解答和意见交流"
            },
            {
              "children": [],
              "content": "特别关注：编程的重要性，未来技术趋势"
            }
          ],
          "content": "节目内容与讨论"
        },
        {
          "children": [
            {
              "children": [],
              "content": "编程语言：讨论了编程语言选择，如Python、JavaScript的使用场景"
            },
            {
              "children": [],
              "content": "移动开发：分析iOS和Android开发的差异与选择"
            },
            {
              "children": [],
              "content": "开源项目：鼓励参与开源项目，提升技能并贡献力量"
            },
            {
              "children": [],
              "content": "未来技术：人工智能、物联网、云计算等技术趋势"
            }
          ],
          "content": "行业趋势与展望"
        },
        {
          "children": [
            {
              "children": [],
              "content": "程序员之路：从入门到精通，面临的挑战和成长路径"
            },
            {
              "children": [],
              "content": "学习资源：推荐书籍、在线课程和社区资源"
            },
            {
              "children": [],
              "content": "技术分享：鼓励分享自己的技术经验，参与技术社区"
            }
          ],
          "content": "自我修养与成长"
        },
        {
          "children": [
            {
              "children": [],
              "content": "访谈嘉宾：邀请行业专家、开源项目贡献者分享经验和见解"
            },
            {
              "children": [],
              "content": "互动环节：听众提问，嘉宾现场解答"
            }
          ],
          "content": "嘉宾与访谈"
        },
        {
          "children": [
            {
              "children": [],
              "content": "职业发展：关于成为职业程序员的建议，如何保持学习和成长"
            },
            {
              "children": [],
              "content": "技术选型：在技术栈选择上的建议，如何保持技术的前瞻性"
            },
            {
              "children": [],
              "content": "心态调整：面对编程挑战时，如何保持积极心态"
            }
          ],
          "content": "行业建议与心得"
        }
      ],
      "content": "IT技术主题娱乐节目摘要"
    }
  }
}