{
  "pid": "5e284e0c418a84a0462693e4",
  "eid": "5e84c3ac418a84a0462df8fb",
  "title": "41. 一辈子做技术",
  "task_id": "kvjony7me26enlx3",
  "transcription": [
    {
      "time": "00:00:00",
      "text": "As we are internal panic.",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:02",
      "text": "the whole system just crash.",
      "speaker": "发言人2"
    },
    {
      "time": "00:00:15",
      "text": "您正在收听IPM podcast，网络旗下的IT技术主题娱乐节目内核恐慌。我们号称哈利core，但是也没有干货，想听人听，不想听就别听。本节目的网址是chino panic dota 5。我们推荐大家使用podcast客户端订阅节目，详情请访问IP note LI flash FAQ。",
      "speaker": "发言人2"
    },
    {
      "time": "00:00:41",
      "text": "欢迎你为本节目捐款，捐款地址是kero panic dolt AFM slash的捐款金额随意，只要是八的正常数倍就可以。捐款不会给你带来什么，不捐也不会让你失去什么。我们口号是今今天忘了准备怎么办，好吧，继续know hard feelings。你知道overwatch里面有一个德国的角色，然后那个watch里面每个人都有一句台词，然后你可以选这个catch free是什么？然后那个德国人的catch face就是catch phrase。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:23",
      "text": "感觉是一个什么，plays hold。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:27",
      "text": "没错，下次我们就说我们的口号是place so的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:33",
      "text": "刚刚说到那个overwatch，我觉得有个事情还是有必要说一下的。这个是发生在上个月底的事情，5月23号的事情，广州工业大学，有一个校园里面有发生一个什么抢劫，然后就好像是抢包那种。你知道，然后有两个学生就骑着那个车摩托车去追那个那个抢匪了，然后就他们出现那个撞车的事故，然后那个就是去见义勇为的，有一个男生就死了，一死一伤死了。这个男生叫吴宏宇，他是广东大一的学生。然后这个事儿出了之后，吴宏宇他是一个overwatch的玩家。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:23",
      "text": "OK，我知道你在说什么了，好像是在漓江那个地图里面，暴雪把他的名字放上去了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:30",
      "text": "对对对，就在那个那个图的有一个点，有有三个穿这个宇航服模样，然后背后是一个这个红色的背景的一个场景。中间那个宇航员他的胸前有个铭牌，写的是红鱼两个字OK。然后背后那个背后那个红色牌子上写了四个字叫英雄不朽。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:57",
      "text": "OK原来是这样一个来龙去脉，就是我知道后面这件事情，就是我知道三位那个漓江那张图里面出现了一个人的名字，但是我不知道原因是什么。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:08",
      "text": "然后那个overwatch里面有一个tracer，好像有一句话是不那个片那个片头那个片头电影里面是不是叫做hill never dies？",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:17",
      "text": "没有，是mercy，是个是个瑞士是个瑞士的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:20",
      "text": "他说的他那hero .",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:22",
      "text": "never die是他的他在复活的时候说的一句话，而且有德语和英语两个版本。",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:29",
      "text": "OK对，heaven .",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:31",
      "text": "Steve ist have steiff. 对，然后怎么了？然后这句话被谁引用了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:39",
      "text": "还是有没有？我就在我就看到这个事情，我觉得挺挺感动的。然后在OK微博上引了这句话。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:47",
      "text": "OK所以你们要玩是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:03:50",
      "text": "我还没有买PC去玩这个事儿，但是我看那个知乎下面有一个就这个事情，知乎上有一个讨论，就是关于这个事儿。然后下面有一个挺好，就是说所有暴雪游戏都去买一遍，不管玩不。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:07",
      "text": "这个我早就做了。OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:10",
      "text": "本期节目。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:12",
      "text": "开始我们非常荣幸的有了主题曲。然后这就是来自于一位听众，他的名字叫做米罗张庄庄。米罗如果没有念错的话，因为他只写了拼音。所以对然后这位朋友给我们发来了一份，他用这应该是用盖尔出版的做的对，用garage band做的片头曲。然后听起来非常的，我觉得还蛮酷的。你觉得对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:47",
      "text": "我觉得挺好玩的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:49",
      "text": "对他我把来信念一遍，他是两位主播，好听贵节目很久了，有几集甚至反反复复听了很多遍。我不是一个程序员，本科和未来的研究生专业都是经济学。日常学习中唯一使用到的计算机语言是R括号，某种意义上都不能称rv中一门语言，这个太谦虚了。R它虽然看起来比较奇怪，但R毕竟还是一门语言。最近在自学shell和python，因此回听之前的前几集觉得受益良多。确实folk law对于学习一门专业来说的确很重要。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:27",
      "text": "废话不多说，我是一个业余音乐爱好者，偶尔也搞搞乐队什么的，风格偏向摇滚和民谣。但这次用mini用了迷你键盘录制了一个很短的小品，采用了美剧硅谷和动画片reconverted里面的两句台词很短。我认识，我认为是符合fair use原则的。如果两位主播喜欢的话，可以将这个小片段作为内核恐慌节目的主题曲。对，就这么来的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:56",
      "text": "感谢耶终于有了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:00",
      "text": "对，我很喜欢那一句瑞克说的台词，对。The houses them just crashed. 非常好玩，还蛮酷的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:10",
      "text": "非常感谢。上期我们开头的时候聊到一个有一个听众们给我们讲过一款显示屏，它不是有USBC的接口，然后连macbook。那当时我不是说他那个就还不够完美，因为它不是不能跑reach的分辨率了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:29",
      "text": "对，而且刷新率不够。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:31",
      "text": "对，刷新率不够。然后后来发现一个应该是这个月初的一个night 5 max上面的一篇文章说其实就是今年新出的那个macbook，就是最薄的那个就是二代。哼它其实是可以支持4K然后60赫兹刷新率的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:50",
      "text": "它只不过没有打开。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:52",
      "text": "对，然后就有几个问题，第一个是硬件是什么？然后我们就他有一个叫什么？这一款是LG。LG出了一款LG最近真是挺不错的，老出头挺好的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:07",
      "text": "然后新加了一块的东西。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:09",
      "text": "对，然后推出了一款4K的显示器，然后也是用那个USBC接口的。然后就一根线就接到那个macbook上面去，然后就可以同时传给那个笔记本供电，然后传视频，然后传一个USB的接口信号。我看了一下，这款在京东上卖大概4200，还是比较贵。但是我觉得已经在那个接受就可以接受的范围内了。对很多人来说。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:38",
      "text": "4200还OK。对，大概。",
      "speaker": "发言人2"
    },
    {
      "time": "00:07:41",
      "text": "六百多六百六七百刀的样子OK但是就直接插上那个mac就用那个它它系统，就是那个盒子里面自带一个USBC的线，你插上之后那个刷新率默认还是只有30赫兹，然后好像这个是mac OS的一个问题。但如果他有一个方案，就可以给他打一个这种什么补丁。你自己打个补丁就可以强迫使他开启这个60赫兹的模式。让他们试了一下，也就没啥问题，然后温度也不会特别高OK，所以就这看起来，就目前来看，这个是比较完美的。这个就是迈克外接这个4K显示器，然后60赫兹分辨率的一个方案。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:32",
      "text": "但是有一个小catch，什么catch？",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:35",
      "text": "就是那个USBC。如果你用它接了那个视频输出disc微破之后，它的那个USB本身数据信号的传输就只能变为USB2.0的速度了，就不能用USB3的速度了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:47",
      "text": "所以带宽还是不够。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:49",
      "text": "就带宽对，带宽肯定就被那个那个disport占掉了，好吧。然后那个剩下的就不因为V20 35 5个G的带宽。然后他这样算下来之后，就好像就只能回到USB2的模式了，就480 make per second那个传输速度了。就是稍微有点失望，但是总体来看还是挺不错的一个解决方案。打补丁这个事儿，我不知道会不会在九月份到时候发macos 10点12的时候，就是c ara的时候，不知道会不会解决。因为当时最开始支持那个外接四外接的那个外线分辨率，支持也是过了好像一个大版本，才还是一个小版本升级的时候，才有把那个系统支持，就之前开始的imac s是插上也是认不出来的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:43",
      "text": "OK我觉得他有可能只是因为没有做稳定性测试之类的事情，或者是在某些极端情况下不是那么的可靠，所以他暂时把它禁了。因为我看这个补丁的内容好像没有特对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:56",
      "text": "只改了一个。好像一个是我看了一下那个补丁只改了一个什么串声明类似一样的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "00:10:02",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:10:04",
      "text": "然后他们那个make five mac的人去用了，就是试用了一下，好像也没发现什么问题。应该还好。我估计下个版本把这个改善的可能性还是蛮大的，所以就等这个方案了，然后就可以可以换一个原生支持4K然后60赫兹分辨率的那。",
      "speaker": "发言人1"
    },
    {
      "time": "00:10:27",
      "text": "麦克对还不错。但还是你的解决方案比较便宜。从成本上来说。",
      "speaker": "发言人2"
    },
    {
      "time": "00:10:34",
      "text": "对对对，但是就是因为现在没有办法解决那个60赫兹刷新率的问题。有很多人比如说要玩游戏或者做其他什么事情，像不是我这种比较能忍的，还挺尴尬。刚才提到那个USBC的问题，也又回到了no，就来猜测下一代的那个macbook到底会不会搭载这个USBC的接口了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:10:58",
      "text": "哼你觉得会吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:01",
      "text": "其实现在看来应该可能性还是蛮大的。不然你说你都憋了这么久，再出一个新款的macbook产品线，然后你再用一个马上就要淘汰的这个USBA型接口的话，好像也不是太合适。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:17",
      "text": "但是问题就在于它会有它最终会有几个USBC或者说USB的接口。如果只有一个的话，我觉得应该是不可接受的那那势必就会造成可能。比如说现在因为现在MBP上有两个，都是USBA的那你如果你出了USBC的那那你要保留几个USBA的？",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:40",
      "text": "就总共三四个，应该问题不大，本来那个也比较小，空间肯定是够的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:46",
      "text": "OK好吧，就看剩下。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:47",
      "text": "就看带宽够不够了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:49",
      "text": "就等于说有可能把那个display port的口换成USBC display .",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:54",
      "text": "power去掉应该是板上钉钉。就是那个thunder board那个那个接口去掉，应该是打下钉钉的事情。因为那个3B3，对吧？他他本来都改成USBC的接头了。对，所以按照苹果之前的做法，那肯定是跟你要跟这个跟上这个最新的性能的，对吧？你肯定是要用那个USBC接口的，那唯一的问题就是保不保留旧的USBA的接口。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:26",
      "text": "然后我觉得还是应该保留的，不然一大堆外设接纳，这真是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:31",
      "text": "迟早会更新换代的。但是如果你用了USBC接口之后，那就自然而然的问题就是weber pro要不要用USBC供电，那也就是考虑要不要接着用那个叫maximum那个那个磁性接头的问题了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:52",
      "text": "反正macbook air所有的问题都会在这边重新出，重新呈现一遍。哼不是air，是那个新的macbook的问题。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:04",
      "text": "对，所以还是在等等我现在是好想他刚才出一个用30赫兹刷新率，真的是挺不爽的。要打个游戏什么的，还得把那个拔掉，然后用原生屏幕才有60赫兹的刷新率。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:21",
      "text": "好吧，其实我现在玩overwatch一直是在30FPS下面玩的，这也可以接受。我我我是不是休闲玩家了，我连鼠标都禁忌烂的那种罗技鼠标不就是。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:36",
      "text": "那不是个竞技游戏吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:38",
      "text": "它是个竞技游戏，但是并不意味着你30FPS玩不了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:42",
      "text": "他只不过你可能容易死。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:45",
      "text": "以我的操作水平，还轮不到谈论硬件会使得我手比较更容易死的水平。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:52",
      "text": "不是你你算一下，如果你是30赫兹刷新率，你撑死两帧之间间隔是多少？34毫秒左右，是16.66乘以2。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:05",
      "text": "但这个游戏并不是一个非常像counter strike一样，非常强调精准射击的游戏。有些就是他的你在游戏里面采用的策略和你选择的角色都远比你的射击精度要更重要一些。因为它不是一个纯粹意义上的shooter OK明白吧？就是比如说你选一个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:14:28",
      "text": "是里面对你。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:29",
      "text": "你选一个只能挥舞大锤或者是扔飞镖的角色，就是你你能在能否在0.0几秒之内击中一个人，把鼠标放到某一个人的头部，其实并不是那么重要。在这一点上，他跟conor struct是不是差别比较大？他比较像以前的那个quick OK，他他比较强调运动和战术。当然country strike同样很强调战术，我只是强调说射击的精度没有那么重要。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:08",
      "text": "好吧，所以那所以你为什么只用30赫兹？因为性能不够吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:13",
      "text": "因为我显示器太烂了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:16",
      "text": "显示器的太烂了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:17",
      "text": "对我我现在用的是两个明基的，大概五年前的显示器。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:23",
      "text": "你不要告诉我，你显示只是30赫兹的刷新率。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:26",
      "text": "应该是支持30个.",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:28",
      "text": "怎么可能呢？你那个又不是retina分辨率的显示器。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:33",
      "text": "不是red的分辨率。但是我说实话我不知道它。对，回头我去查一查，这个问题1点也不重要。但是anyway，我在游戏里面只能调到30PS.",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:43",
      "text": "哼我觉得肯定是因为什么原因导致的，你跑不上去。应该因为正常的就是电脑显示器应该都是60赫兹刷新率标准OK。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:54",
      "text": "我回头去研究一下到底是为什么。后来天哪。",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:57",
      "text": "你现在这么久我也是服了，就说你做文档出的时候也是只有30赫兹吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:03",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:06",
      "text": "所以30和指数刷新率对来说完全不是问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:08",
      "text": "对吧？不是太大的问题。我觉得有些事情上我很挑，比如说偏色的问题，或者是我不能忍受次像素平滑之类的事情。但是发现率这件事情上，我好像没有那么因为你。",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:22",
      "text": "大部分工作都是面对的是文，就是静态的文本对吧？对，好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:27",
      "text": "这一点上你只要别那个刷新率慢到像那个kindle那种地步，我觉得好像都可以理解。",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:33",
      "text": "所以你的下限是十，这十赫兹的下限是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:40",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:41",
      "text": "好吧，还有一个事儿我们现在来讨论可能有点晚了，但是我觉得还是有必要讨论一下的。就是天天现在到处都在谣传说那个iphone下一代这个iphone它没有那个耳机口了。哼这个事你怎么看？",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:59",
      "text": "我觉得比较radical。所以解决方案无非两个，一个是通过那个充电线的口来输出音频，另外一个就是全无线，对吧？那我要是走全无线路线的话，你会给我一个无线耳机吗？如果给的话。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:16",
      "text": "我就觉得还可以，其实给不下来也没什么大不了，也不贵。成本我。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:23",
      "text": "是没错了，但是你要做一个看起来还不错的，能够就是能够首先他得是有缘的对吧？你这这你要你还要解决这个无线耳机的充电问题，不是什么。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:38",
      "text": "那这个比较好解决，因为现在所有蓝牙耳机都要充电。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:42",
      "text": "是，但是麦克苹果会怎么解决这个问题呢？就是你你怎么你到时候怎么会你怎么给这个蓝牙耳机充电的？我难道要买一个手机，它会附送两个充电器吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:53",
      "text": "还是如果苹果做，肯定那个耳机也是那个lining接口的，就跟那个那个apple pencil一样的，插到那个手机屁股下面去充呗。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:05",
      "text": "好吧，然后再插上去充电的时候也是可以听的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:10",
      "text": "蓝牙耳机的话它的线应该是很非常短。对对对，应该插上去就不能再就充电的时候应该是不能再不能听到了。不过我估计充电时间可能会不长。比如说那个喷锁，它不是可以30充30秒，可以用一两个小时。哼估计这种你比如充个一分钟，用个1个小时也够了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:31",
      "text": "我觉得OK.",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:32",
      "text": "那这个倒不是问题，其实我我要说两个事儿。第一个就是说如果是有如果那个东西变成有限的那就肯定是用lining接口会有什么好处？这个我之前在好像在很久以前，在某一期的IT公众里面提到过。然后也是跟我们的朋友梁海在推特上讨论过这个事情。就是我也买过那个叫做主动降噪耳机。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:00",
      "text": "那款它可以给主动降噪耳机供电。",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:02",
      "text": "QC对，主动降噪耳机它是需要有有电源的。因为它里面有个采样，然后算计算那个那个噪音源的波形什么的。然后你要放放一个反向的波形出去抵消它，所以肯定是一些处理的耗电。然后那个3.5毫米耳机孔，那显然是没法供电的对吧？所以是所以那款耳机那我那款降噪耳机的一个，其实现在市面上大部分的降噪耳机都是这么一个做法，就是他需要。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:35",
      "text": "另外再比如要么是一个电池盒，要么就是在那个如果耳机比较大的话，就在耳机上面做一个电池的仓，然后装一块电池进去，或者是用内置锂电池然后充电的这显然就很包体，就是比较大众那个boss有两款，有两个造型的。一个是那种大的，插插电池或者是内置锂电池的，还有个便携型的那种类似耳塞型的。它就是在线的某靠近那个插头那一端有个很大的一个电池盒子，反正就是挺不爽的那如果你用这个蓝牙供电的话，你就可以直接解决这个问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:16",
      "text": "但同时也就意味着这个耳机必须这个降噪耳机必然是apple only的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:23",
      "text": "其实对我来说我影响不大。因为我现在。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:27",
      "text": "听听的出发点主要是从这个第三方的设备厂商上来说，就是他为了做这样一款耳机，他必须做一款apple only的耳机。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:39",
      "text": "但也不一定了，其实有很多解决方案的。比如说我有一根什么第三方的那种lightning充电线，它其实是有一个叫什么，它可以变成它是两用，它可以变成USB。USB的充电线他做好，就是前面套一个头子，那个micro speed转lining的那种头子。耳机厂商就第三方的耳机厂商，我想做类似的事情，我觉得也是有有办法可以。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:09",
      "text": "解决的好吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:11",
      "text": "倒不至于说一定你这个耳机就只能给苹果用了，苹果自己发的估计只能是哪里。如果是有限的话，就肯定只能是lin接口了。这个问题。对，但如果是其实我我挺挺好奇的，我觉得哈他应该会做成一个无线的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:29",
      "text": "我是觉得应该做成一个无线。",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:31",
      "text": "你知道为什么要做成无线的吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:32",
      "text": "为什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:34",
      "text": "对我看他们最近都在讨论这个事儿，但是都我都没有发现有人提到这一点。非常重要的一点就是apple watch其实只支持蓝牙耳机的，因为他没有插口，对吧？有道理。对，然后apple watch它其实是有内置存储的。假设你可以把歌放在对好像有八个G的空，使用的可能有个四五个G装点这个音乐，podcast的应该是问题不大的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:06",
      "text": "把历届IP把历届chrono拍那个状态是没问题。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:09",
      "text": "对，那这个不错。然后这个场景是什么呢？因为其实很多人其实不是都在因为apple watch的一个主打场景是运动健身。哼对吧？所以你在跑步的时候，你可能不想揣一个挺大的手机在兜里，然后撞来撞去的，对不对？",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:32",
      "text": "对我现在健身的时候就是只带那个apple watch，我把那个手机锁在存储衣柜里。因为apple watch在这种情况下还是可以记录你的运动量的，所以手机。",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:41",
      "text": "并不是必须的对，所以这个时候你要跟apple watch去连不连接。就很多人运动的时候，或者说你可以这么讲，ipod的这个产品线，它的一个主打的一个使用场景就是你在运动的时候需要听歌，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:58",
      "text": "对，尤其是ano之类的那种。",
      "speaker": "发言人2"
    },
    {
      "time": "00:23:00",
      "text": "对对对，就在那别在那个袖子上的那种之类的对吧？那这个这个功能我觉得很快会被这个apple watch所替代，就是因为他有那个叫什么叫什么finance那些sensor，什么心率那些那些对吧？但是音乐这个问题，它始终现在还好像还没有解决的太好。要解决的，因为它毕竟apple watch里面存储空间有限。它必须要解决这么一个问题，就是说怎么样能够让你平滑的从手机播放切换到这个apple watch播放的这个过程，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:23:37",
      "text": "这个时候只有一种可能性才能解决，就是苹果作为一个无线蓝牙的无线耳机，这个蓝牙无线耳机同时跟这个apple watch和你的iphone配对。但这个配对可能不需要要像我们平时买耳机那么麻烦，还要按住几秒。然后他说配对，然后你再在手机上去搜那个，他可能就是像那个apple pencil那种配对方式一样。你插着充电的时候，比如说插上去等个一两秒，它就自动通过那个lighting接口配好。对了，而且因为那个那个叫什么apple watch是跟你手机是本来就配对的。对它可以把你可以自动告诉耳机，对不对？跟就可以自动跟手脚一次就配对完了，就解决了这个无缝过渡的问题。这个是其这个是我能想到的比较重要的原因。另外一个比较重要的原因是siri对今天我们后面的这个主题会讲WDC上面，其实siri是起码是IOS10的一个主打功能。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:39",
      "text": "就是IOS功IOS10里面被矩理论上应该非常强化了的功能。",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:45",
      "text": "没错，如果说他费了那么大劲，那肯定是要大家能够比较方便的用上的用上siri的这个才好用。对呃怎么样才能更好的用siri呢？其实最好的方法就是你这个带着那种，你是用那种单边的蓝牙耳机吗？以前打电话用那种。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:07",
      "text": "我用过一次。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:08",
      "text": "就是那种，以前什么拍特工片老是喜欢放一个。对，就是这个时候因为你的那个听筒和这个麦克风一直在挂在你脸上，不像那个siri就现在的siri你还得把手机从兜里掏出来，然后再对着他讲，你当然可能不一定要按那个原件了，因为现在IO iphone 6S都你可以选择是又叫做high CI激活它，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:34",
      "text": "嘿siri.",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:36",
      "text": "很多的C位被激活了。对，然后这个时候就说如果你的有一个耳机是一直挂在这个耳朵上，然后你随时可以通过它来启动这个siri的话。是不是说能够减少就提高这个用户使用这个siri的频率，或者是减少使用siri的成本。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:59",
      "text": "有。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:01",
      "text": "对，所以我觉得基于这两个考虑，把这个3.5毫米耳机口封掉，就去掉，然后换成这个蓝牙，然后通过这个lighting充电和配对的耳机是一个比较合理的选择。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:17",
      "text": "那你这么一说，我觉得苹果一定得这么干。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:23",
      "text": "这个故事太好。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:24",
      "text": "以至于对战略分析师，这不简直是对对对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:29",
      "text": "那产品是就是产品，因为刚好最近很多人在聊，就是列出各种各样的优缺点，然后就说这个3.5毫米耳机去掉不去掉会怎么样？换上lighting去掉又要换上接口会又会怎么样？然后换上蓝牙又会怎么样。但是我发现竟然没有任何人想到这两点，就是非常神奇的一件事情。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:49",
      "text": "哼apple应该聘请你。我觉得对我早已看透了这一切。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:56",
      "text": "万1 9月份没有这么出，是不要打脸。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:02",
      "text": "我觉得想法是很好的，将来肯定会实现。就哪怕这一次不更新的，将来这应该是一个要去的方向。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:09",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:10",
      "text": "然后刚好最近合理了，刘总他这些都太合理了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:15",
      "text": "唯一有一个就是不太好的，就是可能在国内，我不知道你在那个飞，比如德国飞汉莎的话，它飞上天之后，就是平稳之后，它允许你使用这个ipad吗？越狱手机需要关机吗？不需要。这是开飞机模式，醒来没错。就在国内，中国不怎么样，好像对国内民航对这个的规定还是挺死的。就是说你不能用其实很变态的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:43",
      "text": "你可以用莫过于时代。这不是国际民航局，国际民航总局早就允许了，而且很快就要连开机都可以允许了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:53",
      "text": "没错，就是这个问题。国内是说你可以用ipad，但不能用手机，这个事情很奇怪。那我ipad带3G功能算怎么算？对吧？所以会有点。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:05",
      "text": "反正我觉得慢慢会改的，但只不过它比较对，比较落后。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:11",
      "text": "对，就可能在有一段时间内，如果他只有这个，就iphone只有这个叫什么无线耳机的话，可能会你在飞机上听歌可能会有点稍微有点问题。反正现在有蓝牙那个liming接口耳机卖，第三方的你也可以买一个背的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:30",
      "text": "问题也不大不过问题是空空乘怎么知道你带的是一个降噪耳机，还是一个有源的降噪耳机。然后除了抵抗噪声之外，什么功能也没有，还是一个蓝牙耳机？",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:48",
      "text": "他其实不管他看不出来的，他就只能在玩手机而已。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:52",
      "text": "OK那。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:52",
      "text": "就是你带了也没我，反正我每次都带着，也没有人说什么，他也不会管你了。而且有时候我带，因为我带那个，我有一个蓝那个叫什么patron ics的那种入耳式的那种蓝牙耳机，然后它的那个隔就是隔就是屏蔽性比较好，隔噪的功能比较，我有时候其实本来就不开声音，把它当这个耳塞用的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:17",
      "text": "OK, 反正。",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:18",
      "text": "也没有人任何人说什么，就还凑合好吧，所以还是蛮期待这个事情到底会不会如我所说变成那样，还是说会出点什么其他别的1蛾子出来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:32",
      "text": "我们期待real再次成为原点。OK进入下一条，这条其实是旧版了，因为这本来是kernel palo x38还是37的主题，就是当时是一个相对来说比较新的新闻。因为这是在2016年4月25日的一个演讲。对，那应该是两赛季之前就想说一件事情，只不过后来因为各种原因，比如说请嘉宾或者是其他主题就把它跳过去了。对，这篇文章说的是它题目叫做being a developer after forty。对他这个人42岁了，应该是他在做程序员。然后当时看的时候感触挺深的，现在又看了一遍，好像觉得没什么。反正总之这篇文章讲的就是一个怎么说本。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:32",
      "text": "节目的主旨阻止人群的生活？",
      "speaker": "发言人1"
    },
    {
      "time": "00:30:36",
      "text": "就是对我们中网那个程序员，对应该怎样规划自己的人生图景的一个问题。对，当时是想说这个就因为这个人他在这演讲这一天说，已经过去了6776天然后在这6776天里面他。I have had couple coffee in the morning and right codes with things named baby's script.",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:04",
      "text": "Javascript, linux, SQL, HML, make file. snow. Jac, SSXML, dot, yo. Profiles, Jason. Markdown, PHP, windows doxy gen c, sharp visual visit, visual basic点net，java socket, socket dot IO, ruby unit test, python shell script c plus plus，objective sea batch files and lately swift就是这个人在。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:31",
      "text": "所以看一下他其实。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:33",
      "text": "是从。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:34",
      "text": "1997年写windows的一个程序VB写转到了做网页开发。对，接着又做网页开发，可能换了三代四代技术的网页开发。我又开始写windows应用程序，然后开始写java程序，然后又开始做这个web后端。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:56",
      "text": "对他写过那3.195和NT的后端。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:00",
      "text": "对，然后又开始转向做这个原生程序，主要是这个IOS应用和和应该就是IOIO应用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:11",
      "text": "对，总之是一个基本上相关领域的东西都做过一点。他可能唯一没做过做什么数据库或者是分析师之类的职业。但基本上它是一个就从97年开始到现在，这就附带负负stack，不能再附stack。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:28",
      "text": "97那快20年了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:30",
      "text": "对，OK, 但而且这是从业经历了，就不是说他他写程序多少年了，他可能从小或者是从什么come到64的时代就开始写程序OK。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:41",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:42",
      "text": "首先这个人或者说这类人的存在就向我们证明了一点，至少在在理论上或者说在现实中，的确是有人做技术一直做到四五十岁，对吧？我在上也看到过一个华人写说他五十多岁了还在写程序，然后他现在创立自己的公司。我不拉不拉就是可能我们没有大规模的统计数据，或者说大规模的统计数据验证的观点应该是程序员写到写过了30岁就应该去转别的职位了。如果你还在做程序员的话，意味着这个loser对吧？但我们要接受的一个观点应该是，或者说值得接受的一个观点应该是，如果你愿意的话，你可以写到40多岁。因为这个人还活好端端的活着，而且没有过劳死，没有什么颈椎病，而且看看得出来还蛮开心的对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:47",
      "text": "对我觉得这之前一直提一个什么很多人说那不行，赶快要不写代码，要转管理岗了。其实这个事儿挺挺奇怪的，因为首先第一个没有那么多管理岗，对吧？那么多这个程序学员，我怎么会有那么多管理岗出来？不可能大家都去做管理了，对吧？对。然后第二个就是别的行当人家都可以做同样的一个手艺做。那么工程师做那么多年，为什么程序员就不可以？",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:18",
      "text": "这有两方面原因。一方面是我们的文化里面有一个官本位的思想，就是学而优则仕，对吧？不管你干嘛，你你你做的好了，你就得当官，你就得管别人。如果你不这样做的话，那社会对你的认可就是要比那些做了管理可以管别人的人低一点。就比如说有很多人在向你介绍他的工作的时候，会说我是什么什么的什么什么，然后我管着多少人，这是一种这是我发现这是有一些人跟我自我介绍的时候的套路，就是他一定要强调说我管着多少个人，如果他一个人都不管的话，可能就又老。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:55",
      "text": "然后另外一方面是其实我们中我们国家在过去的20年里面，经历了一个20年30年。其实就是我们80后这一代，baby boy baby boom对吧？就是我们有大量的年轻人，我们有一个所谓人口红利这样一个东西。就是有很多很多年轻人涌向了很多很多社会的各个阶级，不是阶级，是sorry。各个工作，然后各个工种，然后有你会发现每天都有新人来。如果每天都有新人来的话，你一个人坐上一段时间，你就成了资历经验都比较老的那个人。然后你可能会负责要去利用你比较多的经验，去去去来自然而然形成一种管理新人的这样一个结构，或者这样一种习惯。但实际上当这个人口红利消失之后，然后当我们因为我我国在过去几十年里面是一个社会的阶级比较流动性比较强的一个国家。我就有这样一个说法，就是你只要努力，你只要还有。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:09",
      "text": "机会勤劳。",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:10",
      "text": "你就很有机会去跻身社会的上层。或者说所谓的上层，就是对知识改变命运之类的这样一种论调一直都很流行，而且直接一直到今天，这还仍旧是正确的。就是在我国这个阶级流动性仍旧要比很多已经发达国家，比如说德国要好得多。在德国你很难很很难说一个人他可能出生于一个农家，然后爸爸是什么农场主，妈妈是个在家赋闲的人。然后她三号三妹通过自己努力跻身到德国的商界精英之类的这种事情，这在德国是不可想象的。但是在中国之争就是非常可能的一件事情。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:54",
      "text": "而且是会出身决定命运，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:56",
      "text": "对，然后问题在于我们是会不可避免的走向社会阶级固化的。然后可能我们这一代还有些希望。但是当我们的下一代以及下一代的时候，很有可能他一辈子就是跟你是同一个阶级。听起来好悲凉，就是人就是当你开始拼爹的时候，你可能已经发现这个世界已经不再给你不拼接的一个基础了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:28",
      "text": "明白话说的有点绕，不过你明白我的意思。对，然后这篇文章其实看完之后，我就想说是阶级固化不是一个特别可怕的事情，然后一辈子做技术也并不是一个特别可怕的事情。尤其是如果你能够仔细看一看这篇文章，然后听取他的一些建议的话，你会发现其实一味的写程序没有什么大不了。但是如果你愿意，你觉得说我的人生就是要做管理，或者说我还是关门这件事情，也许在你看来不是什么事情。然后在你的家庭或者是长辈，那也是一件比较重要的事情。那你还是可以朝那个方向努力，但是你也不要把那个写微的程序当成一件坏事。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:17",
      "text": "所以毕竟相比起很多工种来讲，不管在中国也好，美国也好，做一个资深的工程师、软件工程师，还是一个相对来说比较体面的工作，然后就收益收入也还不错。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:33",
      "text": "对，是这样，就是我们对于工人好像有一种，我不知道你，但是我觉得我可能之前是有点是有一定的，不是主观意愿上，但是是被一种是一个被影响的偏见的。尤其是我爸经常会说什么不要将来不要当工人，太没出息了，因为他自己就是个工人运动。因为就是因为我们国家一开始80年代的时候搞各种各样的大型工业化。然后90年代下岗潮的时候，有国家等于是国家把工人阶级直接抛弃了。所谓下岗其实就是失业，对吧？一开始你进公司的时候给你培训说你做螺丝钉做到老，可以过上幸福的生活。然后他们真的这么真真的这么做，然后90年代末又被抛弃了，而且是成建制的成这一整个城市的工人都被抛弃了，我觉得这个是不可想象的。也就是因为这样的事情出现，才让我国做工人好像是一个非常悲伤的事情。实际上不是这样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:34",
      "text": "对我觉得看所谓的你的技能水平和这个社会需求。比如说有个挺好玩的例子，就是我现在不是老打车，然后经常会遇到一些很奇怪的司机。那天我打车就遇到一个司机，他是在中国的西门子上班的一个电焊工。",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:54",
      "text": "前西门子还是就前电焊工。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:56",
      "text": "现在现在的现在的电焊工。",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:58",
      "text": "所以开打车是他的副业。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:00",
      "text": "对，开开出来跑是这个是他的副业。然后我就问他还是什么？不滴滴滴滴滴专车，那是专车司机。然后我就问他，我说你这个上班时间怎么有空出来接单呢？如果你是西门子上班的话，因为他们那个公司就在科技园这边，不算太远的地方。他说那没事儿，我一天一周就只上一天班。我说还有这种。然后我就问他，我就说那你这个一天班什么情况？他说他的工作就很简单，他是那种所谓的好像叫什么高级焊工那种哼就是他的工作就只用去每天每周去一天去培训其他的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:40",
      "text": "焊工就好了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:42",
      "text": "OK然后收入也老司机。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:45",
      "text": "你对得起。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:46",
      "text": "老刺激，就是他他的什么收入也不错，然后他出来跑，那就是纯粹闲的无聊。因为一周只上一天班，剩下四天干嘛呢？对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:56",
      "text": "这简直是很多人的dream照片都对对对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:59",
      "text": "然后我就问他，我说你就好奇就说你们这个西门子的焊工跟别的焊工有什么要求不一样？然后他就给我讲了一大堆，我也没太听明白。这个不是学这个的，但总体来说会得出的。我我我总体得出来的一个结论就是说你这个手艺足够好，然后这个市场足够需要你的时候，你还是可能过得很好的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:23",
      "text": "然后他那个好像就是他是做那种，西门子有这个医疗器械的部门，对吧？他是做那种医疗器械的那个部门，你知道那种医疗器械动作都是上千万的一台东西，他对那些精密度要求都非常高。所以他他虽然很多是有一些自动化生产的部分，但是有些关键的地方还是要去人去做。比如说它可能焊接那部分还是要人去手工焊，那才能保证它的它不是量产的一个设备，对吧？他不可能每每小时出差11111千万的设备出来，这样卖不过去的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:57",
      "text": "精密焊工的确是非常高科技的一个东西。就是它你说起精密焊工的时候，想象的不应该是什么拿着一个面罩罩在眼前，然后拿一个粗大的东西去朝一堆废铜烂铁上焊的这个。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:10",
      "text": "传统工业的形象，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:13",
      "text": "对他很有可能是要穿着什么无尘装，然后去一个实验室一样的地方，用一个非常小的一个高温焊头去汉去去去焊东西。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:24",
      "text": "没错，所以就是我们说这个什么叫什么工业4.0时代的工人是怎么样子。因为这个前提的一个基础，就是说我们过去包括90年代香港那帮那帮我们的父辈们那一代的下岗工人，他们的工作在现在来看，其实都已经很大程度上被机械化自动化去取代掉了。所以他们的那些技能是不具备这个门槛的那就这个社会还是就比较那个对吧？就比较被市场经济所抛弃了。但是就我我就是说这个例子，就是说不管你做什么行业也好，哪怕你做这个程序员也好，你也想要保持学习和更新你的这个知识水知识储备，还有这些技能的一个过程。不是说我学会这一门手艺，我天天就是靠天天吃饭了，对吧？那那肯定不现实。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:22",
      "text": "对，其实在这篇文章里面，作者也写了他最重要的一个章节，或者说他整篇文章除了introduction，后面那个最重要的部分就是它有一个大标题。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:33",
      "text": "Advice for the Young at hot, 如果你要保持年轻的话，或者说你不管你是年轻人还是你是一个40岁的同学，你如果愿意保持年轻人，对你应该有以下的几个建议。他第一建议是forget the hype，就是尽量去忽略现在在流行什么。他写说97年的时候hype是koba和rap，20 2000年的时候是soap XML，2003年的时候是MDA和software factory，那个时候就不展开讲了。然后006年的是语义网和那个OLPC，09年的时候是augmented reality，一二年的时候是big data，15年的时候是virtuality和boats，就是那个john之类的东西对吧？然后他说do not worry about have，就是你可以关注这些事情，但是你要持续做你做的东西，学你要学的事情，然后move on。因为have它不管是将来转化为实践也好，还是昙花一现的销声匿迹也好，你能学到的东西对于你来说才是最重要的对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:52",
      "text": "然后他第二条的建议是choose your galaxy wisely。他没有用religion这个词，但实际上它指的是选择你的那个text tack，这个不重要。但是它然后它的第三条就是learn about software history，然后第四条是keep learning，keep on learning. 但是就是你要tip 1是每年至少学一门新语言，第八二十每年至少读六本技术相关的书籍。",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:26",
      "text": "OK.",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:26",
      "text": "如果你能保持这个话，我觉得在任何行可能有些行业新的知识的涌现的速度已经慢了。但是在新不管你只要做一些稍微有点技术含量的工作的话，我觉得每年其实都有新的事情涌现的。所以你要一直keep up的话，就不用担心什么技术会过时这样的事情。哼对，当然这是一种听起来比较乐观的想法，可能有些领域里面的确是已经没有什么新东西可学了。那我也不知道。",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:00",
      "text": "对，因为前几天老师讲一个概念叫做学习型组织，就是说这个组织它应该是这个技能社会，随着这个组织的生命周期它会变化了。我觉得其实对于个人来讲其实也是一样，对吧？最近我虽然说是老是说不再写代码了，其实最近还是在老是在看这些相关的东西，保持对这些新鲜新的技术，还有一些这种底层的基础的东西要有敏感。你才能够在这个行业里面看到那些项目的时候，才有一些基本的判断能力。其实也是一样。",
      "speaker": "发言人1"
    },
    {
      "time": "00:46:36",
      "text": "对对，推荐大家看一看这篇文章。然后另外一个相跟这个相关的是前两天的事情，就是大概大前天，收到了一封already的信，说2016年的software development salary survey的报告已经出来了。Already每年会做一个问卷调查，就是他会把他会向所有，因为already是一个全球性的出版公司，然后技术书籍各种研发型，然后他会发一个调调查问卷，然后让全世界的程序员来汇报一下自己的薪资水准，使用的技术、年龄层面、公司类别之类。不拉。然后今年是在4月5月份的时候出来的，我忘了，但是前两天我才收到。然后在这个里面也提到了说这个薪资水准，这个当然是这个报告的主题。我大概说一下，就是这薪资水准全球的中位数是80K到100K的，100K美元，这是中位数。",
      "speaker": "发言人2"
    },
    {
      "time": "00:47:46",
      "text": "或者说就是8万到10万亿美元一年。对，就是人民币大概是多少？乘以7好了。现在有七八就5到80万.",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:01",
      "text": "对，就能起。如果你能拿到50万年薪的话，是全球开发者里面的中位数。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:08",
      "text": "所以你给全球拖后腿了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:10",
      "text": "我没有给全球。我我对我我被全球平均了。当然比这个高的话，最高有200K以上的，而且占了大概2%的样子。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:29",
      "text": "这个是套不套1%那种。",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:32",
      "text": "对，如果你的薪水超过了200K的话，那你就是已经你你已经打败了全球98%的开发者。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:41",
      "text": "20万美元一年就相当于多少人民币？是乘以7就将近150万了。对，人民币。对，没有，那就130 100万.",
      "speaker": "发言人1"
    },
    {
      "time": "00:48:54",
      "text": "就算100万。如果你能靠写程序赚100万的话，你就打败了全球98%的那肯定你。",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:00",
      "text": "年收入就是100万人民币的话，在全球来看范围来看都绝对是上一次高收入人群了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:49:09",
      "text": "当然这个报告本质上是一个美国报告，因为他美国的开发者占了报告的回报，就是参加报告的人数里面有61%是来自于美国的，7%来自于英国，5%来自于加拿大，4%来自于德国，2%来自于澳大利亚。然后剩下的那些minor minority才是来自于亚洲或者是别的什么地方。然后薪水最高的是美国，当然是美国。然后接下来是瑞士和英国，哼其次才是什么法国、德国之类的地方。对OK，然后日本也是非常高的。然后薪水这一部分大家有兴趣可以自己去看。那那我想说这里面提到了程序员的这个年龄层次，稍微找一下对，有一个细节就是其实所有参加service的程序员里面，男性占了92%。然后男性的平均年薪要比女性高OK。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:18",
      "text": "年龄。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:19",
      "text": "3%的程序员超过了60岁.",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:24",
      "text": "就是爷爷辈的这个程序员。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:27",
      "text": "他们从你们公司。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:28",
      "text": "应该贡献了好几个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:30",
      "text": "60岁我们公司有几我们公司没有超过60岁。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:34",
      "text": "但是上上一家公司。",
      "speaker": "发言人1"
    },
    {
      "time": "00:50:36",
      "text": "上面那有一个外派的超过60岁。从什么他这最开始写什么来着，我忘了，然后一直到今年还是一个二锅头的专家。哼然后10%的人是51到60岁之间，25%的人有是41到50岁之间。对，也就是说40岁以上的程序员其实在survey里面占到了将近40%.",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:10",
      "text": "还是蛮多的。就是这个中老年程序员，这个就真正的中老年程序。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:16",
      "text": "所以还长久来看，我们的节目是有很多受众。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:19",
      "text": "因为虽然我你们你们是会老的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:22",
      "text": "你们是每我们每一个人都会死去。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:26",
      "text": "然后我们的希望就是说在你们这个老去的时候，你们还没有变脱下这个就没有丢掉键盘，变成一个什么指手画脚的管理者。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:36",
      "text": "是对对然后真正意义上年轻的成员就是4 40岁以下的，31到40以及30岁或者更年轻，程序员占了62%。所以程序员的主力人群其实是31到40岁的。只是在欧美31到40岁.",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:53",
      "text": "的这这这这个也得换成程序员，壮年程序员。壮年成员就是30岁以下，我们算青年程序员。对，然后5 40到50怎么算呢？中年程序员，然后50到老年老老年程序员。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:07",
      "text": "50岁以上算老年程序员。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:10",
      "text": "所以我们现在还处于这个青壮年时代，还可以壮壮年程序员的时代。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:15",
      "text": "对我们离去拉什么前列腺的养护的广告还太早。Anyway, 然后years of experience，有24%的程序员有20年以上的经验。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:35",
      "text": "要么他开的特别特别早，开始的特别早，要么就是干的特别看干的特别久。",
      "speaker": "发言人1"
    },
    {
      "time": "00:52:41",
      "text": "对，然后17到20年17到20年的有70%，3到16年的有15%，19到12年的有18%，5到8年的有18%，然后少于五年的有15%。所以我们可以看到这个领域一直都是或者程序员这个工种一直都是有不断的新鲜血液进来的。他的这个经验的分布比较均匀，没有说比如说什么19到12年的有一大批就是30%，然后剩下来就没人了，或者是反过来是金字塔型也没有还是一个比较我觉得这个比较稳定的行业。因为有时候我们就会经常会说什么夕阳产业不拉。但是从来不会说程序员这个职业是一个最多时候他如日中天，一般不会说他已经要完蛋了。所以对可以预计说持这个趋势还是会持续一段时间。",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:37",
      "text": "所以也就是说从另外一个角度说，如果你愿意做程序员的话，在你死之前应该一直都有工作给你做。不像说不像是什么，你可能做一个在这里说什么职业好像都不合适。但是我们知道有些职业是重用马上就要被机器淘汰了。但是程序员这个职业你不用担心这一点，所以你如果你愿意的话，你可以一直做下去。",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:01",
      "text": "因为毕竟你要这么想，因为那个谁那个马Michael Jason不是说这个软件禅师世界，就是离那句话的实现，我觉得还挺遥远的。我们现在在国内可能看你感觉有点这种苗头了。但其实你真的放到所有的行业来看，这个软件还远远没有产生时间到那个程度。你还要还有很多事情是需要程序员去努力的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:25",
      "text": "或者说软件蚕食界的程度在全世界是极端不均匀的，就是永远还有别的地方可以让你去蚕食。",
      "speaker": "发言人2"
    },
    {
      "time": "00:54:33",
      "text": "什么非洲之类的对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:54:35",
      "text": "将来还有什么火星、木星、OK。接下来看到一个段子，就是说这次送去木星的那个探测器不是叫朱诺吗？朱诺是天后天后，也就是给天后赫拉的这个存在打破了他的罗马名。对，他是朱比特的老婆。然后当年干了干泪发现木星的卫星的时候，是用木星的情妇的名字给木星的卫星命令。然后人类现在把大老婆送过去了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:11",
      "text": "就捉间。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:13",
      "text": "对，这是一个相隔400年的scientific joke。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:20",
      "text": "心机太深了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:22",
      "text": "没错儿。对，然后这篇报告还有别的一些事情也蛮蛮值得读一读的。比如说他列出了各种语言的使用各种语言为主力的程序员的薪水标准，最高是他给了一个range，然后这个range里面标了一个中位数。Range最高的就是最我猜想拿到应该。",
      "speaker": "发言人2"
    },
    {
      "time": "00:55:53",
      "text": "是LMMML系的程序员。",
      "speaker": "发言人1"
    },
    {
      "time": "00:55:57",
      "text": "不管对比较接近。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:00",
      "text": "对OK.",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:02",
      "text": "最高的是scala和closure。如果你写scala和closure的话，你有可能年薪超过150K.",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:14",
      "text": "感觉硅谷对此贡献甚大对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:17",
      "text": "这肯定的。这一看就是那种非常high tech的公司，然后又是基于JVM的公司在在搞这种事。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:27",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:28",
      "text": "然后最低的是PHP1点也不奇怪。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:34",
      "text": "对，这不是我们黑的，这事实如此对吧？对，就是科学数据。",
      "speaker": "发言人1"
    },
    {
      "time": "00:56:39",
      "text": "对PHP的最高值是100K但是这个最高值还已经低于很多语言的中位数了OK对，然后CSS也是比较低的，但CSS不能算语言，说实话。",
      "speaker": "发言人2"
    },
    {
      "time": "00:56:59",
      "text": "前端开发者死了一大片。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:01",
      "text": "吐血在地。对，然后go和swift，不go和objective c都超过了100K然后也是排名相对来说比较高。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:11",
      "text": "我还有旧swift.",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:13",
      "text": "对，然后swift要比而不是C要高一点点。对python是一个范围比较广，然后非常中庸的语言。它的中位数比100K稍微低一点点，然后低位数接近PHP，但是比PHP也是要高上。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:31",
      "text": "幸亏我及时换船逃走了。我。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:35",
      "text": "对，然后对java也是一个range比较广的语言，总之还是蛮有意思的，就从一个侧面证明了一些事情。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:48",
      "text": "大家也可以可以看一下，到底自己处这个处于行业的什么水平，是到底是贡献了，还是脱被就被平均了，还是平均。",
      "speaker": "发言人1"
    },
    {
      "time": "00:57:56",
      "text": "了别对，有可能我觉得有可能说这个还是比较反映了欧美市场的状况。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:03",
      "text": "对，意思就是说我们看完之后，如果觉得是拉了大家的后腿，还是要保持一个相对平和的心态。这个还是有地区差异在里面。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:15",
      "text": "没错。然后这一次而且这次反馈里面，CE和C加程序员加上java程序员超过了60%还是70%，这基本上是工业界的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:25",
      "text": "一个反应。哼对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:58:28",
      "text": "PHP在这个PHP产权的这个报告里面占只占第三位。作为一个全就世界上最好的正面来说，就是比较反常。",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:41",
      "text": "有点意思。所以其实这现在回过头来看，就是当年学java的那帮人，现在看他们其实是什么技能使用时间最长的。那这一波了，应该是对，从这从那个写可以那种看当年可以写applet对吧？后来有那个java 1E可以写enterprise，现在就可以写这个mobile对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:05",
      "text": "对，这样是一个非常对实际上的确是一个非常长命，也是非常泛用的语言。所以如果你实在是一定要保住饭碗的话，的确可以至少先把java弄好。而且这是一个范围比较宽广，但是又不那么难以理解。不像C加加就是你可能会学到死，但是这没有不太多，但是你愿意深究的话还是可以深究。大学就是JVM那一块，JVM里面有很多奇技淫巧。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:34",
      "text": "是过去学家长大部分时间在学界面怎么调优。",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:41",
      "text": "看你干什么了。对，有些人是一辈子都不不会怎么去bio GM，但另外一些人可能他对那些flag已经熟的不能再熟，好吧？对好啊，对，这个话题可以说到这儿了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:59:59",
      "text": "那就进入今天的正餐。WDC算有点晚了，已经晚了多少？快一个月了。这样我们还是按先按出场顺序大致介绍一下有什么亮点的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:13",
      "text": "好。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:16",
      "text": "简单过一下。有那个可能一出来就是watch OS3对吧？大幅度的改改提高了英文启动的速度。反正看演示，包括后来看大家用的那个beta版的时候都说确实不用再等你你。这以前我老是抱怨了，你把手举起来，然后开一个应用对吧？然后你在一直在转转转，然后那个表已经熄灭，就自动熄掉了，它还没有启动成功。",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:42",
      "text": "没错，我觉得有可能也许如果如果他演示那些都是真的的话，那那可能你买apple watch你心里会更会稍微多一点。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:53",
      "text": "对对对，但他们用测试版的人说，还真的有那么快，就说还是挺不错的。当然了，OK实现这怎么实现这一点？我也挺怀疑的，因为其实可能之前也有在偶尔提到过，那个watch OS最开始的时候就太多没有用的那些应用挂在里面。它要保证它不能让所有人都注重内存，所以肯定就要不断的去折腾。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:20",
      "text": "但其实你也有差不多一年多，快有快两年了吗？一年多是吧？一年多的这个使用来看，其实没有那么多的应用大家会在表上用。所以就个别的一些常用的应用，你常驻内存其实也还可以。虽然就512兆。",
      "speaker": "发言人1"
    },
    {
      "time": "01:01:41",
      "text": "你用哪几个我觉得了不起，我就用fitness闹钟。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:46",
      "text": "face，我现在已经不代表了，我先说明一下，代表的时候用的最多的是那个，但时间肯定是一直都有的。然后那个收消息，还有一个是什么来着？地图本来是最想用的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:03",
      "text": "但是地图我从来不用。我现在发现。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:05",
      "text": "因为老是打不开，就没有办法。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:08",
      "text": "而且非常卡对对，好吧，你有我曾经用过一两次，就是它给你一个它有一个功能，就是你比如说你要步行导航到从对，然后到转角一下拍给你看一下表，你就知道应该往哪边转。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:24",
      "text": "抖两下就是右还是抖三下是左还是这样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:27",
      "text": "我忘了是吗？我每次都是抬着手腕。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:30",
      "text": "来看是不是他会抖的，就走到路口的时候，他会说抖两下，好像是右转，抖三下还是左转这样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:36",
      "text": "天哪，好吧，我但是我就用过两次，可能因为。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:40",
      "text": "你说的太慢了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:43",
      "text": "对，而且总是希望有一个视觉确认，但是这就造成你走路的时候总是在看表，那何必？",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:52",
      "text": "对，有一种强迫症的是奇怪的感觉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:54",
      "text": "是对，就好像你在算自己从一个接口走到另外一个接口花了多久一样。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:00",
      "text": "给周围一种你这个特人特别珍惜时间的感觉。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:03",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:06",
      "text": "还有一个比较大的改动是啊，他把以前他不是有很多小点点，那种应用图标更就很小很难点那个东西去掉了，改成类似于那种command加tab切换那种感觉的一个APP sweeter。我觉得这个是个挺棒的改动，因为之前那么多小点点真的是，当然一个是因为启动慢，第二个就是因为其实大部分应用都没有，并没有什么卵用对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:31",
      "text": "所以摆在那儿只是他们只是做一个装饰品的感觉。对对对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:35",
      "text": "然后平白的浪费空间和流量去更新，他们其实没有什么用。他们这次改了，其实我觉得就等于说是推翻了之前那套设整个设计理念。其实是就是说其实你表不应该有那么多花花哨哨让应用开发者去弄的功能。你应该聚焦在少数几个真正有实际意义的应用上，并且把他们的体验做到足够好，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:59",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:00",
      "text": "大概是就我这两个是印象比较深刻的。然后等他这个正式出的时候，我准备再把表捡回来戴，看看有没有说还能坚持下去的这么一个有用性吧。因为现在本来现在深圳也挺热的，然后不想打一个洞在流汗，因为我就比较容易流汗。汗斑和那个晒的一个影阴影还是一个挺麻烦的事儿。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:26",
      "text": "我现在最大的问题就是左手代表那一块是白的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:29",
      "text": "没有黑，已经晒成什么对表，一个白色的印子了吗？对，这个挺不爽的。下一个我觉得比较重要的是那个TVOS的两个更新，就apple TV apple TV几，那个是四。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:46",
      "text": "好像是对它有一个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:47",
      "text": "叫做live to in的功能。这个当时演示的时候我特别惊异，就是我们看电视可能都有这种感觉。就是你打开电视，那你只要按开，传统上你只要按开电视，那个节目声音马上就出来，然后视频马上就有了，对吧？因为它是一个模拟信号，就模拟的过程。但后来现在改成那个数字电视，特别是现在各种什么安卓智能电视，开机要30秒。",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:12",
      "text": "现在好多电视开机有一个过程，比我当年486开机还慢。",
      "speaker": "发言人2"
    },
    {
      "time": "01:05:18",
      "text": "对，这是我吐槽很久的一个事情。这个东西先不说，就放我们把中国出现的这种智能电视这个事情先放一放就我们在网上点那些看所谓网上点播的时候，其实并不能做到你点开它马上就播放，对吧？它其实有一个叫什么缓冲，然后buffer要一小段，然后要转一个小菊花，你才能过一会儿才能看。然后他来展示的那个live chain的功能，其实就把之前那种传统电视那种感觉找回来。你再点一下那个节目就马上就已经开始了。我不知道他怎么做到的，但是我觉得这个体验还是蛮蛮不错的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:58",
      "text": "对我觉得苹果公司经常会把一些，我们其实觉得他应该是那个样子。但是三华三位就其他的tag厂商都没有在意的一件事情。比如说就电视开机速度这件事情，别的厂商到底是做不到呢？还是觉得消费者可以接受这一点。而我们好像也是温水里的青蛙一样，就好像觉得好吧，这次慢3秒还可以接受，然后下一台过上五年的其他电视，现在已经卖到30秒了。我就你会觉得经常会说，我靠，我们是怎么走到今天这一步的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:34",
      "text": "对，就这个。所以现在我就你看我都不怎么买电视或者买电视。大家去看一下有没有，老板有没有4K老板有没有4K分辨率的不是智能电视的电视？他们说没有。对，挺挺悲剧的。TVOS还有一个比较易用的一个改进，就是那个single song。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:00",
      "text": "对，就是一次性的用自己的苹果账号登录里面所有的就对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:05",
      "text": "就是你用那个苹果账号登录那个apple TV之后，里面它每因为每个他因为那APP地方很多那个节目都是付费订阅的。对，过去你都是要搞一个什么号，每次要输一个。那现在如果你一个节目多起来之后，你发现我有比如说不是不说十个那么多，比如说你有五个，你每次输一般账号密码也是够你受的了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:26",
      "text": "对吧？对，上次我这样找一部剧，然后在apple TV里面找什么。一开始觉得先去看看amazon prime有没有prime要登录，然后netflix又要登录。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:39",
      "text": "对对对，特别烦这种问题，所以这个事情我觉得挺好用的。所以于是问题就来了，我想mac上面什么时候能做到这一点？",
      "speaker": "发言人1"
    },
    {
      "time": "01:07:50",
      "text": "我觉得这样挺危险的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:52",
      "text": "你不觉得吗？我觉得不会，如果他那个系统实施的好，应该还问题不大。因为其实无非就是把银你愿意用吗？不就这个，就无非就是把你把那个，你把这个用这个账号密码这种方式去你自己变成用密码管理器。那密码管理器就是苹果系统自带的一个过程。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:15",
      "text": "好吧？对，所以反正我觉得如果要移植到电脑上的话，那每次登录的时候最好还是验证一下。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:23",
      "text": "对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:25",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:26",
      "text": "这是TPS，我觉得两个比较让我称道的，一个更新，一个一个改进。",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:36",
      "text": "I apple TV上面有指纹识别器吗？好像没有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:39",
      "text": "没有，怎么可能会这个好吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:08:42",
      "text": "因为我在想说如果要移植的话，最好那个ID是吧？要控就是我如果我在电脑上要登录网站的时候，直接因为因为最近我在用一个我换了一个银行，然后这个新的银行的网银就是你在允许支付的时候，只需要用指纹锁打开它的一个专门的授权APP，然后在授权APP里面按一个按钮就可以了，就不用再输什么密码或者是啊这个扫码都配吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:13",
      "text": "Apple pay那种体验。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:15",
      "text": "对，就是apple pay那种体验。但是它它是在网银上面做的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:20",
      "text": "OK明白。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:21",
      "text": "对，因为德国很多事情都还是要转账，或者是信用卡。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:25",
      "text": "不够发达。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:27",
      "text": "的对，或者你要用新卡的话也可以，但是很多德国人都会选择转账something。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:35",
      "text": "因为信不过，信不过银行，钱要自己囤的，家里现金最好。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:40",
      "text": "对，因为是而且另外一方面信用卡的确没有这个系统安全的，因为特别人是非常注重安全的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:49",
      "text": "毕竟是经历过两次世界大战，通货膨胀和那个不是hyper inflation的时代的德国公民，还是有深刻认知。",
      "speaker": "发言人1"
    },
    {
      "time": "01:09:59",
      "text": "对对于通货膨胀和这个财富消失财富蒸发的恐惧，已经印在德国人的基因里了。然后我觉得其实这个体验完全可以移植到其他的APP上面。比如说什么github登录的时候，我要是能直接用一个指纹做解锁，然后验证就可以了，就不用输什么验证码。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:25",
      "text": "但那个要求你得装好多好多这种登录客户端。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:32",
      "text": "对我的意思就是说如果这一点能够被移植到电脑上，就像那个TVOS的那个single sign一样。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:39",
      "text": "大家明白，就我有就以后都不用什么验证码，用什么two factor，这也是一个two factor，something you have你的大拇指对吧？对，那就肯定被人砍去了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:10:52",
      "text": "对，one room to rule them all, 这种感觉还应该还蛮好。",
      "speaker": "发言人2"
    },
    {
      "time": "01:10:58",
      "text": "对，说到这个，就自然而然的就是今年的mics改名了。OSN叫maco macs micro s MC OS ten.",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:09",
      "text": "现在叫做MC macos macros ter。对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:13",
      "text": "以前老师说OSX这个事情就不用再再争执了，大家都叫什么叉叉OS了，有IOS、TOS、watch OS和macos。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:25",
      "text": "我们我们终于可以把所有这些名字又又对齐。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:28",
      "text": "然后OS都是等都一样的了。因为他那个但是地上那张幻灯片确实是都是右就是字是右对齐的。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:37",
      "text": "然后新一代的Michael s叫做。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:41",
      "text": "sara c他们谈的sara sera就是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:45",
      "text": "按那个西班牙语的念法应该叫sara。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:49",
      "text": "CA是一个英文解释，是a one jack mountain chain。",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:56",
      "text": "雪落山，就是雪山就雪乐山。我看到这个名字第一想到的就是有一个游戏叫做什么来着？国王密室的那个国王密室是我小时候我们好吧，我小时候玩肯定玩过你不一定玩过的一个游戏。King's quest它是一个画面解谜游戏。你不是你有没有玩过猴岛小英雄，或者是啊我现在想最近好像没有这种游戏出现了，就是你操纵一个人，不是你看你在屏幕上看到一幅画面，然后你可以点里面的。比如说一个箱子，然后你主角会走过去研究那个箱子，然后跟那个箱子互动之类的，就是这种点击解谜类的游戏当时非常的火。因为那个时候的电脑机能不足以支持什么实时3D或者是什么的。它是非常的原始的那种纯色的方块来画一个数，然后你你点一个你点里面的一个是什么部件，然后主角会走到那个部件前面。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:07",
      "text": "那个时候因为机能比较差，所以这种游戏是非常容易做，也非常容易也也非常好的，比较好玩的。因为那个时候没有更好玩的出现，然后这个公司sera entertainment就做了很多类似的他们最有名的一些游戏叫做kings quest国王密室。然后他们的logo就是sara internment的logo，就是雪乐山的那个剪影。雪乐山实际上是就在那个黄石公园，还是像黄石公，还是反正在国家公园里面最长的一个山脉OK。然后学科生现在属于暴雪，他买车。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:47",
      "text": "买收购了是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:49",
      "text": "他把它收购了。以前是因为出了一个什么丑闻，就是反正雪雪乐山做账出了一个大丑闻。然后那个时候公司业绩还是不错的，但是一下子就慌了，然后一次裁员了几百个人。然后许多山的这个他们一开始是个制是一开始是一个发行监制做的工作室，后来就变成了一个纯发行的公司。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:14",
      "text": "你们看啊，对，还有这段历史我不知道。",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:18",
      "text": "所以sara这个名字对于我来说不是特别的忙，或者对于游戏迷来说应该不是特别陌生。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:23",
      "text": "好吧，大家这样印象深刻了再强调一遍，那个重音在第二个，就是那个字母E不是不是在第一个SCRA。",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:35",
      "text": "对，就是西班牙里面，西班牙里面没有连连读的双元音，对不？西班牙。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:42",
      "text": "sorry，这是个西班牙的词是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:14:44",
      "text": "这应该是西班牙语。如果他念CR的话，那应该是西班牙语。因为两个R然后念法又是一A就是西班牙里面没有双元音也应该也不奇怪。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:56",
      "text": "因为加州很多地名都是西班牙哑语的，什么l cap ten也是西班牙语的对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:01",
      "text": "对对对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:04",
      "text": "OK说到这个mac s这个新版，其实我觉得最最好玩的一功能就是如果你有那个apple watch，然后同一个apple ID的它可以就自动解锁你的这个mac。你平时离开桌面，比如说超过一分钟的时候，你会锁你会桌面上锁。",
      "speaker": "发言人1"
    },
    {
      "time": "01:15:25",
      "text": "我在办公室研究也有这个习惯，因为我我办公室的对面坐对面的人是管那个数据隐私的，然后他非常强调说离开桌面椅子。对你离开桌面一定要锁屏幕。然后我现在基本上锁离开桌面之前就会就在我站起来的过程中就会锁屏幕。",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:46",
      "text": "好奇怪，我有个麦克有个功能是可以做那个触发角，就屏幕的四个角就可以，鼠标移过去，它会触发一个特定功能，你可以设置的。然后我的有一个角是设置成锁屏的，我可以我我离开桌面超过，比如说就是不是叫做什么，就是我我离开那个电脑的视线范围的话，我就会把它锁锁起来。但是回来的话你要换一下鼠标，然后唤醒那个屏幕，然后再输入那个登录密码进去。我还我就就还挺麻烦的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:23",
      "text": "然后有了这个自动解锁功能，理论上就是说我只要带着那个表，然后坐下。他是好像是他说是通过那个蓝牙来解来来出来判断你你带那个表的人是不是离这个笔记本很近。就某一个就是5米之内，举个例子，那就可以自动解锁，你不用再输密码，这个东西功能挺棒的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:16:48",
      "text": "但是后来在就有人问那个federal这个东西的安全性怎么保证的问题。当时他说了一个让我很吃惊的事情，比如说因为它是通过这个蓝牙来判定你是不是在那附近，对吧？然后有人那有人就说那我做一个这个蓝牙的这个就叫啥中转器。虽然说我我虽然我可能在另外一个地方，另外甚至另外一个城市，对吧？然后我把我找一个中转器去搜到你那个手表的发出的那个蓝牙信号，然后通过网络把那个信号传输到你电脑附近的一个蓝牙发射器。那再去等于是模拟你在表在那个附近的感觉，那个信号会不会就这样解锁你的电脑了？当时他们说他们的解决方案太恐怖了，他们说他们计算光速。",
      "speaker": "发言人1"
    },
    {
      "time": "01:17:37",
      "text": "我去就是。",
      "speaker": "发言人2"
    },
    {
      "time": "01:17:38",
      "text": "计算那个那个信号发出的时候和传输到就被笔记本接收到的时间，它不能超过多少的。就是哪怕你用光速来传输，因为那个电磁波是光速的，在真空中，不在空气中，大致上是光那个真空中光速差别不大，他们会计算这个东西，如果你超过了多少的一个阀值，他们就认为这个是阈值。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:02",
      "text": "阈值哥哥爱爱。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:04",
      "text": "阈值最hold可以吧？Threshold就是阀门的阀和我知道你说那个门门里面有一个货，那个是玉，也有个叫玉，有阀值这个说法。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:16",
      "text": "你没有阀值这个说法，伐值是文明发明出来的。真的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:19",
      "text": "我又错了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:21",
      "text": "法治是阈值不会念的人念出来的。然后很多人以为这还真有法值和阈值的差别。其实上世界上根本没有法制这个东西。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:29",
      "text": "为什么我打的是法值这两个字呢？",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:35",
      "text": "Oh my god，不，现在法师如此的以讹传讹，以至于它已经出现到那个正统了是吧？已经出现在PPT输入法里面。但是为了成为了法之这种东西，对，没错。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:46",
      "text": "OK通假字，古人的错字就是通假字，对，OK anyway, 阈值special，就判定你那个我觉得这个真是太黑太暗黑了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:03",
      "text": "电脑可以好吧，这是电脑的处理速度，可以真的区分出两个光速传来的信号吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:10",
      "text": "OK算那个，算那个那个RTT pin time，也是就毫秒级别了，你算一下光速每秒是30万公里，就是30万米每毫秒，就是30万，30万米就是300公里每毫秒，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:32",
      "text": "对不对？也就是说在如果你的处理速度是。",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:38",
      "text": "就假设我们精度控制在比如说10米之内好不好？需要十秒的话，需要多少的处理速度？10米除以30 10万到底多少个0？",
      "speaker": "发言人1"
    },
    {
      "time": "01:19:50",
      "text": "后面对这个回头再说。但是我觉得有可能就是也许你跨城市破解做不到，但是可以做到。比如说人在一楼，然后他把。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:02",
      "text": "他顶楼的2楼的对对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:06",
      "text": "这个有可能是可以做到的通过。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:07",
      "text": "对，所以我就一直很好奇，到底有这个东西，这功能出来之后要来试一下。但我不知道用什么设备，就是用什么设备，就是你得你得找个这个蓝牙的这种叫做什么for water是吧？转转发器我还从来。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:24",
      "text": "没有听说见过这样，听说过这样的东西，都没有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:28",
      "text": "应该是有的这种。因为他他甚至都不用处理这个信号，他只用把收到的转发出去。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:33",
      "text": "就像那个wifi的扩放大器一样。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:35",
      "text": "对对对，那个extender一样，就应该很简单的，就在电器上应该。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:40",
      "text": "是不复杂好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "01:20:42",
      "text": "Anyway这个是我觉得蛮期待去尝试的一个功能。但是因为现在我的那个电脑都是工作用，那也不敢去贸然去装个贝塔板上去这么搞，就先放一放再说。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:56",
      "text": "我觉得增强安全性还有一个可能性，就是你必须要戴着表做出一个特定动作，比如说晃手腕儿之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:02",
      "text": "要confirm一下是吧？对，那就没有意义了。你要看confirm一下，你还不如输密码。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:08",
      "text": "就是你比如说屏幕上出现shake your hand to unlock，那你可能你只需要晃一晃手腕，这比打字那个手眼协调去找准键盘要方便多了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:21:20",
      "text": "Maybe我不知道他这个东西的实用性到底怎么样。好，因为他也他也好像有演示过一下，但是我没有事后没有去跟进这个事儿，还有一个功能就是涉及到一个很古老的笑话，就是你应该听过那个笑话。",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:40",
      "text": "就是有一个c control加V对对对，要不要讲一下好笑话，没听过的朋友们，行吧。其实这个笑话有好几个版本，最简单的一个版本是一个秘书在给老板打电话，是张总不行，您在这台电脑上按control加41到另外一台电脑上按control加V是不是行的？多贵的电脑都不行。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:04",
      "text": "没错，但是这个消耗很快就要变被苹果变为现实了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:09",
      "text": "对，其实这个笑话在大概前年的时候，apple出的又不是不是个apple，苹果出的不什么，只不过太阳google在google dox里面出了一个什么cloud clipboard之类的东西。对对对，就那个时候其实已经可以了，只不过不是大范围，那只是在那个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:27",
      "text": "google dox里面可以用了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:29",
      "text": "对，是对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:30",
      "text": "这个所谓的叫做universal keyboard的功能叫做什么？通用剪贴板就可以使得你在一台电脑上粘贴复制，然后在另外一台电脑上粘贴。粘贴还是粘贴OK我们上次讨论过这个问题，但这个要求是你两台mac都是用同一个apple ID登录，这样它可以通过i cloud去传剪贴板里面内容。对，但是我个人觉得我这个还是好吃，不卡卡到还好。我个人对这个东西的最大的疑惑就在于艾克老实在太不稳定了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:13",
      "text": "这就是卡，就你他的鲁棒性不能得到很好的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:23",
      "text": "对，所以我很怀疑这个功能出来之后，它的因为不可靠而被大家遗弃的或者不用的概率应该是挺高的。好吧，还有一个是比较有用的是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:41",
      "text": "他把那个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:43",
      "text": "桌面，就是你的那个你的桌面是你的更加目录下面的一个文件夹叫desktop，对吧？对他把那个那个目录用那个i cloud同步起来了。这样使得你在不同你的同一个apple ID登录的不同电脑上面，它的桌面应该是保持一致的。这样的一个drop，就像好像你这个桌面是一个draw x folder一样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:06",
      "text": "当然也是这个也会助长大家在桌面上。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:09",
      "text": "乱扔乱丢东西的习惯惯。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:11",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:12",
      "text": "但同样的原因，我还是觉得I靠的可靠性其实还不太好。所以我也不太确定这个东西的可行性怎么样。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:21",
      "text": "反正i cloud drive在我这边经常是传到99%。就是它i cloud drive在同步的时候，不是会有一个饼图，那个饼图吗？饼图，然后那个饼图经常赚到99%，就差最后一丝儿就卡了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:35",
      "text": "再也不动了。对对对，前面那个转那个都是骗你的，就是后面再传，因为卡住了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:43",
      "text": "没错。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:45",
      "text": "还有一个功能叫做option my storage优化存储其实也是跟i cloud相关的。但是我觉得这个东西会挺挺危险，就是你可以设置哪些文件，你可以不常用，然后它可以放到i cloud里面去，然后从你的本机删掉。因为这样那样的原因，很多人的这个mac的存储空间不太够用了。因为他卖的是买的是128GB和这个存储的，比如说macbook air对吧？就很尴尬，所以出了这么一个替代方案。当然我觉得也会给很多人带来一个问题，就是你比较想用一个文件，然后这个时候你就没有网，然后发现那个文件不在你本质上，对吧？就比较久。",
      "speaker": "发言人1"
    },
    {
      "time": "01:25:29",
      "text": "这上面几三三个功能都是跟i cloud直接相关的。所以大家一定要保持警惕，千万不要被他们又骗。了这次safty还有一个重要更新，就是它可以支持saffy里面这个apple pay，就是mac上面safer用apple pay。但是其实和之前传言的不一样，说是原生就可以支持，其实并没有，是要通过你的通过这个iphone和或者是这个apple watch，就是说它你在使用是吧？对你可以在那个support里面点击用这个叫什么apple pay。但是实际确认的时候，你是需要在手机iphone或者是这个apple watch上点一下的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:12",
      "text": "所以这其实也是个两步认证对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:15",
      "text": "这肯定是两步认证。那就是说我想之前大家会觉得哎也不一定，因为新的那个macbook pro还没出来，有没有指纹识别还不知道。但是如果没有的话，就只能接着用这种方案来实现了，因为没有办法用第二个factor。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:32",
      "text": "还有一个这个我不知道算鸡肋还是什么样的功能，就是画中画模式。就跟现在ipad上，我不知道你们很多人留意到有一些视频是可以扶出一个小窗，然后你可以再去干别的事儿。因为这个是在比如说屏幕的一个角放那个视频窗飘在那里，然后你可以用其他应用也不。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:54",
      "text": "影响what有这样的应用吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:57",
      "text": "大ipad上很多应用都是这样子的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:26:59",
      "text": "好啊，我可能太久没有用过分屏。你。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:03",
      "text": "没有在吗？Youtube可以，你你没你没有在那个ipad上看那个视频是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:10",
      "text": "我看视频，但我从来都是好吧，那我可能是我沿袭了以前的习惯，就是看的时候就是全屏一直在那看。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:17",
      "text": "你不干别的，也不用ipad干别的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:20",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:22",
      "text": "其实那个youtube他之前就是在那个画中画模式官方出来之前，他还自己干过一个事儿，就是他在应用内部是可以画中画的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:29",
      "text": "这个我知道。对，这个你这对于这一开始是给很多DJ准备的，因为很多DJ在用youtube切歌的时候。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:38",
      "text": "他要去选择。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:39",
      "text": "他要去选别的歌，但他不能终止目前的那个是音乐的播放。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:44",
      "text": "对我觉得你知道哪个应用最需要画中画模式吗？我觉得微信最需要画中画模式。",
      "speaker": "发言人1"
    },
    {
      "time": "01:27:52",
      "text": "OK你的意思是把微信当成一个常驻，不是因为。",
      "speaker": "发言人2"
    },
    {
      "time": "01:27:57",
      "text": "微信不是有那个叫什么公众号，公众号你读的时候，你就不能收消息了，对吧？不然你退出去，你回来那公众号文章中就跑掉了，那个那个滚的位置就不就不在那里了，所以应该把那个文章单独丢到边，一边做个画中画模式，然后你再去回完消息，然后点开把那个文章接着读下去了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:28:19",
      "text": "OK我基本上不看公众号，所以我也不看。但是有时候意识到这个痛点。",
      "speaker": "发言人2"
    },
    {
      "time": "01:28:24",
      "text": "好吧，别人会转一个东西给我来，有时候还得看一下，那没办法。",
      "speaker": "发言人1"
    },
    {
      "time": "01:28:29",
      "text": "好。",
      "speaker": "发言人2"
    },
    {
      "time": "01:28:31",
      "text": "然后就是这个siri了。Siri当时放到后面一块讲，先把另外IOS上面的更新过一下，IOS这回更新东西就蛮多的了，应是应用性。应用性更新最大的一块就是什么叫做rest to make？不是应用易用性不是功能。就是说它做了一个功能，就是你拿起来iphone它就直接点亮，就不用再按一下电源键了。这个东西就特别有用，在哪里呢？就是因为现在不是那个指纹识别了，其实挺快，你按一下就可以了。但是如果你可以read week的时候，你可以直接放到那个那个home button上面去，都不用按下去了。那很多人就可以说，我这个又少用了一下我这个按键，对吧？这个脆弱的这个home键，吓得都已经要在那个屏上飘一个小圆圈辅助按钮了，天哪，可以解决一个问题。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:27",
      "text": "判断朋友标准就是看他有没有打开assertive torch touch。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:33",
      "text": "非我族类，其心必异。",
      "speaker": "发言人1"
    },
    {
      "time": "01:29:35",
      "text": "拖出去砍了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:29:40",
      "text": "然后就是siri了，刚才讲的那个麦克风siri就是说因为你之前max上没有siri功能，他这回整合进去了。但是这回IOS思维搞了好多新花样，我说三个最我觉得最有意思的，但是这个肯定大家有个肯定比较兴奋的。第一个是siri API可以打开那个什么siri kit的东西，ri kit. 对，可以让第三方应用也响应siri的这个command命令。",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:06",
      "text": "对，而且我看了一下，就是siri实现起来还是比较简单的。你只是。",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:11",
      "text": "因为它只支持那几种固定的那种形态，那什么叫句式，还是叫什么来着？甚至对配置它有一个固定的结构，就是说它把会把所有的这个语音的指令都转化为一个固定的命令的一个结构给你。然后你就用注册，你要探测哪几个关键字或者哪几个叫做action或者是动作，你再想一下九就可以了。功能其实是挺受限的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:30:37",
      "text": "但我觉得就是要写两个extension，就是optionally写一个extension，另外一个是必须的，就是这个必须得extension负责处理intent。然后那个optional extension是可以来给一个自定义的UI来显示结果，除此之外什么也不需要做对对，我觉得这个API其实它最神奇的地方就是它最重要的一个意义就是siri那个把语音转转成intent的过程是当做一个magic box给你用了。对，然后你自己什么都不用操心。",
      "speaker": "发言人2"
    },
    {
      "time": "01:31:13",
      "text": "他要解决的一个核心问题就是说不同的人对同一个意图，我们叫intent。这个意图的的描述其实有很多种的。比如说举个例子，siri你给我挂siri发一条短信给吴涛，或者说siri给吴涛发发一条短信这个命令？它有很多种不同的表述形式。过去的话传统的语音就是说我直接把这个叫做voice to text，就是speech to text转化成一个文本。把刚才的那句话都给丢给你，你自己去想怎么去找出里面的意义出来，像这样就给开发者挺大的麻烦。因为你除了考虑这种千奇百怪的句式之外，对吧？还得考虑各种很奇怪的这个叫什么场景组合。",
      "speaker": "发言人1"
    },
    {
      "time": "01:31:59",
      "text": "他那这回就说这个事情系统帮你搞定了。虽然说限制会很多，但是我只用告诉你，不管用户怎么说，他只要的意图我大致猜出来八九不离十是这个我就调用你对应的这个APP extension就可以了。当然这个就是一个取舍了，就是说把这个功能结构做的比较有限。但是希望是能够在这么有限制功能上做出更好的可靠性和易用性出来。而不是像之前做表那样，什么都还没弄好，先堆一堆小圈圈给你，最后一个都没没一个好使了，对吧？当然具体怎么样，还是要等这个正式发布之后，大家各种应用跑出来，我们来看一下到底是骡子是马。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:45",
      "text": "对，反正我现在siri还是基本上不用的。我不知道你我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "01:32:49",
      "text": "我现在还可以，唯一用两个事情。一个是算闹钟，那个是射那个就是多少秒后提醒我，就是说那个叫什么就come down那个。",
      "speaker": "发言人1"
    },
    {
      "time": "01:33:00",
      "text": "就他最简单的那个sorry，再打断一下，就是他最近那个context，你只能满足非常有限的东西。就比如说设定闹钟，不要把它取消，大概类似这样的话才能听懂，比这个稍微复杂一点都不行。他记不住上下文。对，他不知道你到底要说什么，或者说他你就记忆力是跟金鱼一样的，就说完话就忘了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:33:27",
      "text": "对，但这个跟他后台的这个服务端的设计也有关系。因为如果他记不上下文的话，它说明它是一个叫做state list的过程。State你比较容易做那个扩展化的操作。如果说你要记住内容的话，你就变成一个statement。当然这个state可以你可以keep在这个本客户端，但其实我估计这么复杂的一个东西，可能还是要在这个服务端做一些事情。这样的话就存在一个session的概念了，对吧？对，那这是就是对吧，就这是你看做云计算这么困难的事情让苹果来做还是有点为难的对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:04",
      "text": "那人毕竟只是一个做硬件的公司，这种事情交给google就好了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:09",
      "text": "又开始黑。所以为了解决这个比较蠢的问题，他们今年做的第二个大改进就是加入了这个深度学习。据说加入了深度学习就是说能够第一个是能够记住更多的上下文，知道你在讲什么。当时他们演示的一个是说，比如说再放一个歌，然后你问他说这是什么歌，知道对你说是这个是什么东西，对吧？就诸如此类的。但是具体怎么样还得用过才知道，也是一个很美好的口号了。但能不能实现，我们看看再说。Siri的第三个功能，我觉得这个解决了很大的一个问题，就是你知道用C位可以做听写嘛？",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:53",
      "text": "嗯啊。",
      "speaker": "发言人2"
    },
    {
      "time": "01:34:54",
      "text": "包括那个键盘，你开了听写之后会有一个麦克风的图标，然后你按一下它它会。",
      "speaker": "发言人1"
    },
    {
      "time": "01:34:59",
      "text": "这个我还蛮常用的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:01",
      "text": "你还蛮常用是吧，你是用德语还是英语？都有是吧。就之前有个问题，就是它那个不能混合语言，你只能同意，要么你说德语他写出来是就你换到德语键盘。",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:15",
      "text": "我发现部分来说是可以的。比如说你在尤其是apple watch里面，有时候中文它可以把某些特定的词识别出来。比如说有一次我说什么，我去奥迪的经销商等你，还是什么我去奥迪4S店等你。4S店没听出来，但是他把那个奥迪转写成了AUDI，我觉得蛮神奇的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:42",
      "text": "OK你说你打的是中文对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:44",
      "text": "不是我在说中文。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:45",
      "text": "OK明白。对，这也是一个问题。当时大家也有些人已经感觉出来，就是watch上面的那个siri和iphone的series其实是后台是不一样的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:35:56",
      "text": "对，没错。",
      "speaker": "发言人2"
    },
    {
      "time": "01:35:57",
      "text": "对，但这个他也苹果也不会解释了，所以就这样的，但我估计就是为了测试，应该估计在测试那个新版本。现在就是反正现在就是说这个sie是可以混合语言的那理论上说我可以说，你知道经常知乎上老是黑的那种叫什么中国外企的工作语言，OK对吧？比如说这给我一张paper，你把那个paper email我一下好吧，给我一张配合就这种语句就估计就可以支持了OK，因为之前是不可以的，因为只能单一，就是起码在iphone上面的那个是只能单一语言的那你要么说中文，要么说英文，对吧？你根据就是你使用的那个键盘的语言来决定。但我就不知道，如果它是多语言的话，那这个意思就是说我切换就不用再切换键盘了呗。按按那个按那个叫什么喇叭的麦克风图标的时候，它就应该是单独的图标，而不应该是附属于某一个键盘了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:36:59",
      "text": "哼，对，这是一个问题。有用性怎么样？觉得还不太确定。其实我要求也没那么简单，不用支持很多种，你就支持个双语，我觉得够你已经挺满足了。就是把中英文或者说比如说对你来说是德语、德文和中文。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:13",
      "text": "或者你能把我列出来那些语言支持了就可以了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:17",
      "text": "对你可能是三语对吧？对，但有一些multi linguis可能就比较久了。对，一句话里面可能有5种语言的话怎么办？我不知道它的一个精准度会怎么样，特别是有些特别是有些语言，它里面有些词是叫什么是同一个词，但是不同的意思。对，这个是就是考验什么理解能力的时候。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:37:46",
      "text": "好吧，就看这个deep learning有多强了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:37:50",
      "text": "对，这个是siri的一个改进。下一个我觉得比较有意思，也是可能大家觉得比较好奇的一点是那个photos。Photos他这回再加了类似于那种oogly photos那种比较智能的功能。比如说什么人脸识别、分类，找里面的物件。比如说他知道这是个山，人家是一个狗这种东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:10",
      "text": "然后最神奇的是它是在这个deep learning，这个深度学习，它是在这个叫做on device，就是在iphone本机上实现的。它不需要你的图片传到这个云端去做这个OK，这个就蛮厉害的了。因为google的那个是要在云端才能做。然后苹果说不用，反正我们也不想出现照片，我们也担心隐私的问题，对吧？你就在本地做就好。为什么能实现这一点？后来我去做我去看了一下相关的一些研究报告，是这么一个逻辑。就是说深度学习就deeper learning，它它分两个部分，一个是training，就是配训练数据，训练那个模型。一个是inference，一个是推用利用那个训练出来的模型去做推导，去做新的数据规划的时候。",
      "speaker": "发言人1"
    },
    {
      "time": "01:38:57",
      "text": "他应该一个是打东西，一个是打一个是吃。对对对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:01",
      "text": "G打G吃只有在训练那个模型的时候才需要非常大的计算量。因为你要可能要训练好几百万的sample这个数据的样本，对吧？但是你一旦把那个神经网络，那个那个neural network那个模型，它其实网络本质上就是一些带连接的那种参数。那带参数的连接，那个参数是训练出来的。你只要把那个舱训练出来之后，你丢给他一张新的图，它是可以比较用比较快速比较少的计算量就能得出答案的对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:31",
      "text": "所以人类的学习过程一样的，就是你经过20年的学习，不一定需要把所有的书教材都带着，你就可以。",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:38",
      "text": "对对对完成。所以其实从这个逻辑上来讲，就是说在本机上做这个inference推倒，还是可以的。但就苹果可能得隔三差五的更新一下他的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:39:51",
      "text": "那个model，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "01:39:53",
      "text": "对的，然后重新给你。再比如说在那个系统更新的时候，把这个给补上就可以了。理论上是这样子，但是我不知道实际用起来会是怎么样。他们有些人去试了一下，据说效果还可以。但是还没有目前还没有看到一个比较完善的和用这个新的photos，和那个google photos做一个赛道赛的对比。",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:16",
      "text": "OK然后一个。",
      "speaker": "发言人2"
    },
    {
      "time": "01:40:18",
      "text": "有意思的是maps，就是那个地图。他这回最好玩的是他做了那个叫做magic tension，就是地图扩展应用。这个东西是怎么说呢？我不知道你在德国打车吗？",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:40",
      "text": "有很少。因为你你你在那个的时候。",
      "speaker": "发言人2"
    },
    {
      "time": "01:40:42",
      "text": "要么做你那儿有uber吗？你那个城市没有uber。",
      "speaker": "发言人1"
    },
    {
      "time": "01:40:45",
      "text": "我公司我可以打开uber，但是uber显示上面显示我周围一辆车都没有OK.",
      "speaker": "发言人2"
    },
    {
      "time": "01:40:51",
      "text": "那就是没有了。比如说我现在就是天天打这个滴滴，对吧？然后滴滴其实一个应用本质上就是一个地图。你要从里面从找到你在哪儿，然后你要说你输入你去哪儿，然后你叫个车对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:41:06",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:41:07",
      "text": "但第一那个内置的自己那个地图其实非常难用的。因为首先它不能显示很多东西。其实比如说我想做的一个工程师，我希望看到我设置的这个起点和终点之间的路线。你用一个正常的那个，不管是用比如说这个苹果自带地图也好，google maps也好，或者是国内常用的什么腾讯地图、百度地图。好，你设完七点钟点之后，他会他都会给你画画那个路线，对吧？你甚至还可以说有些高级的，你可以说选择多条，可就是他可能不止一个路线。可能比如说拥堵的时候，他给你画一条稍微远一点，但是没有那么堵的路，你可以选择不同的走法，甚至可以布多布几个点，做多点都可以。但是滴滴应用自己内置那个应用那个地图其实做不到这些功能的。但其实你就发现，如果你可以在某一个系统的地图里面，用这种地图扩展的形式去把这个叫车的功能加进去。那其实就不用再单独做一个滴滴一个应用了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:12",
      "text": "或者这么多再说，直接在apple的地图上面点一个点，然后从里面选择说叫一辆滴滴带我去哪儿之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:42:21",
      "text": "没错，这其其实就这个逻辑，其实我觉得就非常的颠覆了一些事情。就过去我们说做你不管你做什么服务，你都要做一个APP。然后再把这个首先你得有APP。对对对，其实很多事情你是不需要的，而且你自己做一个，你也不见得能比这个系统做的好。虽然系统做的也挺实的，另外一说可能在某美国的某些地方，比如说三番，对吧？可能还是挺好用的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:42:47",
      "text": "但这个的话这个东西出来的话，包括后面还会提到有message也有类似的事情，就是它会颠覆一些东西。就是说那我们是不是不用，如果你单纯做功能的话，你可以不用真的写一个非常完整的一个应用。你只那个应用只是需要提供一个map extension的容器而已。你真正的功能是在系统内部的一个组件上体现出来的。哼但这一点，其实国内的先行者们已经在这么干了。比如说你可以现在可以在腾讯地图里面直接叫滴滴，你可以在百度地图里面直接叫五本，好像是可以这样。那他们其实已经在跑起来了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:29",
      "text": "而且这是在云平台上整合了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:43:32",
      "text": "对对对，就是说在他们是自己自己是一个meta平台的这么一个内部的整合。毕竟都自己投资的企业对吧？能做这种整合我觉得也不奇怪。但苹果出这么一首之后，我觉得会有一些就之后会有一些不一样的应用或者不一样的玩法跑出来。就是我觉得map上面比较让我期待的一个东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:43:57",
      "text": "也许明年你就可以用苹果地图叫一辆苹果的无人车来建设一个地方我们自己的这个叫车服务。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:07",
      "text": "对吧？这深度就是无脑预测未来202，那么坐等2020年打脸了。而且这回苹果也投了投资了滴滴，对吧？那你是不是不可避免的想，这两者之间有没有什么必然或者是偶然的关系？",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:26",
      "text": "对，也许第一步就是先在苹果地图里面整合uber.",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:30",
      "text": "和滴滴之类的，uber估计整不上了滴滴。",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:34",
      "text": "OK我为什么不愿意？不worry也会应该不会不愿意。我觉得你为什么。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:41",
      "text": "苹果只投滴滴不投uber呢？",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:44",
      "text": "不他不一定投需要投滴滴。",
      "speaker": "发言人2"
    },
    {
      "time": "01:44:46",
      "text": "他只需要对他自己做个map tension，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:44:50",
      "text": "那那肯定sorry，uber的他不需要投uber，他只要跟ber说，你给我提供一个在我的地图上直接叫车的服务就可以了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:45:00",
      "text": "但是其实要解决问题还是蛮多的。比如说你要解决，当然可能这个是通过那个extension的方式去解决。比如说解决这个支付身份，还有那些其他积分乱七八糟的问题。这个可能还是要等九月份正式发布的时候，到时候估计有滴滴的人上台一站。",
      "speaker": "发言人1"
    },
    {
      "time": "01:45:18",
      "text": "我们来给你演示一下怎么在apple map里面通过这个对mac tension去叫个车对吧？然后现场开了个车把他接走这种事情。对，举个例子，然后就是啊这个这个这个应用是其实大家都没想到会有更新。就是这个phone就是电话那个应用本身，电话应用没更新了好吧，这个电话也支持这个extension，phone extension然后可以做什么呢？可以做那个电话拦截，之前和这个安卓手机都有那个功能，就是叫做，因为现在国内打那个骚扰电话不是特别多，骗我诈骗电话特别多。然后就是说那个安卓手机上那种功能，它都是国产安卓，那些贴心的小功能，就一个骗子电话打过来，这个号码之前被很多人标记过是这个骗子或者是什么乱七八糟骚扰电话，他会直接给你显示说这是一个骚扰电话或者一个骗这个诈骗电话你就可以不用接了，对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "01:46:20",
      "text": "对，我记得以前是我有个朋友Jessie，他在推特上发一个段子，就是什么样别人在用一个手机，他说你的手机怎么显示来电归属？然后那个人说早就有了你的手机不行了吗？然后过会儿有什么，你的手机能显示是个骚扰电话，早就有了你的手机不行吗？但是我用iphone没有这些。",
      "speaker": "发言人2"
    },
    {
      "time": "01:46:45",
      "text": "对对对，所以其实现在也有能显示来电归属了，反正对，但经常有时候会有点这样那样问题，主要是牵扯到国际号码的问题。我不知道你没有注意到，比如说中国区要是要加86，他裁判中国，然后再是省或者是哪个区，对吧？但是我好像没有。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:07",
      "text": "遇到过这样。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:08",
      "text": "我就经常会接到电话。是比如说他就直接显示号码，没有显示加86的话，那你显示是哪里呢？因为如果是手机中的时候，就是1113个数开头的，对吧？那其实就判断成美国了，是。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:21",
      "text": "也有。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:22",
      "text": "这种，有之前偶尔发生，我不知道，现在好像最近没有留意到了，可能有有算法有改进。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:31",
      "text": "好吧，因为我好吧，我好像没有遇到过陌生的手机号码给我打来电话的场景。因为我太大没注意到这一点，所以你没有接到过骚扰电话。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:43",
      "text": "德国没有骚扰电话，OK德国人就是手续善良的一个民族。",
      "speaker": "发言人1"
    },
    {
      "time": "01:47:47",
      "text": "不是，因为罚的比较重，你去告他，然后立刻就会被封了。而且你这你是你要是跟运营商反映的话，运营商也会把它封掉的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:47:59",
      "text": "是对中国还是这个不知廉耻的运营商太多了，还有并且法律书于这个处罚。",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:06",
      "text": "对我觉得是这样，其实就是市场管理规范的话，为什么手机上一直没有这个功能？不就是因为在美国其实用不太到。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:16",
      "text": "美国其实还蛮能常用。他们叫做什么？就是那个呃不是，他们对，是这种叫做电话营销那种东西。",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:25",
      "text": "好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:26",
      "text": "这还是蛮多的。其实中国现在其实解决方案也比较多了。现在你就很多人都不打，就是你看到一个号码没有显示名字，基本上可以不接OK。",
      "speaker": "发言人1"
    },
    {
      "time": "01:48:37",
      "text": "因为首先如果。",
      "speaker": "发言人2"
    },
    {
      "time": "01:48:38",
      "text": "是不太熟的人，你可能是通过在微信上认识。然后你干嘛想打电话给我？神经病，你干嘛想打电话给我，你在微信上发我发个消息给我就好了，不要打电话给我。然后如果跟你熟的人要经常给打电话的，你肯定有在通讯录上传他的名字，对吧？对，那剩下的都是可以不接的电话，特别是看着来自福建的福建来的座机或者是什么的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:49:02",
      "text": "更更不要钱OK。",
      "speaker": "发言人2"
    },
    {
      "time": "01:49:07",
      "text": "所以这回就是这个extension电话扩展，就可以使得你可以加一个这种钩子进去，可以做这个拦截。那应该有会有一些新的应用跑出来，或者是旧的应用，但是加了这个功能的。这个电话应用这回还有一个更新，就是他把那个VOIP就是voice over IP，就是叫所谓的整IP电话的权限扩大了，就可以去启用那个电话的来电那个界面。就是传统上比如说我我有一个我有比如说skype.",
      "speaker": "发言人1"
    },
    {
      "time": "01:49:45",
      "text": "skype算是skype call，是有一个自己的界面的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:49:48",
      "text": "对对对，但是skype他来的时候，就有有人打skype给你的时候，他其实只会在那个推送通知栏出一条这个信息，对吧？其实你也不知道，就是经常会miss掉。对，这回他这个风就是IOS10里面，他把这个类似于来电显来电的那个界面，就整个全面屏都是一个在电话。",
      "speaker": "发言人1"
    },
    {
      "time": "01:50:12",
      "text": "的打铃那样子。",
      "speaker": "发言人2"
    },
    {
      "time": "01:50:13",
      "text": "对对对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:50:14",
      "text": "那个功能用VIP的APP，可以让你电话抖。",
      "speaker": "发言人2"
    },
    {
      "time": "01:50:17",
      "text": "对，可以让你电话抖，而且可以显示，就直接接起来，不用开那个什么，不用开那个叫叫叫叫那个推送通知，划一下怎么去把它打开，等那么久，当然我希望就可以不用miss很多VIP的电话，主要是skype，还有另外有几个应用都是这种情况。对，那说到这个，好像很多厂家都在这上面做文章。微信海外版好像也开始有这么一个打电话的功能了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:50:45",
      "text": "然后微信有个海外版。",
      "speaker": "发言人2"
    },
    {
      "time": "01:50:49",
      "text": "就是他探测到你是海外用户的时候，他会给你提供一些不同的功能。",
      "speaker": "发言人1"
    },
    {
      "time": "01:50:54",
      "text": "我有比如什么我不是。",
      "speaker": "发言人2"
    },
    {
      "time": "01:50:56",
      "text": "你可以打开注意到，可以免费打电话。对，在做这测试。我估计如果微信还要把，我不知道会不会支持这个功能。就是到时候别人想想你微信或者是微信语音，甚至不用那个微信，还有就是那个微信那个语音聊天。",
      "speaker": "发言人1"
    },
    {
      "time": "01:51:15",
      "text": "对，语音可以。我刚才就在想语音聊天不是人就在了吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:51:20",
      "text": "对对对，就是语音聊天，然后做成那个做成VIP那种感觉就直接可以唤醒。那估计电信运营商的日子要难过了一些些。",
      "speaker": "发言人1"
    },
    {
      "time": "01:51:29",
      "text": "不过现在语音业务早就已经不是什么电信运营商的那个没有增长。",
      "speaker": "发言人2"
    },
    {
      "time": "01:51:34",
      "text": "但是还是靠主力营收，应该还是不还是这个的那毕竟还是主力营收，好吧，还是应该还就从量级上还是因为毕竟是按分钟计费。你卖数据，虽然说以后都是大家都知道未来趋势数据导向，但毕竟大家不数据不是那么慢的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:51:52",
      "text": "数据不是吗？可是数据不是有数据不是按K卖的吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:51:58",
      "text": "一般现在是按照国内的K那个有点太过了OK好吧。",
      "speaker": "发言人1"
    },
    {
      "time": "01:52:02",
      "text": "我因为我的账单上面是列出来你每次session用了多少K的，我的那个移动账单。德国人还是比较严谨。",
      "speaker": "发言人2"
    },
    {
      "time": "01:52:10",
      "text": "现在国内的预算都是四舍五入到照的，对不对？",
      "speaker": "发言人1"
    },
    {
      "time": "01:52:15",
      "text": "因为照太亏了。一次那每次不都是至少一兆提交吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:52:19",
      "text": "不是，它是按总这种的，也不是说你每次都要这样算一下。",
      "speaker": "发言人1"
    },
    {
      "time": "01:52:24",
      "text": "那有可能局部还是OK的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:52:26",
      "text": "因为就不知道他们经理单位是怎么样子的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:52:30",
      "text": "因为我的账单非常壮观，他每次会列出什么，你哪一天哪个时刻跟哪个session用了多少K我觉得这也太夸张了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:52:40",
      "text": "精确严谨好吧？对，但是我觉得这反正一个是VIP，然后下一个是votel，就是voice over LTE，就是运营商的那个语音也要通过数据包走了，所以我觉得这个是一个大趋势了，这么弄也是挺好。",
      "speaker": "发言人1"
    },
    {
      "time": "01:52:58",
      "text": "但是顺带节目就完蛋了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:53:00",
      "text": "对，但是因为顺带的更新那个通讯录也有一些变化。就是说过去这个电话它会有一个专门的一个按钮，对吧？后来加了face time那个按钮和face time audio这个按钮。其实现在就大家觉得苹果就觉得，反正我们都是要来革这个电信运营商的命的对吧？然后索性把那些什么skype、WhatsApp、微信，这些你都通通给他加上大家的大家到时候点的那个，比如说到时候出个微信的语音的按钮，你按一下就给人家播语音，就不用打电话了。所以这是挺好的。对，但是运营商就觉得这个挺不好的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:53:42",
      "text": "那没办法革你的命，与你何干？",
      "speaker": "发言人2"
    },
    {
      "time": "01:53:45",
      "text": "运营商其实内部他们也意识到这个事情是迟早的趋势。虽然他们是他们不是螳臂挡车，他们是大象腿挡车，但是虽然最多是挡不住的，但好歹可以挡一会儿。对，然后就是重头戏来了，那个message就是那个i message的更新，这回加的东西就可多了对吧？也跟什么上次我们上一期刚做那个google IO，里面讲那个L和多吧？提了很多乱七八糟的新功能。这回苹果这边一样不差，还真是还扎了好多进去。",
      "speaker": "发言人1"
    },
    {
      "time": "01:54:21",
      "text": "首先一个破坏，最后一方净土。",
      "speaker": "发言人2"
    },
    {
      "time": "01:54:25",
      "text": "对，没法用了，不能愉快的聊天了。首先加了一个叫做所谓的rich links，简单来说这应该也是一个，怎么说算是一种extension。就是你发过来的东西里面，它其实是有有交互的，或者说是可以是一种一个APP的一部分。",
      "speaker": "发言人1"
    },
    {
      "time": "01:54:46",
      "text": "对我看他演示的时候是在用不不是keynote是在另外一个演示的时候，是在用一个软件设计的例子。就是他在一个APP里面放了一个冰激凌桶之类的东西，然后把它发MS发给另外一个同事，然后那个同事就直接在那个APP里面改，然后发回给他。哼嗯哼。对，deep ink. 对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:55:09",
      "text": "这个也是一个比较，但用起来这个还是要靠第三方APP去支持，就不知道到底会怎么样。然后我觉得一个比较囧的功能，就是三倍大的EMOJ符号。我的烦。对，上次那个google 20我才吐槽过，它是它那个是可调整的对吧？没有说一个固定大小，它是一个可变的一个slider，就说这个是固定的，只有三倍大和一倍大两个区别区区别你们自己选。",
      "speaker": "发言人1"
    },
    {
      "time": "01:55:41",
      "text": "然后这有点像那个telegram，telegram如果你只发一个image的话，它就会把它弄得特别大了。反正两倍好像也是三倍，差不多。如果你只想用一个email这结束对话的话，你发一个让它就特别大。",
      "speaker": "发言人2"
    },
    {
      "time": "01:56:01",
      "text": "好吧，所以我知道以后别人给我发三倍大的一毛钱，就是干嘛该干嘛。对，然后是那个什么double effects对吧？泡泡效果肯定是很what fuck。",
      "speaker": "发言人1"
    },
    {
      "time": "01:56:15",
      "text": "对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:56:17",
      "text": "我不知道。你说做了这么大一堆东西之后，这个能给这个能让大家多用一点imessage吗？我觉得其实。",
      "speaker": "发言人1"
    },
    {
      "time": "01:56:24",
      "text": "也不一定低龄化。",
      "speaker": "发言人2"
    },
    {
      "time": "01:56:27",
      "text": "对，这个message还有一个就是imessage apps，就是可以在里面内置一些应用了。当然一个应用我觉得最主要就是那些表情符号包了。但我不知道为什么这个要做成一个应用就挺奇怪的一件事儿。",
      "speaker": "发言人1"
    },
    {
      "time": "01:56:39",
      "text": "要主要是要管理。OK maybe.",
      "speaker": "发言人2"
    },
    {
      "time": "01:56:41",
      "text": "然后还有一个什么up dore，就是可以有一些比如说写写画画那些功能做到里面去。这个我没想太出来有什么太大的用途，但是应该是有很多场景可以用的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:56:57",
      "text": "这个倒是可以拿来做什么，公司内协作之类的，什么全公司全都一起用，IMSH可以用，可以做的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:04",
      "text": "但是那简直是一个lamer。",
      "speaker": "发言人1"
    },
    {
      "time": "01:57:09",
      "text": "也不一定，现在微信成为了很多少公司的公司内部通讯工具。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:16",
      "text": "就效率很低。其实是啊。",
      "speaker": "发言人1"
    },
    {
      "time": "01:57:19",
      "text": "但是好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:21",
      "text": "就小小几个人可能还凑合。你要招几十上百人，没有办法去使用这个微信的。你微信一个群组撑死500人，对吧？你公司1000人怎么办？",
      "speaker": "发言人1"
    },
    {
      "time": "01:57:31",
      "text": "就部门基本上都是部门有一个群之类的对。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:35",
      "text": "还是小小团队。所以这方面我觉得还是有待改进的对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:57:39",
      "text": "如果你超过500人用IM就不就不太正常了。其实超过500人的智慧，就超过500人的通信一般是单向的。这个时候你发什么？发个通报就可以了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:57:53",
      "text": "但是不过当这次也是一个看出一些端倪。就是说之前我们老是担心说像OS，不管是IOS也好还是安卓也好，这种底层会不会说被被这种超级平台给干掉，或者是给叫他给无差异化。但其实现在看来就是底层那个OS也在做一些反击，他说你要把我无差异化时候，我先把你无差异化。你这个什么所谓微信也好，其他功能你起步的时候不是靠什么发红包吗？发那些各种小小有意思的小玩意儿去吸引这个用户的，对吧？那我把我自己的通讯平台都打开，然后让说让几百万开发者去帮。我想总会有那么几个出来，做出好玩的玩意儿，然后火起来，然后干掉这个超级平台。对，那我觉得这个算盘是这么打的，那你自己能不能成功反超，就拭目以待了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:58:55",
      "text": "反正国内的我觉得其实极端走个极端。假如微信有一天要推出，在手机上面只能跑微信的话，你会愿意买吗？如果说有一天你会说我愿意买的话，那基本上苹果就失败了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:59:10",
      "text": "估计还应该还还那天还挺挺长的，我希望永远不会到来。不过在腾讯确实是试过做手机的，但是也由于各种各样的现实原因没有做起来，也没办法。但是我觉得起码我们看到了，故事不再像过去那样一边倒的偏向于这个超级平台了。就是第就原生平台也有一些所谓什么什么counter strike？反击的措施了，我觉得这个账又开始变得有意思起来了。",
      "speaker": "发言人1"
    },
    {
      "time": "01:59:42",
      "text": "然后IOS最后一个比较有意思的特性是ipad上面的那个split view。这个其实之前因为我不是有一个ipad那个小号的IPO一直用着，我觉得这功能还是蛮有用的。就是我希望这个功能希望能够在surfer里面，在很多地方能够加强一点。",
      "speaker": "发言人1"
    },
    {
      "time": "02:00:01",
      "text": "其实最麻烦的一个问题就是之前也和很多人提到过，就是那个split view不能split自己。对，你你你不能开两个网页塞，塞的就是两边。对，就是一边开一半来看。对，在在电脑上可以，但是因为电脑是多窗口的概念。对，但是你可以开两个窗口问题不大。但是在IOS上至少还目前还没有出现多窗，就单1APP多窗口还没有出现。",
      "speaker": "发言人1"
    },
    {
      "time": "02:00:27",
      "text": "虽然有了这个side by side的，不有了这个split view之后，你可以开两个不同的APP赛班赛。但是同一个本身的话可能还是挺挺就还不行，至少在框架上也好还是不行。这回IOS是应该是从saffire开始做试点，safer支持这个split ill之后就可以同时开两个网页了。那可能这套用成熟之后，比如说下一个版本IOS11的时候，就可能把这个作为一个框架开发给所有的开发者。这样你可以就大家可以实现，比如说我开两个word文档赛班赛的这样去工作。所以你看其实这个移动OS又在慢慢把过去那些this top的东西给开始拿过来，对吧？然后变得越来越复杂和臃肿和笨重。但是我觉得有些还是必须要用的，你要去作为一个更高级的工具去取代过往的一些设备的话。",
      "speaker": "发言人1"
    },
    {
      "time": "02:01:22",
      "text": "没错。",
      "speaker": "发言人2"
    },
    {
      "time": "02:01:25",
      "text": "这个是在WC那个主题演讲keynote上面展示的，我觉得比较有意思的功能。大概过了一下，然后还有第二天有一个叫做platform state of the union，这叫什么平台？国情资文。State of the union是每年美国总统要给国会的一个演讲，去给会给国会去汇报一下国字文。对，就翻译成国情资文，就是总统给国会汇报一下去年我干的咋样，对吧？对。",
      "speaker": "发言人1"
    },
    {
      "time": "02:01:56",
      "text": "在中国大概念这个uni指的是去上下医院的联合合会的意思就是合起来开大会。",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:05",
      "text": "那个优点不是指这个联邦吗？",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:08",
      "text": "What是这个意思吗？",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:10",
      "text": "好，因为state of the union，state是状态，就是union的状态。Union是指那个那个对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:16",
      "text": "United .",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:17",
      "text": "states就是各州，南南当时不是打仗，南北对吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:23",
      "text": "好吧，我一直以为因为好吧。",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:25",
      "text": "你说我才是这个意思，不然的话他给他给国会去，他不用讲sit off stay for.",
      "speaker": "发言人1"
    },
    {
      "time": "02:02:32",
      "text": "对我猜是。",
      "speaker": "发言人2"
    },
    {
      "time": "02:02:33",
      "text": "这个意思，说没错，anyway就是每年苹果也会有一个叫做平台国情咨文。就汇报一下我们去年都干了啥，今年有些什么新花样给你玩。除了K头上那些给大众媒体讲的比较泛，有一些很酷炫demo东西，我们给你讲些实实在在的，当然无非就三点。我觉得比较意思就是一个是把那个i message的APP讲的会稍微深入一点。然后另外就是那个siri kit，就是第三方支持siri的语音控制功能又讲了一遍，讲的比较详细，这个前面讲过就不提了。第三个比较好玩的是出了一个新的APP，叫做swift playgrounds for ipad，叫做是一个在ipad上跑的swift的一个学习软件或者说是开发环境。",
      "speaker": "发言人1"
    },
    {
      "time": "02:03:24",
      "text": "看我很好奇他到底就比如说我假设我在这个playground上写了一个比较大的APP出来，我能把它三号三位导出或者发布。",
      "speaker": "发言人2"
    },
    {
      "time": "02:03:35",
      "text": "我觉得如果可以的话。",
      "speaker": "发言人1"
    },
    {
      "time": "02:03:37",
      "text": "那才能算一个开发环境。",
      "speaker": "发言人2"
    },
    {
      "time": "02:03:39",
      "text": "我觉得那个是迟早的事情，那起码他现在我们看演示，就是它是能够做到你在在那个ipad上编辑一个swift的程序，而且是动态的。它是一个左右分屏的一个设计，左边是代码，然后右边是一个。因为它这个整个是教学，它会有一些那种场景，它主要比如说是一个游戏的界面。对，是一个live的一个三弟的一些模型。然后你左边在改那个代码的时候，它右边那个东西是可以实时根据你代码更新的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:07",
      "text": "没有，我觉得一个play.",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:08",
      "text": "对对对，你可以对，就是叫什么report，等于是一个对叫做read evolve .",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:16",
      "text": "and叫什么evolution.",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:19",
      "text": "对的这么一个。对，最后是look。对，所以做了这个之后，我觉得这个东西还挺帅的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:26",
      "text": "因为首先第一个是ipad这个性能，基本上能有一个入门级笔记本的性能了，对吧？Itunes、ipad ipad pro有了这个之后，就性能应该是问题不大的。然后有了这么一个空间之后，大家可以说，我在上面做做小小的一些中等一些生产型的东西或者学习型的东西。我觉得而且他整个设计它是至少我觉得他在设计理念上是从那个教学的地方入手。因为它叫playgrounds，对吧？就是一个。",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:53",
      "text": "而且他一开始强调的是给小孩用的对对。",
      "speaker": "发言人2"
    },
    {
      "time": "02:04:57",
      "text": "是小朋友去学这个编程。",
      "speaker": "发言人1"
    },
    {
      "time": "02:04:59",
      "text": "他或者是给那个编程初学者用的，不只是给那个swift感兴趣的人用。",
      "speaker": "发言人2"
    },
    {
      "time": "02:05:06",
      "text": "对，没错。所以我觉得他整个设计都还蛮好的。你特别是中左边你改代码，右边就能够及时的显示出在那个山顶世界里面你的改动。我觉得这个特别酷炫，这就让我想起那个谁。Bread vector bread vector是以前的苹果的一个高级工程师了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:05:27",
      "text": "对，我们已经反复提到过这个人很多事情。",
      "speaker": "发言人2"
    },
    {
      "time": "02:05:29",
      "text": "对对对，他他当时做的那个叫做可学习的那种，或者说是可交互的那种编程环境。其实我觉得在某种程度上，就是他当年做的那些开底层的开创性的研究。这可能体现在这个swift的swift playground这么一个应用里面去了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:05:47",
      "text": "Playground这个东西其实从7.0开始一直就有了。就在你在电脑上其实有这些的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:05:53",
      "text": "就是x code有一个那个playground .",
      "speaker": "发言人1"
    },
    {
      "time": "02:05:55",
      "text": "x code playground其实它那个比较简单。",
      "speaker": "发言人2"
    },
    {
      "time": "02:05:57",
      "text": "因为它就只能把一些什么显示数，就是某个evaluate的数值的结果，或者是画一个表格什么的，或者画一个好像都不能画图像，应该可以画图像是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:06:09",
      "text": "这是Chris last展示playground的时候做的第一个演示，就是一个典型的design by programmer的一个场景。就是什么五彩斑斓的气球飞来飞去。然后你改左边代码，右边就直是直接运行了。这些其实都已经在那个x code.",
      "speaker": "发言人2"
    },
    {
      "time": "02:06:27",
      "text": "里面有成XO .",
      "speaker": "发言人1"
    },
    {
      "time": "02:06:28",
      "text": "playground是可是可以的。OK它最大的改善我在我看来我觉得是交互，就是他的首先它有一个专门的给program用的键盘，那个键盘仔细研究了，就是你大概看一下，虽然没有他没有特别详细的去用它，但是你看的话你会发现有些字母上出有一个比如说成对的这个括号之类的。就是你你可能按一下shift或者按一个什么键，然后点那个字母，它就会直接给你输入一对引号。这样做的对，但是最大的优点是这个键盘其实不怎么需要被用到。因为如果你看它演示的话，你就会发现一路。",
      "speaker": "发言人2"
    },
    {
      "time": "02:07:09",
      "text": "自动补齐。",
      "speaker": "发言人1"
    },
    {
      "time": "02:07:11",
      "text": "对，在很多很多时候，在某一个给给定的地点，你所能输入的东西就最可能就只有那么几种而已。然后你只需要在那个名单里面选一个就可以了。然后其他像什么那个image literal和color literal之类的，可以in place直接在那显示那个。",
      "speaker": "发言人2"
    },
    {
      "time": "02:07:32",
      "text": "颜色的颜色，以及调出一个调色盘去改一个设紫色的颜色的那个数值。",
      "speaker": "发言人1"
    },
    {
      "time": "02:07:39",
      "text": "对这些都是极大的简化了在ipad上面写成或者在一个触摸屏上写程序的交互的这样一个成本。我觉得这一点其实是它的最大的创新。就是假如说将来我们20年后真的会需要是在一个15寸的触摸屏上编写程序的话，那这样的交互的改进是非常重要的对。",
      "speaker": "发言人2"
    },
    {
      "time": "02:08:07",
      "text": "这个就是我们之前和这和我当时是和房东，还有谁当正在知乎上讨论，就是说到底这种所谓图形化的编程环境，或者这种交互式的编程环境能进化到什么样子。当时大家的这个结论也比较分歧比较大。但其实从这次这个sweet playground来看，它起码展示了另外一种可能性。就是说有一些类型的编程，它是可以比较好通过这种叫这种触屏和这种自动补漆的交互来实现。所以我有点担心，因为其实你看他就这回展示的那些应用，包括之前那个swift playground for x code里面的展示，它那些都是在怎么说来着？就是它不是从0到1的这么一个过程，它是有一个模板在那里这边去改，能去改一上来都是先给你个程序的。对他给你一个template，至少对你就说我改个颜色，改个东西。但是这并不是编程的，或者说这边这并不是编程最让人愉快的那一部分，就是编程。这让我觉得这编程这样愉快的部分是从0到1那种一个概念变成一个可以执行的prototype的那那个是hello .",
      "speaker": "发言人1"
    },
    {
      "time": "02:09:23",
      "text": "world的那一刻，不是把hello word翻译成别的字符串的那一刻的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:09:27",
      "text": "没错，所以这个时候我就不太清楚，就是说这个自动补齐。因为自动补齐它它那种比较叫怎么说来着，这算是一种形式的自动补齐。就是你去这个死就是intelligence type这种功能你都算自动补齐。就是你在一无所有的情况下，你能自动补齐多少，或者说你在这个语法数还没有合法的情况下，你能自动补齐多少，我觉得是一个很大的问问题。",
      "speaker": "发言人1"
    },
    {
      "time": "02:09:51",
      "text": "这一部分其实依赖这个编程者的想象力的问题，想象力是没有办法自动补全。",
      "speaker": "发言人2"
    },
    {
      "time": "02:09:57",
      "text": "对或者说另外一种场景，就是说他也是还是那种比较直观的一些那种所谓直观是就是他的抽象程度不高，就是他只是做一个我这个代码做了这件事情，那边图像就会发生这样的改变，它中间的的对应关系是相对来说一一对应的那不是说我要去用这个swift playground写一个什么排序算法。举个例子，可能这个都不太好排序算法，你可以比较用什么换那个那个block的位置来实现展示。那可能还比较明显，就有些更抽象的一个算法。比如说我要写一个video code deck，对吧？你要压缩的解压的算法，这个时候你再用这个自动补齐的意义何在？因为大部分时候你其实在做一些数学的运算，就是说你要实现一个算，要可能比较做一个矩阵对。",
      "speaker": "发言人1"
    },
    {
      "time": "02:10:51",
      "text": "这个矩阵一共有16个什么成员，然后你每个都要算一遍。然后你那如果每一个地方出都给你16个选择的话，你就其实馒馒。",
      "speaker": "发言人2"
    },
    {
      "time": "02:11:00",
      "text": "蠢的对，然后还有一些就是说你可能要做一些什么未运算，那些就是你就就我就说有一些这种抽象程度更高，就不并不能很好的直接映射成一个图形表达，一个graphic presentation的那种程序，那就好像不太适合这种方式。所以我不知道到底这个东西的适用性到它的边界在哪里，还是说有更好的其他的方案。但是我起码多了一种尝试的方向，有有这么一个东西给大家用上也比较有意思。对我觉得。",
      "speaker": "发言人1"
    },
    {
      "time": "02:11:33",
      "text": "将来如果真的要转向平板编程的话，只有这些固然好，但还是不够的。应该还需要一些更深层次的优化。但是具体应该做什么，我好像没什么概念。",
      "speaker": "发言人2"
    },
    {
      "time": "02:11:49",
      "text": "对对，那上面就是我对WDC的两场演讲的一个主要的印象，你有什么要特别有意思的东西？",
      "speaker": "发言人1"
    },
    {
      "time": "02:12:01",
      "text": "因为我其实没有怎么看，因为最近比较忙。然后WDC那一天我就没有看那个keynote只是后来补了两个视频，就是OK唯一看的其实就是siri的那个new features。我也不是特别的有什么太多的印象，主要我印象最深的一句就是crista说了一句什么swift的3 move fast and fix things.",
      "speaker": "发言人2"
    },
    {
      "time": "02:12:29",
      "text": "因为shift break太多了是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:12:32",
      "text": "对，其实这句话也是在黑那个苏克bar。扎克bar对，用一个叫扎克。",
      "speaker": "发言人2"
    },
    {
      "time": "02:12:40",
      "text": "本德语是念日记本。",
      "speaker": "发言人1"
    },
    {
      "time": "02:12:42",
      "text": "苏克bag对，德语的日本bag就是唐山。对，唐山唐唐山唐马克唐山口音，马克唐山说的，马克唐山说。Move fast and break things. 所以然后三里面就是之前我们介绍过的那些什么语法更concise，然后API更更swifty，还有什么一些API会俭就就简化了之类的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:13:13",
      "text": "就是什么我觉得他们要花好长时间在那个transition model.",
      "speaker": "发言人1"
    },
    {
      "time": "02:13:17",
      "text": "对呃什么GCD的那个dispatch的那个API也被简化成了一个更加object mentation的感觉。对，GCD以前是个CEPM，就是你在object里面c object CC里面写的是dispatch.",
      "speaker": "发言人2"
    },
    {
      "time": "02:13:34",
      "text": "本来就是个C的接口，那个函数那个那个库。",
      "speaker": "发言人1"
    },
    {
      "time": "02:13:39",
      "text": "对，然后在我这个C里面，你就赤裸裸是在用那个CC的函数，然后现在他把它多少封装了一下，用起来就是比较没有。",
      "speaker": "发言人2"
    },
    {
      "time": "02:13:49",
      "text": "那么疼。",
      "speaker": "发言人1"
    },
    {
      "time": "02:13:50",
      "text": "康也不是就是丑，这是一个审美，审美上的就是丑。对，就是丑。对，丑和坑其实是同一个意思，也在很多时候对。没错，比如说这个对，然后好，然后他们说三的那个主要的目的是要增进的增进stability，然后很多原生的APP都在重写，提到一个什么dock，dock就是最下方那个托盘儿。",
      "speaker": "发言人2"
    },
    {
      "time": "02:14:29",
      "text": "主要是好像用那个是重写了一遍是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:14:33",
      "text": "之前就在写，然后swift他说dock这个程序是一个200K行的程序，20万行的程序这么坑。就对，就是那个系统托盘是一个20万行的程序，这真的有点太夸张了。然后里面大概有10%是之前只有10%是swift的。然后现在他们在改逐步改写，然后好像在CR里面switch占到了一半以上。如果没记错的话，对。",
      "speaker": "发言人2"
    },
    {
      "time": "02:15:08",
      "text": "他也没有没有提说整个这个macos CR有多少是用那个重写。",
      "speaker": "发言人1"
    },
    {
      "time": "02:15:14",
      "text": "我印象里面没有提到，但应该是很多的。就因为sweet本身也没有特别的稳定，所以可能要等到3.0以后比较稳定的版本大规模的重新才有下一个版本的macos .",
      "speaker": "发言人2"
    },
    {
      "time": "02:15:28",
      "text": "s可能才会有更多的东西拿过来是吧？",
      "speaker": "发言人1"
    },
    {
      "time": "02:15:31",
      "text": "对我是不。",
      "speaker": "发言人2"
    },
    {
      "time": "02:15:32",
      "text": "理解的ok。",
      "speaker": "发言人1"
    },
    {
      "time": "02:15:36",
      "text": "我们不我不如去看一看那个seasonal overview WDC2016 feature videos，有platform state of the union，what's knowing what rice, three apple pay on the web, what's new T, VS, what's new swift and introducing search ads. 对，这是搜索广告，就是你在搜索这关键词的时候可以可能会出广告。我觉得这个也是挺让人讨厌那个new feature了。What's new in accessibility？Introducing apple files es你有看这个吗？",
      "speaker": "发言人2"
    },
    {
      "time": "02:16:19",
      "text": "对，这个我有看。OK这样讲一下，这个我觉得还是提一下比较有这个怎么说呢？就是说在目前包括其实包括sa出来之后，它原生的那个默认搭载操系统还是那个HFS plus。哼然后HF plus HFSHFS plus我好难念的，是一个非常老旧的操作系统，不断打补丁打出来的结果。",
      "speaker": "发言人1"
    },
    {
      "time": "02:16:49",
      "text": "对，然后之前一直有呼声要换那个ZFS，ZFS, 对，然后也没有动静。",
      "speaker": "发言人2"
    },
    {
      "time": "02:16:58",
      "text": "后来就他他本来都加进去贝塔了，后来因为各种各样的原因就撤掉了。所以UZFS是指望不上了。所以这次他们说我们要做个APFS apple file system，去替代掉所有的iphone、ipad watch、OS watch和apple TV里面全部以后要改用这个APFS。然后APFS是为这个就是就是固态存储这种盘去做的优化。就不是说基于传统磁盘的那种rotational drive的假设，这个还是比较有意思的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:17:36",
      "text": "然后他们讲的各种的一些比较新鲜的特性。我觉得当时我想哪个特写比较意思，就是可以可以动态的调整那个分区的空间OK大小。但是好像有点奇怪，就在于我们其实并不多，只分一个区对吧？对，但我后来看了一下，其实我理解他分那个区的一个主要作用是做那个snapshot。因为snack的基础是分区partition OK，就说你你你只能把那个比如说你讲你至少把系统分区和这个user分区分开之后，你才可以比较安全的去升级这个就是呃就system partition。但是分区传统的分区有一个问题，就是你一旦分好之后，那个区的容量大小就变成固定的了，这样的话就很不方便。所以为什么大家都后来都只分一个区，这个windows用户应该印象特别深刻。",
      "speaker": "发言人1"
    },
    {
      "time": "02:18:35",
      "text": "因为windows需要经常需要重装，所以很多都是C盘和D格，C盘和D盘对吧？不是，对对对，就把C盘格掉，就系统所谓的system petition得干掉，然后重新装系统，重新装软件。但是你的数据还在吗？",
      "speaker": "发言人1"
    },
    {
      "time": "02:18:48",
      "text": "Linux其实也是这样的，就是那个boot分区，你每次升级升那个部分区和。",
      "speaker": "发言人2"
    },
    {
      "time": "02:18:54",
      "text": "对对对，没错。",
      "speaker": "发言人1"
    },
    {
      "time": "02:18:56",
      "text": "对，不是windows。Linux应该是反过来，就是slash user是在另外一个分区上的。然后其他的时候，你把整个其他的地方home.",
      "speaker": "发言人2"
    },
    {
      "time": "02:19:05",
      "text": "home在其他的分区上面。",
      "speaker": "发言人1"
    },
    {
      "time": "02:19:08",
      "text": "对，home, sorry.",
      "speaker": "发言人2"
    },
    {
      "time": "02:19:09",
      "text": "对。对，但是就这样的话就会造成一个问题，我就是说我有可能我的数据分区，你说我们分多大号，我分小了那个系统分区我更新系统装不下。我分大了我那个数据分区的空间又不够用，这个时候就比较尴尬。他们这回那个APFS有可能叫做space sharing，就是共享空间。",
      "speaker": "发言人1"
    },
    {
      "time": "02:19:32",
      "text": "其实我看了一下那个逻辑，大概理解是这样，有可能是错的。但是到时候大家再指正。它其实分区它不再是一个连续的区块了，而是说它会存在几个那种那种一个就是这它的那个磁盘。就你想象磁盘是一个磁盘空间，是一个连续的一个长条的话，他会说1到5这块是属于分区A然后2到8是属于分区B然后1到2就8到12又属于分区一，就是它一个分区三可分散在磁盘上各个位置。",
      "speaker": "发言人1"
    },
    {
      "time": "02:20:02",
      "text": "对，这样可以动态的使用实际的存储空间。而且反正因为是SSD，不存在说说不连续的连续读写。对的，不存在这个问题。因为这个反正SSD的那个随机读写性能都很好啊，那也不存在任何性能的损耗。所以就还好就解决了这个又要分区，又弄那些高级特性，但是又要要更高效的使用这个或者更灵活的使用这个磁盘空间这么一个尴尬的一个矛盾，这次就通过这个方式解决了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:20:32",
      "text": "还有一些比较好玩的功能，就是说它支持不同三好像有三个层级的加密。一个是全盘加密，一个是这个分区级别的加密，好像是还有一个是文件级别的加密，就可以控制不同的加密的level。我觉得这个也挺有意思的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:20:52",
      "text": "但是也有一些比较令人吐槽的一个没有做的事情，就是那叫什么数据完整性验证，就data的OK就ZFS，大家一直吼吼得很凶的。就是因为它会对每一个写进去的block去做一个叫什么check song对吧？对，这样他他在读出来的时候，他会检查那个check song，就是你读有没有发生这个数据存在磁盘上，由于一个宇宙射线打过来或者什么其他原因，发生了这个比特翻转，然后导致你那一块数据坏掉了这么一个情况。甚至说还可以，如果是小问题还可以自动修复，不拉这种情况。然后苹果他们那边给出的解释是说，我们用的这个零部件都非常好，不会出现这种情况，所以我们就不用做这个数据完整性保护。其实他们也做了，他们做了部分，他们把那个文件的那些meta的，就是原数据meta data的那些做了是做了那个check上的保护的。但是对于用户的那个数据库本身没有，他其实没有做这个事情。",
      "speaker": "发言人1"
    },
    {
      "time": "02:21:51",
      "text": "很多人就在吐槽这一点，那这一点我也是蛮失望的。因为这样的话，你怎么知道我用那个IAPFS的设备已经非常好的，我可能挂一个破移动硬盘，那个质量不怎么好的，那到时候怎么办？所以当然现在原价。",
      "speaker": "发言人1"
    },
    {
      "time": "02:22:08",
      "text": "这件事情只能买我们苹果认证苹果。",
      "speaker": "发言人2"
    },
    {
      "time": "02:22:11",
      "text": "认官方认证苹果苹果那个移动硬盘终于可以满足卖高价的理由了，对吧？因为我们这个质量更好。对。",
      "speaker": "发言人1"
    },
    {
      "time": "02:22:21",
      "text": "所以这就是一个比apple care.",
      "speaker": "发言人2"
    },
    {
      "time": "02:22:24",
      "text": "你apple没有用，那个数据丢了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:22:27",
      "text": "apple doesn't care。",
      "speaker": "发言人2"
    },
    {
      "time": "02:22:29",
      "text": "对，apple doesn't care. 这个是一个好品牌，然后冬天，所以看吧，但因为这个APFS还是在这个研发阶段，他们做了有个四年多了。但是说是要在后明年后要在明年的那个设备，就是2017年，没说什么时候，2017年的时候全部画上去。这其实就是今年的出的是新出的所有设备都不会默认启用这个IPFS，所以还有这个补救的空间。所以希望他们一年内能够把那个data integrity，就数据完整性保护这一块给加上去。免得？要求个安心，至少。",
      "speaker": "发言人1"
    },
    {
      "time": "02:23:10",
      "text": "没错。OK那就大概说这些，没有了。因为这次wwdc的session其实很多很多，而且这次wwdc最大的一个特征就是而这是前天的新闻，昨天的新闻就是这次所有的video都有transcript，而且所有的海绵都都所有的transcript的每一句话都是可以点的。你点了之后就可以直接跳到那。",
      "speaker": "发言人2"
    },
    {
      "time": "02:23:37",
      "text": "那个那个去用那个你说你说他是用那个什么。",
      "speaker": "发言人1"
    },
    {
      "time": "02:23:42",
      "text": "我不知道是怎么做出来的这是这自动识别。",
      "speaker": "发言人2"
    },
    {
      "time": "02:23:44",
      "text": "然后还是人工智能。",
      "speaker": "发言人1"
    },
    {
      "time": "02:23:47",
      "text": "这所有的这些工作都是siri做的。",
      "speaker": "发言人2"
    },
    {
      "time": "02:23:49",
      "text": "也就是说那你太猛了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:23:52",
      "text": "对，而且不是没有可能。我觉得就是我还没有细看，但是好像。",
      "speaker": "发言人2"
    },
    {
      "time": "02:23:56",
      "text": "做不了那么准。因为它很多这种专业词汇缩写，不可能通过那个那个叫什么自动识别出来的。",
      "speaker": "发言人1"
    },
    {
      "time": "02:24:05",
      "text": "我的一点是说，你看WDC是6月16月几号的，6月13号.",
      "speaker": "发言人2"
    },
    {
      "time": "02:24:14",
      "text": "反正六月上。",
      "speaker": "发言人1"
    },
    {
      "time": "02:24:15",
      "text": "具体的对，反正六月中旬做的，然后现在是七月初。他在这段时间里面难道是纯粹靠人来听一句一句写下来的吗？我觉得不是没有可能。",
      "speaker": "发言人2"
    },
    {
      "time": "02:24:27",
      "text": "但是对也很又有那种速递员，你知道吗？在外面打的很快的那种人用那个叫什么那种很特殊的输入法，就是一个手指不用动的，只用那那我知道了，手掌不用挪的，手指动就可以了。",
      "speaker": "发言人1"
    },
    {
      "time": "02:24:40",
      "text": "那种键有那种的连击键盘。",
      "speaker": "发言人2"
    },
    {
      "time": "02:24:43",
      "text": "对对对，连接的英文叫什么来着？我又忘accord，和弦那个对，coding keyboard.",
      "speaker": "发言人1"
    },
    {
      "time": "02:24:51",
      "text": "对，但好吧，这样也太人力朋克了，但也不是没有可能好吧，反正这一次的video我觉得市场盘很爽。如果你在工上班的时候不方便看微流，比如我就可以看一看script，然后如果真的有必要的话，再点那一句，晚上点那一句话，然后去看去去去到那个时间点，看他屏幕上到底出现的是什么。",
      "speaker": "发言人2"
    },
    {
      "time": "02:25:18",
      "text": "说到这个还有一个事情要提一下，他这回苹果把他那个叫做API reference那个那个网站改写了，然后全部用react重写了一遍。",
      "speaker": "发言人1"
    },
    {
      "time": "02:25:30",
      "text": "OK就他。",
      "speaker": "发言人2"
    },
    {
      "time": "02:25:31",
      "text": "自己整个是一个react的一个音，一个就是什么single page application SPA就是你点一下它其实会就一直跟一个javascript在交互。OK那个做的还挺好的，就可以好好去试一试。头你可以去试一下。",
      "speaker": "发言人1"
    },
    {
      "time": "02:25:51",
      "text": "我的我的membership在wwdc前一天过期了。现在。",
      "speaker": "发言人2"
    },
    {
      "time": "02:25:55",
      "text": "membership有什么用？你可以下那些测试版。",
      "speaker": "发言人1"
    },
    {
      "time": "02:25:58",
      "text": "下载贝塔版吗？还是不需要需要吗？",
      "speaker": "发言人2"
    },
    {
      "time": "02:26:03",
      "text": "需要，就是developed beta是需要，不是developer previous需要那个membership的。但是最近什么IOS和那个OS macos s的public beta都放出来了，就是不用那个账号，大家的公众都可以下了OK，你可以直接下那个来试。",
      "speaker": "发言人1"
    },
    {
      "time": "02:26:21",
      "text": "暂时没有吃螃蟹的勇气。",
      "speaker": "发言人2"
    },
    {
      "time": "02:26:24",
      "text": "都是单一设备，不敢乱玩的对。",
      "speaker": "发言人1"
    },
    {
      "time": "02:26:28",
      "text": "感谢收听IPM park网络旗下的IT技术主题娱乐节目，内核洪荒，我们号称哈克尔，但是也没有干货，想听就听，不想听人就别听。你可以为本节目捐款，捐款地址是kernel panic dota FM slash donate捐款金额随只要是八的正式收费就可以了。捐款不会为给你带来什么，不捐也不会让你失去什么。我们的口号是no hard feelings。如果你有任何反馈，可以发电子邮件到kernel panic SIPN dot LI。同时也欢迎你收听以real主持的风投圈以及IPN旗下的其他几档节目。未知道太医来了，流星通信、high story映影像、无次元博物志、选美陛下观一天世界和时尚怪物。这个里边好长，我们下期节目再会。",
      "speaker": "发言人2"
    }
  ],
  "lab_info": {
    "summary": "在这次讨论中，参与者探讨了技术发展趋势、设备接口如USB-C和蓝牙耳机的未来变化，以及个人设备如Apple Watch和MacBook的创新。他们还关注了技术行业内的工资状况和程序员的职业发展，强调持续学习的重要性。讨论内容覆盖了对软件技术与日常生活融合的乐观预期，以及对Mac和Apple TV等设备操作改进的看法。特别提及了苹果即将推出或已有的功能，包括手势解锁屏幕、通用剪贴板、桌面云同步、优化存储、Siri的更新以及iMessage功能的改进。讨论还涵盖了APFS文件系统以提高存储效率和安全性。整体上，这次对话展现了对未来技术进步的积极展望和技术对日常生活的影响。",
    "qa_pairs": [
      {
        "question": "游戏中Mercy的一句台词是什么？",
        "answer": "Mercy在游戏中的台词是“hero never dies”，有德语和英语两个版本。",
        "time": "00:03:22"
      },
      {
        "question": "在overwatch游戏中，有一个玩家因为校园抢劫事件而被大家记住，他的名字是什么？",
        "answer": "这位玩家叫吴宏宇，他是广东大一的学生，也是overwatch的玩家。",
        "time": "00:01:33"
      },
      {
        "question": "暴雪在游戏中如何纪念这位玩家？",
        "answer": "在overwatch游戏中的漓江地图里，有一个宇航员场景，其中宇航员胸前的铭牌写着“红鱼”，背后背景牌子上则写着“英雄不朽”。",
        "time": "00:02:30"
      },
      {
        "question": "听众米罗张庄庄为节目创作了什么内容？",
        "answer": "米罗张庄庄使用Garage Band制作了一首节目主题曲，并通过邮件发送给主播，旋律包含电影《硅谷》和动画片《reconverted》中的两句台词。",
        "time": "00:05:27"
      },
      {
        "question": "最近有关于Macbook和显示器连接问题的讨论是什么？",
        "answer": "有听众提到一款LG推出的4K显示器，可通过USB-C接口与Macbook连接，实现4K分辨率和60赫兹刷新率，但USBC数据传输速度会降为USB2.0。此外，关于Macbook是否将配备USB-C接口的讨论也很热烈，因为目前已有方案通过打补丁来解决60赫兹刷新率的问题，但带宽受限于USB-C接口的传输能力。",
        "time": "00:08:35"
      },
      {
        "question": "对于显示器刷新率对游戏体验的影响，您怎么看？",
        "answer": "在overwatch这类竞技游戏中，虽然30赫兹刷新率可能导致画面延迟较大（约为34毫秒），但并非所有角色和策略依赖于极高的射击精度，因此对于整体游戏体验影响相对较小。",
        "time": "00:13:52"
      },
      {
        "question": "对于iPhone下一代可能没有耳机接口的情况，你怎么看？",
        "answer": "我觉得这个想法比较radical，解决方案主要有两个：一是通过充电线口输出音频，二是走全无线路线。如果走全无线，会考虑配备一个无线耳机。",
        "time": "00:16:59"
      },
      {
        "question": "如果苹果做全无线耳机，如何解决无线耳机的充电问题呢？",
        "answer": "充电比较好解决，因为现在蓝牙耳机都需要充电。苹果可能会采用Lightning接口为无线耳机充电，就像给Apple Pencil充电那样。",
        "time": "00:17:38"
      },
      {
        "question": "如果无线耳机使用Lightning接口充电，那么是否意味着这个耳机只能给苹果手机用？关于苹果是否真的会去掉3.5毫米耳机接口并推出无线耳机？",
        "answer": "是的，如果是有限的，可能确实只能用Lightning接口，但如果第三方厂商能制造出两用充电线，例如可以转换成USB的Lightning线，那么耳机也不一定只能适用于苹果手机。基于上述分析，苹果很可能这样做，因为这将有助于提升用户体验，特别是对于运动场景下的用户，并且符合iOS 10中Siri强化的需求。",
        "time": "00:20:39"
      },
      {
        "question": "那么如何实现手机和Apple Watch之间的无缝过渡切换音乐播放？",
        "answer": "通过无线耳机同时与Apple Watch和iPhone配对，并通过Lightning接口进行自动配对，减少用户手动操作步骤，从而实现平滑的播放切换体验。",
        "time": "00:23:37"
      },
      {
        "question": "是否考虑到Siri使用频率的提升来推动无线耳机的发展？",
        "answer": "是的，为了更好地利用Siri功能，用户需要更便捷地唤醒Siri，单边无线耳机可以实现这一点，用户无需拿出手机就能直接通过耳机启动Siri，从而提高Siri的使用频率。",
        "time": "00:25:36"
      },
      {
        "question": "无线耳机为何要设计成无线的？",
        "answer": "主要原因之一是与Apple Watch配合使用时更加方便。由于Apple Watch只支持蓝牙耳机且有内置存储空间，用户在运动场景下可能更倾向于不带手机，而无线耳机能无缝切换到Apple Watch进行音乐播放。",
        "time": "00:28:30"
      },
      {
        "question": "这类人是否证明了程序员可以一直做到四五十岁，并且依然保持在技术岗位上？对于一辈子做技术的程序员，应该持有怎样的看法？",
        "answer": "是的，这类人的存在证明了至少在理论上和现实中，确实有人可以将技术工作做到四五十岁，并且能够保持良好的状态继续从事编程工作。应该认识到，做一名资深工程师或软件工程师也是一项体面且收益不错的职业选择。不必过于纠结于是否要转向管理岗位，关键在于个人的兴趣和职业规划。同时，社会阶级固化是一个渐进过程，在此之前应保持对技能更新和学习的热情，不断提升自身竞争力。",
        "time": "00:32:42"
      },
      {
        "question": "为什么程序员到了一定年纪如果不转管理岗位就会被视为loser？",
        "answer": "这种观念源于社会文化中的“官本位”思想，即认为通过努力工作达到一定高度后应成为管理者。此外，在过去20多年间，中国存在人口红利现象，新人不断涌入各个行业和技术岗位，使得经验丰富的程序员自然而然地形成了一种管理新人的结构。但随着人口红利消失和社会阶级流动性增强，这种转管理岗的压力并不绝对适用所有程序员。",
        "time": "00:34:55"
      },
      {
        "question": "技能水平和市场需求的关系如何影响工人的职业发展？",
        "answer": "技能水平与市场需求密切相关。例如，有一位前西门子电焊工利用其精湛的手工焊接技能，在工作之余开出租车作为副业，收入相当可观。这表明，只要手艺足够好且市场需求大，工人也能过上较好的生活。这也反映了工业4.0时代背景下，技能的重要性以及终身学习的必要性。",
        "time": "00:39:34"
      },
      {
        "question": "全球开发者年薪的中位数是多少？",
        "answer": "全球开发者年薪的中位数是50万人民币。",
        "time": "00:48:01"
      },
      {
        "question": "如果年薪达到200K以上，所处全球开发者比例是多少？",
        "answer": "如果薪水超过了200K，那么就已经打败了全球98%的开发者。",
        "time": "00:48:32"
      },
      {
        "question": "年收入100万人民币在全球范围内的地位如何？",
        "answer": "年收入100万人民币在全球来看，属于上层高收入人群。",
        "time": "00:49:00"
      },
      {
        "question": "报告中关于程序员年龄层次的数据是什么？",
        "answer": "所有参加调研的程序员中，男性占92%，并且3%的程序员超过60岁，10%的人是51到60岁之间，25%的人是41到50岁之间，即40岁以上的程序员占到了将近40%。",
        "time": "00:50:36"
      },
      {
        "question": "程序员的主要年龄段是哪个？程序员的工作经验分布情况如何？",
        "answer": "31到40岁的程序员占到了62%，他们是程序员的主力人群；而30岁以下的被称为青年程序员，50岁以上则算老年程序员。24%的程序员有20年以上的经验，17到20年的有70%，3到16年的有15%，5到8年的有18%，少于5年的有15%，说明程序员这个职业一直在吸纳新鲜血液，经验分布相对均匀稳定。",
        "time": "00:51:53"
      },
      {
        "question": "报告中提到的程序员薪资水平与编程语言的关系是怎样的？",
        "answer": "在报告列举的数据中，Scala和Clojure程序员的薪资最高，可以超过150K美元；而PHP程序员的最高薪资相对较低，低于很多其他语言的中位数。",
        "time": "00:56:02"
      },
      {
        "question": "对于保持技术竞争力以及选择编程语言有何建议？",
        "answer": "从报告数据来看，Java是一种使用时间长且范围较广的语言，适合保住饭碗并持续发展。同时，根据地区差异和个人职业规划，选择像Java这样持久耐用且易学易用的语言也是一个不错的选择。",
        "time": "00:59:05"
      },
      {
        "question": "在Apple TV上，有什么功能引起了您的特别关注？",
        "answer": "我对Apple TV的live to in功能特别感兴趣，它实现了类似于传统电视开机后立即播放节目的体验，大大提升了用户体验。",
        "time": "01:04:47"
      },
      {
        "question": "您是否认为其他厂商也应该关注电视开机速度的问题？",
        "answer": "是的，我认为其他厂商应该也关注电视开机速度的问题。目前很多智能电视开机速度很慢，而消费者可能对此已经习以为常，但实际上这是一个可以改进的痛点。",
        "time": "01:05:58"
      },
      {
        "question": "TVOS在易用性方面有哪些改进？",
        "answer": "TVOS的一个显著改进是支持一次性使用苹果账号登录所有苹果电视应用，这样就不再需要频繁输入不同的账号密码了。",
        "time": "01:06:34"
      },
      {
        "question": "您觉得在Mac上实现类似的一次性登录功能会面临哪些问题？",
        "answer": "我觉得在Mac上实现类似功能可能会面临安全性问题，但如果系统实施得好，通过密码管理器进行账号管理应该还是相对安全的。",
        "time": "01:07:52"
      },
      {
        "question": "Apple Pay那种指纹识别支付体验是否可以在更多场景中应用？",
        "answer": "完全可以，例如在网银或其他需要验证身份的应用中，如果能够实现指纹识别解锁，将极大提高用户体验并增强安全性。",
        "time": "01:09:15"
      },
      {
        "question": "对于Mac OS X改名为macOS以及新系统的命名，您有何看法？",
        "answer": "改名是必要的，为了统一操作系统的命名规则。新版macOS被命名为macOS，其中包含了西班牙语单词\"sera\"，意为雪乐山，这个名字与Sara Entertainment公司以及King's Quest游戏系列有关联。",
        "time": "01:13:07"
      },
      {
        "question": "Mac OS X中新加入的自动解锁功能是如何工作的？",
        "answer": "新版本的macOS中，如果你佩戴有Apple Watch且使用同一Apple ID，当离开桌面超过一定时间时，Mac会自动锁定屏幕。而当你带着Apple Watch回到电脑附近时，电脑能通过蓝牙判断并自动解锁，无需输入密码。",
        "time": "01:15:04"
      },
      {
        "question": "对于自动解锁功能的安全性问题，苹果是如何处理的？",
        "answer": "苹果通过计算蓝牙信号从Apple Watch发出到被Mac接收所需的时间来判断是否解锁，只有在极短的时间内（光速传输时间）接收到信号才会解锁，从而确保了这一功能的安全性。",
        "time": "01:16:48"
      },
      {
        "question": "这个功能具体是什么？这种蓝牙转转发器是否常见？",
        "answer": "这个功能是关于蓝牙转转发器的，可以用来增强设备之间的连接和数据传输。没有听说过或见过这样的设备，但理论上它是存在的，作用类似于wifi信号的放大器或extender。",
        "time": "01:20:07"
      },
      {
        "question": "是否担心在工作电脑上尝试新功能？",
        "answer": "因为工作电脑都装有重要数据，所以暂时不敢贸然尝试贝塔版新功能。",
        "time": "01:20:42"
      },
      {
        "question": "是否有可能通过某种动作（如晃手腕）来确认身份验证？",
        "answer": "是的，有一种增强安全性的可能性是要求用户在解锁时做出特定动作，比如晃手腕。",
        "time": "01:20:56"
      },
      {
        "question": "苹果是否实现了一个类似控制台剪贴板功能的现实应用？",
        "answer": "苹果在Google Dox中实现了一个名为cloud clipboard的类似功能，允许在不同电脑间粘贴复制，前提是两台电脑都用同一个apple ID登录并通过iCloud同步剪贴板内容。",
        "time": "01:22:30"
      },
      {
        "question": "universal keyboard功能的具体用途是什么？",
        "answer": "universal keyboard功能可以让用户在不同设备间共享剪贴板内容，但其依赖于稳定性和可靠性，目前可能存在不可靠的情况。",
        "time": "01:22:30"
      },
      {
        "question": "iCloud在同步时是否存在可靠性问题？",
        "answer": "iCloud在同步过程中存在稳定性问题，经常会出现卡顿现象，导致同步进度停滞。",
        "time": "01:24:21"
      },
      {
        "question": "对于优化存储空间功能option my storage有何看法？",
        "answer": "虽然该功能可以帮助管理存储空间，将其与iCloud结合可能会带来风险，因为用户可能在无网络条件下无法访问云端存储的文件。",
        "time": "01:24:45"
      },
      {
        "question": "safari中apple pay支持情况如何？",
        "answer": "safari支持apple pay，但需要通过手机或apple watch进行确认，这是一种两步认证方式。",
        "time": "01:25:29"
      },
      {
        "question": "对于画中画模式有何看法？",
        "answer": "画中画模式对于多任务处理有一定实用性，特别是在iPad上，但并不清楚有多少应用真正利用了这一功能。",
        "time": "01:27:44"
      },
      {
        "question": "对于IOS上的新更新有什么看法？",
        "answer": "IOS的新更新中，点亮屏幕功能非常实用，特别是对于那些不使用指纹识别功能的用户而言。此外，Siri API开放给第三方应用，使Siri能够更好地响应用户的语音指令，但具体效果还需等待正式发布后进一步观察。",
        "time": "01:28:31"
      },
      {
        "question": "Siri今年做了什么大改进？深度学习如何影响Siri的翻译和识别能力？",
        "answer": "今年Siri的一个大改进是加入了深度学习，据说这样能够记住更多的上下文，更好地理解用户的对话内容。深度学习应该提高了Siri对混合语言的识别能力，例如在Apple Watch中识别特定词汇如“奥迪4S店”，并将其正确转写为“AUDI”。",
        "time": "01:34:09"
      },
      {
        "question": "Siri现在支持听写功能吗？",
        "answer": "是的，Siri现在有听写功能，通过键盘上的麦克风图标开启，可以在iPhone和Apple Watch上使用，并且现在理论上可以混合多种语言输入。",
        "time": "01:35:57"
      },
      {
        "question": "Siri在iPhone和Apple Watch上的后台服务有何不同？",
        "answer": "目前两者在Siri后台服务上有所不同，但苹果并未解释具体原因，可能是在进行测试。",
        "time": "01:35:45"
      },
      {
        "question": "对于Siri混合语言功能的实际体验如何？",
        "answer": "目前Siri已经可以支持双语或多语种输入，但实际效果和精准度还需进一步观察，特别是当遇到不同语言中存在相同词汇时的理解能力。",
        "time": "01:37:17"
      },
      {
        "question": "Photos应用新增了哪些智能功能？",
        "answer": "Photos应用加入了人脸识别、分类以及物件识别等功能，且这些功能在iPhone本地实现，不需要上传照片到云端，以保护用户隐私。",
        "time": "01:37:50"
      },
      {
        "question": "为何能在iPhone本地实现深度学习的推断功能？",
        "answer": "深度学习分为训练阶段和推断阶段，训练阶段需要大量计算，而推断阶段只需利用已训练好的模型进行快速计算。因此，在本地设备上做推断是可行的，苹果会定期更新模型以保证效果。",
        "time": "01:38:10"
      },
      {
        "question": "Apple Maps中新增的magic tension是什么？",
        "answer": "Magic tension是Apple Maps的一个扩展应用功能，允许用户在地图内直接呼叫地图服务提供商（如滴滴或Uber），从而颠覆了传统的打车应用模式。",
        "time": "01:40:18"
      },
      {
        "question": "电话应用的extension功能有哪些应用场景？",
        "answer": "电话应用的extension功能可以用于显示来电号码的归属地信息，帮助用户识别骚扰电话或诈骗电话，提高接听电话的安全性。",
        "time": "01:45:18"
      },
      {
        "question": "现在中国对于陌生电话的处理方式是怎样的？",
        "answer": "现在很多人对于没有显示名字的陌生电话通常会选择不接听。",
        "time": "01:48:26"
      },
      {
        "question": "对于熟人的电话和不常联系的人的电话，你们会怎么处理？这次电话扩展的功能有什么新变化吗？",
        "answer": "如果是跟经常联系的人，会在通讯录里存有名字，可以直接接听；对于不常联系的人或者一些来源不明的电话，一般会选择不接。这次更新中，extension电话扩展可以添加钩子进行拦截操作，并且增强了VOIP（Voice over IP）权限，使得像Skype这样的应用可以在更全面的界面中处理来电，类似于传统电话的来电显示样式。",
        "time": "01:49:48"
      },
      {
        "question": "微信海外版有什么新功能吗？",
        "answer": "微信海外版在探测到用户为海外时，会提供一些不同功能，比如可能包括免费打电话等服务。",
        "time": "01:50:49"
      },
      {
        "question": "iPhone在通讯录和信息更新方面有哪些变化？",
        "answer": "更新后的通讯录和信息功能中，iPhone尝试整合更多社交应用的功能，比如微信的语音聊天可以直接在iPhone的信息功能内实现，这在一定程度上挑战了传统电信运营商的市场。",
        "time": "01:50:56"
      },
      {
        "question": "对于未来语音业务的变化趋势如何看待？",
        "answer": "随着数据导向的趋势发展，预计包括Skype、WhatsApp、微信在内的语音聊天功能将更加普及，可能会影响电信运营商的传统语音业务市场。",
        "time": "01:52:40"
      },
      {
        "question": "数据流量计费方式是怎样的？",
        "answer": "目前的数据流量计费在国内一般是按照一定单位（如K）进行四舍五入计算，但实际上每次使用可能产生的数据量远超过单个K的计费标准。",
        "time": "01:52:10"
      },
      {
        "question": "iMessage这次有哪些重大更新？",
        "answer": "iMessage此次更新加入了rich links等新特性，支持交互式内容分享，如通过APP内的操作进行互动；同时增加了三倍大的EMOJ符号、double effects等新功能，但这些新功能能否显著提升用户使用iMessage的频率还有待观察。",
        "time": "01:54:25"
      },
      {
        "question": "iOS是否在反击超级平台的影响？",
        "answer": "是的，iOS通过底层系统特性反击超级平台的影响，例如允许第三方开发者在iMessage中内置应用、提供更多功能，尝试打破被超级平台无差异化控制的局面，并希望通过吸引开发者创新，创造出有趣的应用来挑战现有的超级平台地位。",
        "time": "01:57:53"
      },
      {
        "question": "苹果在平台国情咨文中主要讲了哪些内容？swift playgrounds for ipad有哪些特色功能？",
        "answer": "苹果在平台国情咨文中主要讲了三点：一是对iMessage APP进行了深入讲解；二是详细介绍了第三方支持Siri的语音控制功能（即Siri Kit）；三是推出了一款新的iPad应用——swift playgrounds for ipad，它是一个用于学习和开发的Swift编程环境。该应用具备实时动态展示代码更改的效果，采用左右分屏设计，左边显示代码，右边显示根据代码实时更新的场景，如游戏界面模型。此外，它拥有一个专为程序员设计的键盘，支持自动补全功能，大大简化了在触摸屏上编写程序的交互成本。",
        "time": "02:02:33"
      },
      {
        "question": "swift playgrounds for ipad的目标用户群体是什么？",
        "answer": "swift playgrounds最初强调面向儿童和编程初学者，不仅给对swift感兴趣的人群使用，也适合学习编程的人群。",
        "time": "02:04:59"
      },
      {
        "question": "这次WDC大会上，对于编程环境的进化有哪些讨论？",
        "answer": "讨论中提到图形化编程环境或交互式编程环境能进化到什么程度，特别是从swift playground展示来看，展示了通过触屏和自动补全等交互方式来实现某些类型编程的可能性，同时也指出这种自动补齐在面对抽象程度较高、运算复杂的编程场景时可能并非适用，需要更深层次的优化和尝试。",
        "time": "02:08:07"
      },
      {
        "question": "swift playgrounds for ipad是否可以将编写的应用发布出去？",
        "answer": "目前还不能确定是否可以将其发布，但可以期待未来可能实现这一功能。",
        "time": "02:09:57"
      },
      {
        "question": "在苹果的APFS中，分区空间的动态调整是如何实现的，解决了什么问题？",
        "answer": "APFS通过空间共享（space sharing）特性解决了分区空间固定导致的尴尬问题。在传统分区中，一旦分区大小固定，若系统分区更新后空间不足或数据分区空间不够用都会很麻烦。而在APFS中，分区不再是一个连续的区块，可以分散在磁盘的不同位置，这样就能动态使用实际存储空间，并且由于SSD的随机读写性能优秀，不存在连续性读写的问题，从而有效解决了既要分区又要高效利用磁盘空间的矛盾。",
        "time": "02:19:09"
      },
      {
        "question": "APFS在加密方面有哪些特点？",
        "answer": "APFS支持三个层级的加密，分别是全盘加密、分区级别加密以及文件级别加密，用户可以根据需要控制不同的加密级别，这一点颇为有趣。",
        "time": "02:20:32"
      },
      {
        "question": "对于数据完整性验证方面，为何苹果在APFS中没有默认实施ZFS那样的严格检查机制？",
        "answer": "苹果认为他们所使用的硬件零部件质量非常好，因此没有默认实现数据完整性验证（如ZFS的check sum机制），仅对文件元数据进行了保护，而对于用户实际的数据并未做同样的保护。这让一些用户感到失望，尤其是在使用非官方认证设备时，无法确保数据的安全性。",
        "time": "02:20:52"
      },
      {
        "question": "WWDC大会上关于WWDC视频转录的准确度如何？",
        "answer": "WWDC大会的所有video都有transcript，且每个词句都可以点击跳转到相应的时间点，这一自动化识别功能非常强大，但可能由于专业词汇缩写等因素，准确度并非100%。",
        "time": "02:23:10"
      },
      {
        "question": "苹果在WWDC期间对API reference网站做了哪些改进？",
        "answer": "苹果将API reference网站改写为React重构成单页应用SPA，用户可以更流畅地通过JavaScript与网站交互，提供了良好的用户体验。",
        "time": "02:25:18"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "纪念英雄与游戏文化：Overwatch中的吴宏宇故事",
        "summary": "本期节目深入探讨了广州工业大学学生吴宏宇在追击抢劫犯时不幸牺牲的事件，以及他作为《Overwatch》玩家，其名字如何被游戏制作方暴雪纪念。讨论触及了游戏社区对于现实世界英雄的纪念方式，以及这种纪念对玩家和公众的意义。节目还提到了游戏内的文化元素，如特定角色的标志性台词，以及社区对于这类文化现象的反响，呼吁大家通过游戏来纪念现实中的英雄。"
      },
      {
        "time": "00:04:12",
        "title": "听众提供主题曲及学习经验分享",
        "summary": "两位主播收到了一位名为米罗张庄庄的听众发来的一段用Garage Band制作的主题曲，这位听众并非程序员，本科及未来研究生专业均为经济学，但对计算机语言有一定的了解，并自学了Shell和Python。此外，米罗张庄庄还是一位业余音乐爱好者，这次使用迷你键盘录制了音乐小品，希望作为节目主题曲。"
      },
      {
        "time": "00:06:10",
        "title": "探讨MacBook与4K显示器的兼容性问题及解决方案",
        "summary": "讨论了MacBook在连接4K显示器时存在的分辨率和刷新率问题，以及如何通过打补丁解决这些问题。提到了一款LG的4K显示器，它可以使用USBC接口与MacBook连接，实现视频传输和供电。虽然存在USB传输速度降低的问题，但整体上提供了一个相对满意的解决方案。此外，也提到了对于未来macOS更新可能解决这些问题的期待。"
      },
      {
        "time": "00:10:34",
        "title": "苹果下一代MacBook可能采用USB-C接口及刷新率讨论",
        "summary": "讨论集中在未来MacBook是否会采用USB-C接口，及其对现有用户的影响，包括对刷新率的需求和外设兼容性问题。特别提到，考虑到性能更新，苹果很可能会采用USB-C，但同时保留USB-A接口以确保兼容性。此外，还讨论了使用30赫兹刷新率显示器进行游戏的体验，以及对于未来MacBook是否支持更高刷新率的期待。"
      },
      {
        "time": "00:16:40",
        "title": "讨论下一代iPhone可能取消耳机孔及解决方案",
        "summary": "讨论集中于下一代iPhone可能取消3.5毫米耳机孔的传言，以及由此引发的对于音频输出解决方案的探讨。提出两种可能的解决方案：通过充电接口输出音频和采用全无线方案。进一步讨论了全无线解决方案的可行性，包括无线耳机的充电问题以及可能的充电解决方案。还探讨了取消耳机孔后，对于需要电源支持的主动降噪耳机的影响，以及可能的市场反应和第三方解决方案。"
      },
      {
        "time": "00:21:28",
        "title": "苹果手表和无线耳机的未来趋势",
        "summary": "讨论集中在苹果手表由于不支持3.5毫米耳机插口，仅能通过蓝牙耳机播放音乐，因此无线耳机变得尤为重要。苹果手表具有内置存储空间，适合存放音乐和podcast，满足运动健身时的音乐需求，无需携带手机。提出了一个构想，即苹果可能推出一种新型无线蓝牙耳机，能同时与苹果手表和iPhone配对，简化配对过程，实现音乐播放的无缝切换。此外，强调了这种设计对于提高Siri使用频率的潜在好处，尤其是在运动或需要随时访问Siri的情况下。对于飞行中的使用，尽管目前存在限制，但预计未来会有改变。整体上，无线化和无缝体验是讨论中的重要主题，预示着苹果产品线可能的发展方向。"
      },
      {
        "time": "00:29:31",
        "title": "40岁后作为一名开发者的思考",
        "summary": "演讲者分享了自己从1997年开始，跨越近20年的编程生涯，涵盖了从Windows程序到网页开发，再到Java程序和web后端，以及iOS应用开发的广泛经历。他接触了多种编程语言和技术，如JavaScript、Linux、SQL等，几乎涵盖了软件开发的各个领域，但未涉及数据库或分析师职位。通过这段经历，演讲者探讨了40岁后作为开发者如何规划人生图景的问题。"
      },
      {
        "time": "00:32:42",
        "title": "程序员的职业生涯与社会观念",
        "summary": "讨论集中在程序员随着年龄增长是否应转向管理岗位的社会观念上。一种普遍观点认为程序员过了30岁就应该转向管理岗位，否则会被视为失败者。然而，实际例子表明，有人即使年过四十仍能愉快地从事编程工作，并未出现健康问题。这挑战了程序员必须转岗的常规想法，指出社会对管理岗位的过度重视以及对技术岗位的低估。此外，还提到了中国文化中“学而优则仕”的观念以及人口红利对职业发展观念的影响，强调了社会阶层的流动性及其对个人职业选择的影响。最后，指出尽管阶级固化可能是一个趋势，但从事技术工作并非不光彩，强调了选择的重要性以及改变对程序员职业路径看法的必要性。"
      },
      {
        "time": "00:38:32",
        "title": "对工人职业偏见的反思与改变",
        "summary": "讨论集中于对工人职业的偏见，特别是受父辈观点和国家经济政策影响产生的负面看法。随着工业化和下岗潮的发生，工人职业受到社会的低估。然而，通过一名在西门子工作的高级电焊工的例子，阐明了即使在技术进步和自动化趋势下，具有高度技能的工人仍然能在社会和经济中占有重要地位。此外，强调了不断学习和更新技能的重要性，无论是工人还是其他行业从业者。"
      },
      {
        "time": "00:43:22",
        "title": "软件开发行业的洞察与建议",
        "summary": "文章强调了保持年轻心态在软件开发行业的重要性，并提供了一系列建议，包括忽略流行趋势、明智选择技术栈、学习软件历史以及持续学习。此外，还提到了软件开发人员的薪资情况，分析了不同年龄段、性别的程序员薪资差异，以及编程经验与薪资之间的关系。特别指出，虽然技术不断更新，但持续学习是应对行业变化的关键。"
      },
      {
        "time": "00:55:53",
        "title": "编程语言薪资水平及市场趋势分析",
        "summary": "对话中讨论了不同编程语言的薪资水平，指出Scala和Closure程序员可能获得超过150K的年薪，而PHP和CSS的薪资相对较低。此外，讨论还涵盖了Go、Swift、Objective-C、Python和Java等语言的薪资范围及市场受欢迎程度，强调了Java作为一种长命且泛用的语言的重要性。最后，提到了地区差异对薪资的影响以及编程语言市场趋势的反映。"
      },
      {
        "time": "00:59:59",
        "title": "WDC后对Apple Watch和Apple TV更新的期待与评价",
        "summary": "讨论了WDC稍有延迟，重点讨论了watch OS3的更新，包括提高了应用启动速度，改善了用户体验，减少了不必要的应用占用内存，以及界面设计的改变，如应用图标大小的调整和新的应用切换方式。同时，对于Apple TV的更新也表示了期待，尽管具体的更新内容没有详细说明。对于Apple Watch，发言者表示因为天气原因暂时不佩戴，但对于新系统的实用性持观望态度。"
      },
      {
        "time": "01:04:46",
        "title": "智能电视体验及Apple TV的改进",
        "summary": "智能电视的开机速度和在线点播的缓冲时间成为用户吐槽的重点，特别是与传统模拟信号电视的即时响应相比。一个被提及的功能，live to in，能显著改善这一体验，让人联想到传统电视的即时播放。此外，讨论还涉及到Apple TV的Single Sign-On功能，极大地简化了用户在不同应用间的登录过程，提升了用户体验。尽管如此，智能电视领域还存在许多未解决的问题，比如开机速度慢和4K非智能电视的缺乏，这些问题导致消费者在选择电视时面临困难。"
      },
      {
        "time": "01:08:38",
        "title": "银行网银指纹解锁体验与Apple生态系统的未来展望",
        "summary": "讨论者分享了他对新银行网银通过指纹解锁授权APP进行支付的便捷体验，将其类比为Apple Pay的使用感受。他指出，这种体验可以移植到其他应用程序上，如GitHub的登录过程，提高安全性与便利性。进一步地，讨论扩展到了MacOS的命名演变，以及Apple Watch通过同一Apple ID解锁Mac的功能，展现了对Apple生态系统未来发展的期待。"
      },
      {
        "time": "01:15:24",
        "title": "探讨电脑自动解锁功能的安全性与便利性",
        "summary": "对话者讨论了离开办公桌时锁屏的习惯，以及一个通过蓝牙自动解锁电脑的功能。此功能利用手表与电脑之间的蓝牙信号来判断用户是否在场，从而实现自动解锁。然而，对于该功能的安全性提出了疑问，担心通过蓝牙信号中继器可能远程解锁电脑。他们提出通过计算信号传输时间来作为安全措施，以确保解锁的合法性。此外，还探讨了增强安全性的方式，如要求用户做出特定动作来确认身份。对话最后触及了其他电脑功能，如通用剪贴板、桌面文件同步和存储优化，讨论了这些功能的实用性和潜在问题。"
      },
      {
        "time": "01:25:27",
        "title": "iCloud功能更新与设备使用技巧",
        "summary": "本次讨论重点在于iCloud相关功能的更新，强调用户应保持警惕以避免被欺诈。特别提到了一个安全性更新，即Mac上通过iPhone或Apple Watch使用Apple Pay，需要两步验证。此外，讨论了画中画模式的实用性，特别是在iPad上观看YouTube视频时，以及Siri的功能和iOS更新，包括提升设备易用性的特性，如拿起iPhone自动点亮屏幕，减少了对Home键的物理操作需求。"
      },
      {
        "time": "01:29:36",
        "title": "Siri Kit及iOS更新对第三方应用的意义",
        "summary": "Siri在iOS更新中引入了许多新功能，其中最引人注目的是Siri Kit的发布，使第三方应用能够响应Siri命令。Siri Kit简化了开发者的工作，通过将语音指令转化为固定命令结构，使得应用能够更容易地理解并执行用户的意图，尽管这一过程存在一定的功能限制。此外，更新还简化了开发者需要编写的扩展，提供了一个必须的扩展用于处理意图，和一个可选的扩展用于提供自定义UI。这种改变旨在提高可靠性和易用性，尽管实际效果还需等待正式发布后由市场反馈来评估。目前，Siri的使用仍相对有限，主要在执行如设定闹钟等简单任务上发挥作用，对于复杂对话的处理能力仍有待提升。"
      },
      {
        "time": "01:33:27",
        "title": "苹果公司对Siri的改进与挑战",
        "summary": "讨论重点在于苹果公司对Siri服务端设计的挑战，特别是状态维护和多语言支持的问题。首先，提出服务端设计对保持会话状态（state list）的重要性，以及通过深度学习提升Siri记忆上下文能力的改进。其次，指出了Siri在多语言使用方面的限制及其改进，特别是在混合语言输入和识别上的挑战。最后，对于Siri能否真正理解和适应多语言环境表达了质疑，强调了深度学习技术在这一改进中的关键角色。"
      },
      {
        "time": "01:37:49",
        "title": "苹果Photos应用的人脸识别与深度学习技术",
        "summary": "苹果的Photos应用新增了人脸识别、物件分类等智能功能，这些功能基于设备上的深度学习技术实现，无需将用户照片上传至云端，从而保护用户隐私。这一技术能够在本地进行模型推导（inference），仅需较小的计算量就能处理新的数据，类似于人类的学习过程。苹果可能会定期更新模型以保持功能的准确性。目前，该功能的效果得到了一些用户的正面反馈，但与Google Photos的直接比较尚未有定论。"
      },
      {
        "time": "01:40:18",
        "title": "地图扩展应用改变打车服务的未来",
        "summary": "讨论集中于地图扩展应用，特别是苹果地图如何通过加入打车服务（如滴滴）的功能，改变用户使用打车应用的方式。这种改变减少了对独立打车应用的需求，预示着未来可能直接通过苹果地图等系统地图应用实现叫车服务。此外，还提及了技术整合的挑战，包括支付、身份验证等问题，以及苹果对滴滴的投资可能预示着未来在地图应用中更深入的合作。"
      },
      {
        "time": "01:45:18",
        "title": "苹果地图打车功能及iOS电话应用更新",
        "summary": "讨论集中在苹果地图新增的打车功能，以及iOS电话应用的更新，其中包括对骚扰电话的拦截功能，此功能之前在安卓系统上已经存在。更新还扩展了VOIP（Voice Over IP）电话的权限，允许第三方应用如Skype在电话来电界面中提供更多功能。此外，讨论也涉及了国内外骚扰电话的情况及应对措施，以及iOS系统在来电归属显示方面的改进，尽管有时仍存在国际号码识别的问题。"
      },
      {
        "time": "01:49:48",
        "title": "探讨iOS 10的全屏来电显示和未来通信趋势",
        "summary": "讨论集中在iOS 10引入的全屏来电显示功能，特别是对于VIP应用如Skype的来电提醒改进，以及微信海外版提供的免费通话功能。此外，还涉及了运营商面临的挑战，如VoLTE技术的推广和数据业务的增长趋势，以及对未来通信服务的展望，包括苹果可能整合更多即时通讯应用的功能，从而影响传统电信业务。"
      },
      {
        "time": "01:53:44",
        "title": "苹果iMessage更新与移动操作系统的发展趋势",
        "summary": "苹果的iMessage在最近的更新中加入了许多新功能，包括增强的链接、大型表情符号、消息应用等，这些变化意在增加用户对iMessage的使用频率，并提升用户体验。此外，讨论也触及了移动操作系统对于第三方超级平台的反击措施，以及iOS中分屏功能的改进和未来可能的应用，反映出移动操作系统正逐步集成更多高级功能，以适应更复杂的工作和使用需求。"
      },
      {
        "time": "02:01:23",
        "title": "探讨Swift Playgrounds for iPad的功能与影响",
        "summary": "在一次主题演讲中，主讲人展示了几个他们觉得有趣的功能，特别是Swift Playgrounds for iPad，一个在iPad上学习Swift的开发环境。这个应用允许用户在左边编写代码，右边实时显示代码更改的效果，强调了教学和初学者友好性。此外，还提及了iMessage的APP和Siri Kit的第三方支持。Swift Playgrounds for iPad的推出，标志着iPad在性能和应用开发上的一大进步，为编程初学者和孩子们提供了一个互动学习Swift的新途径。"
      },
      {
        "time": "02:05:26",
        "title": "Swift Playground的创新与局限性探讨",
        "summary": "对话中讨论了Swift Playground作为可交互编程环境的创新特性，特别是其在iPad和触摸屏上简化编程交互的尝试。Playground自7.0版本开始提供，允许用户即时看到代码更改的效果，例如改变气球的颜色或位置，从而降低了编程入门的门槛。此外，还提到了专门设计的键盘和自动补全功能，极大简化了在触摸设备上编写代码的过程。然而，讨论也指出这种方式可能不适用于所有类型的编程任务，特别是在处理高度抽象或复杂的算法时，自动补全和图形化界面的局限性显现。尽管如此，Swift Playground为将来在平板设备上进行编程提供了一种新的可能性，表明还需要进一步的优化和创新以满足更广泛的编程需求。"
      },
      {
        "time": "02:12:01",
        "title": "Swift 3更新与WWDC2016重点回顾",
        "summary": "讨论者主要回顾了WWDC2016中Swift 3的更新，包括语法更加简洁、API更加Swift化以及对GCD的接口进行了简化，使其更易于使用。特别强调了Swift 3的目标是增加稳定性，并提到了Dock程序的重写，显示了向Swift的逐步迁移。此外，还提到了对于Swift在macOS中的使用情况，暗示了Swift的稳定性和未来在macOS上的应用。最后，讨论者简要提到了其他WWDC2016的主题，包括平台状态、新的苹果支付功能、iOS更新、Swift更新和搜索广告的介绍，以及新的可访问性功能和Apple文件系统。"
      },
      {
        "time": "02:16:19",
        "title": "APFS：Apple的新一代文件系统",
        "summary": "在讨论中，APFS (Apple File System) 被提出作为HFS Plus的替代品，以适应现代固态存储技术。APFS的特点包括为固态硬盘优化、支持动态调整分区空间大小、提供数据加密等高级功能。尽管如此，对于数据完整性验证的缺失引起了一些担忧，苹果方面解释使用的硬件质量高，减少了这一需求。此外，APFS计划在2017年全面部署于Apple设备上，但仍处于研发阶段，希望在正式推出前能完善数据完整性保护功能。"
      },
      {
        "time": "02:23:10",
        "title": "WWDC体验与Apple新技术讨论",
        "summary": "WWDC的主要特点是所有视频都配有可点击跳转的字幕，这项技术由Siri支持，实现了对专业词汇和缩写的准确识别。此外，讨论了Apple如何在短时间内为视频生成精确的转录文本，提出了可能是通过特殊技术和人力结合的方式实现。还提到了Apple对API reference网站的重写，使用React框架，改善了用户体验。最后，提到了开发者会员资格的好处，以及公众可以下载iOS和macOS的公开测试版。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "大幅度提高启动速度"
                },
                {
                  "children": [],
                  "content": "更换应用启动界面，采用类似快捷切换方式"
                }
              ],
              "content": "watchOS 3"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "引入live tuning功能，实现即点即播"
                },
                {
                  "children": [],
                  "content": "单一登录功能，简化内容访问流程"
                }
              ],
              "content": "tvOS"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "通用剪贴板，实现设备间数据共享"
                },
                {
                  "children": [],
                  "content": "自动解锁，使用Apple Watch解锁Mac"
                },
                {
                  "children": [],
                  "content": "iCloud Drive优化，提供桌面与文档云存储"
                },
                {
                  "children": [],
                  "content": "Siri集成，增强搜索与信息检索能力"
                }
              ],
              "content": "macOS Sierra"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "提升Siri功能，开放给第三方应用"
                },
                {
                  "children": [],
                  "content": "Photos应用升级，引入智能分类与搜索"
                },
                {
                  "children": [],
                  "content": "Maps应用扩展，支持第三方服务如叫车"
                },
                {
                  "children": [],
                  "content": "电话应用增强，提供垃圾信息识别与拦截"
                },
                {
                  "children": [],
                  "content": "iMessage重大更新，增加富媒体信息与应用扩展"
                }
              ],
              "content": "iOS 10"
            }
          ],
          "content": "新功能与改进"
        },
        {
          "children": [
            {
              "children": [],
              "content": "watchOS 3的启动速度提升，减少用户等待时间，提高用户体验。"
            },
            {
              "children": [],
              "content": "tvOS的改进使用户能更快地访问内容，单一登录简化了操作流程。"
            },
            {
              "children": [],
              "content": "macOS Sierra的自动解锁功能提升了安全性与便利性，iCloud Drive的优化增强了数据管理的灵活性。"
            },
            {
              "children": [],
              "content": "iOS 10的Siri开放与iMessage更新，增强了系统的开放性与互动性，提供了更多个性化服务。"
            }
          ],
          "content": "技术细节与用户影响"
        },
        {
          "children": [
            {
              "children": [],
              "content": "设备间的整合进一步加强，提供更加无缝的用户体验。"
            },
            {
              "children": [],
              "content": "开放性增强，通过将Siri与iMessage开放给第三方开发者，促进了生态系统的丰富与创新。"
            },
            {
              "children": [],
              "content": "隐私与安全，通过本地处理等功能，保护用户数据安全，减轻隐私泄露风险。"
            },
            {
              "children": [],
              "content": "用户界面与交互，通过持续优化用户界面与交互设计，提升用户体验，减少用户学习成本。"
            }
          ],
          "content": "对行业与用户的长期影响"
        },
        {
          "children": [
            {
              "children": [],
              "content": "挑战：保持系统的开放性与安全性之间的平衡，确保用户数据安全。"
            },
            {
              "children": [],
              "content": "机遇：通过技术创新，提供更多个性化、智能化的服务，满足用户的多样化需求。"
            }
          ],
          "content": "行业挑战与机遇"
        }
      ],
      "content": "苹果公司发布会总结"
    }
  }
}