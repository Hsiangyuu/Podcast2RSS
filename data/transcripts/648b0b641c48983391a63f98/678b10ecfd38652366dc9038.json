{
  "pid": "648b0b641c48983391a63f98",
  "eid": "678b10ecfd38652366dc9038",
  "title": "我是这样用 RL + LLM 做 Agent 的｜对谈 Pokee AI 创始人朱哲清 Bill",
  "task_id": "58gmq6a8gxd59zwo",
  "transcription": [
    {
      "time": "00:00:02",
      "text": "Do something there.",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:19",
      "text": "好，我们今天很开心请到poky I的创始人bill。Bill我们也是校友。对你先简单介绍一下自己之前的大概的情况。我之前七年半一直都在。",
      "speaker": "发言人2"
    },
    {
      "time": "00:00:29",
      "text": "meta然后后面几年是在apply reinforcement，就强化学习团队做负责人，负责的事情主要就是把强化学习这一套框架以及研究落地到广告推荐系统以及info各个方面。同时的话过去六年多我在stanford也读了强化学习的博士。是跟benin也是做21方向，然后最近刚刚出来做PKI这个starter，主要核心目的就是要以强化学习加LM核心做出一个在推理能力个性化各方面更强的AI agent。所以你之前其实主要是技术背景，对，纯技术背景基本上。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:08",
      "text": "但是我在meta的前三年其实做MO落地比较多。负责meta s的to b业务的MO推荐系统的落地，以及第一批的强化学习的落地模型。当时我们做了RL在广告的那些折扣上面的一个应用，也是meta的第一批的奥妙应用之一。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:29",
      "text": "对，就为什么这次请朋友来聊，我觉得现在海外其实大家都知道有好几个东西很热。其中一个就是强化学习，对，一个是agent然后你现在是用强化学习来做agent吧？这两个正好都站上了，所以我觉得我们今天可能可以多聊一些美国那边的agent，强化学习等等这些相关的东西。还是想先从meta这段经历开始？因为你之前七年，在七年半，七年半还挺久的对，而且核心做的都是深度学习，强化学习相关的东西。首先但我好奇的是这个东西其实是最近一年又开始热起来的对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:05",
      "text": "对，之前很多人对强化学习都有他们自己的怀疑。因为小白其实在16年完成alpha go那一批以及在各种游戏上面的突破以后，后来很长一段时间大家都觉得没有进展。当中有很多很多的问题，就是核心的一个痛点在于说这些环境都是游戏环境，就不停的跟这个游戏环境去进行交互，去得到结果。但是你在真实环境下很难得到这样的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:33",
      "text": "与此同时大概20年左右的时候，比如说那一系列GPT NLP那一波开始慢慢变活了。当时就觉得说很多的规划问题或者说这种多步决策问题是不是已经可以做了。然后与此同时也出现了很多decision transformer，类似于这样的文章出来说OK我们可以完全transformer作为influence的方式去解决问题，完全不需要再用强化学习了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:59",
      "text": "最近又热起来的一个核心原因是大家发现在更复杂的规划或者推理问题上面，只是通过过往的经验以及一定程度的模仿性的学习，已经不足以完成这个问题了。所以即便OpenAI他们也开始转型说OK我们可能要做一些规划型的这种agent。比如说欧文的时候，大家猜测就是他最后在influence的时候做了MCTS，类似于这种规划型的能力。它的核心目的就是能够找到说现有数据集，或者他在预训练或者post training以后没有得到过的这种能力。能不能通过搜索来得到去探索未知或者说平行宇宙式的这种路径呢？这是21比较擅长的。所以为什么大家会觉得说可能要焕发新生了？最近open I他们做o to b和ON的一个researcher，他们在twitter上面还说，因为发现了211非常powerful，所以他们最近的思考问题的方式全部都被21化了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:56",
      "text": "我跟很多人分享的一个看法就是2L跟现在大模型这一系列的并不是一个平行的这种操作模式。它可能是垂直型的，就是说你可能可以把大模型跟传统的神经网络做对比。但是21是1种学习方式，所以它仍然可以和现在的transformer这一套并行。在它也可以利用LOM的能力去使规划能力更强。所以我觉得强化学习能够在IOM井喷的今天可能会有更长足的发展。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:30",
      "text": "所以你觉得它并不是一种比如技术方案上的倒退或者怎么样。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:34",
      "text": "不是可以联系到我自己，为什么？出来的一个核心点就是我认为LM和今天算力增强以后，大模型的能力的提升，是211能够接下来有巨大成功的一个基础。过往的话我认为可能211直接成功的基础还没有那么大，现在反而我认为基础更大。",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:54",
      "text": "怎么讲？",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:55",
      "text": "因为21有几个比较重要的点，一个是它有非常强的对于环境action各个方面的理解能力。而这一系列的representation是很多人一直在强化学习这边寻找方案的一个事情。现在的话你如果有了LM很多东西都可以完全用语言，然后做embedding这一系列的这种方式去完成这个重构。你就不再需要专门去设计一个架构给二一一去解决这些问题。就现在LOM的出现，相当于是给了一个非常基础的对于世界的一个理解，让强化学习去产生更强大的那种跟世界交互的能力。所以有了LM以后，我认为L可以发展空间就变得更大了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:05:43",
      "text": "所以最终我们不管是这两个谁为主，或者是技术上谁好谁劣，最终他们结合起来到底要解决的是一个什么问题？",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:50",
      "text": "比如说我们的设想技术架构，就是当一个用户或者任何一个终端给到我们的AI agent一个需求。这个AI agent会把这个需求去解构，解构他就是说我的目标是什么？我们有哪些措施我可以采取，我们所处在的状态是什么样的？我们需要去采取1233个步骤来完成这个最后的目标。这个解构完了以后，但我不知道说123这3个步骤是什么。21就可以抗命，说我先采取一措施，然后三措施，然后四措施，得到说他可能成功的概率是多少，下一步再去试一个别的。通过这种方式，我就可以找到哪样的一个路径最容易能够达到那个结果。然后找到最优路径以后，完成这个路径，得到解决方案，拿到结果以后再返回给语言模型，然后由他再去重写，写成一个人可以读懂的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:47",
      "text": "在IO选步骤这个时候，就你像你讲的，不管是123还是132这些步骤它是从一个LM已经有的生成的步骤库里面去挑，还是说他现场去生成。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:57",
      "text": "取决于这个L或者整个AI agent它所在的环境是什么？就是你的action本身是不是被你完整定义了。我举个例子，比如说在供应链问题上面，你的action是完全定义的，你只能把这个量的货物从这个点派发到另外一个点。像这样的action，那你可能就直接去靠就好了。如果有一些，比如说我要去解一个数学题，那这个是没有被完全定义的action。像比如说欧文跟O最现在要解决的那种偏数学性的问题，它就是没有被完全定义的那他的chain of thought的那种推理方式就是说我先生成一个结果，那这个结果再生成下一个结果，然后每一步结果以后都会有一个LM自己去valley说，我这个结果到目前这个位置是不是好的一个结果。然后如果到某一步卡住了，那我再倒推回来，在某一步再重新往前推。在这种情况下就需要IOM去辅助，然后我去找到说哪些是真正的action。",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:57",
      "text": "但如果之前没有L的时候。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:00",
      "text": "我遇到的问题是什么呢？就是我要怎么知道说什么样的路径是最好的，它有可能会完全永远卡在同一个路径上。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:07",
      "text": "面对这个就是之前大家讲的，就是有可能它在一个小闭环里面无限重复。对对对，但这个为什么呢？LM模型本身它不能去验证这件事情，也一样的逻辑就是我试了123得到个结果，然后用大模型本身去验证这个结果。对，然后不行的话就再换一个，然后再验。这个好像从人类的逻辑来讲，感觉不是一个很复杂的事情。",
      "speaker": "发言人2"
    },
    {
      "time": "00:08:27",
      "text": "语言模型核心还是以一个数据集作为光腚的那在这种情况下，语言模型就是我只有一根筋了，我已经想不到别的方式。而且像他这种探索方式，几乎是完全随机的，效率很低的一种探索方式。我们从人的一个比较直观的方式去想人是怎么探索的。比如说我今天去吃饭，有三家店是我想去吃的。其中有一家店是我每个礼拜要去吃五次的，剩下两家店有一家店我去吃过一次，非常差。然后另外还有一家店我从来没去过。如果你今天觉得说我想要知道我最喜欢的是哪一家店，你会选择的不是说我随机在这三家店里面选一家，而是我在第三家，我一定会选第三家，因为我对第三家有最高的不确定性。如果我去了第三家，我觉得还不错，那我可能会再去一次。如果两次都很好比第一家还好，我可能就觉得好，第三家可能是最好的。所以他所做的选择更多是基于你对于世界的不确定性，而不是说我随机在里面不停的选。",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:32",
      "text": "如果你用语言模型去找到那个最佳路径，它基本上就是完全随机的一个状态。那21为什么在这个地方会有效？是因为它可以去找到我的不确定性在哪里，我更好的去探索那些不确定性，然后使得我更快速的找到那条路径应该是什么。",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:48",
      "text": "我记得之前经营商举的例子就是一个迷宫，让他从一个点进来找出口，里面可能有各种算法，然后各种方法去怎么样最快最短时间去找到那个出口。所以像你讲的，如果是大语言模型本身的话，它可能就是在中间一个有可能有个路径，它是最高概率。然后他一直在那转圈。",
      "speaker": "发言人2"
    },
    {
      "time": "00:10:05",
      "text": "对对对，不停的在那转圈，然后他就再也不会往外走了。因为他根本不知道说他对外界有多大的不确定性。所以。二楼在这个地方会有一个非常大的优势。",
      "speaker": "发言人1"
    },
    {
      "time": "00:10:15",
      "text": "还有一个点就是我们叫counter factual reasoning的能力。其实211的1个核心点就是假设这个世界本身是一个大世界，还是小世界的一个区别。如果说你觉得这个世界是个小世界，一个模型可以学习到这个世界所有的变化，那你就可以直接reason。而现在我们发现那么大的模型仍然不能够直接reason得到所有的结果，那就意味着大世界小agent这么一个假设，就是说这个世界的可能性是无穷的。Agent需要知道的并不是这世界上所有的变化，而是说在每一个我所在的状态之下，我成功的概率有多高，最终能得到的握持度高。所以我能够去规划说我这么采取这三个措施就能够成功的概率是最高的。RLM他不是这么去思考的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:02",
      "text": "刚才我一直在想他的中文是什么？因为之前好像有个德剧，还是叫什么？就是他研究历史上其实很多时候用在你刚才说那个概念，对吧？就是我记得他的剧情是说，如果二战是德国日本胜利了，那世界会变成什么样子？",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:17",
      "text": "对对对，就这种。我经常说很多时候强化学习要去解决的问题是平行宇宙的问题。这件事情永远没有发生过，将来可能也不会随着发生。但你要去思考说，如果你做了这一系列的事情会发生什么？",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:32",
      "text": "他是思考还是他真的自己在后台自己试了一遍。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:36",
      "text": "他没有试。就是他根据他过往已经做的所有的事情去算说比如说你过往去走了五条路径，那这五条路径本身你是用不同的决策方式来做的那根据这五个角色方式以及你所在的现在的状态，如果你把这个角色稍微偏一偏，我能够得到的结果是什么？它是的一个条件概率下的一个value。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:03",
      "text": "但你刚才讲那个case里面，RL它是要收集到所有数据，然后去计算出来一个确定性的结果。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:10",
      "text": "它不是确定性的，就是它是条件概率下的一个希望OK他也是一定的概率性。对，但是他条件是条件在他自己的决策方式上的，而LM它的决策方式是不会变化的。所以当你去采取不一样的一个策略以后，它会发生什么？其实LOM它是没有这个reason能力的。他只知道我现在这个角色就是固定了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:12:33",
      "text": "我不会再变了。听起来还是有点像一个是理科生，一个文科生作为结论。我想问一下，就是现在你觉得，尤其是你在美国那边看了这么多，听了这么多大家讨论是不是现在有个结论说LM跟结合就是一个现在最好的方案。",
      "speaker": "发言人2"
    },
    {
      "time": "00:12:49",
      "text": "其实有很多人是想做21的单一方案，比如说rich sutton，他现在在做的就是怎么用RL和持续学习去完成一个L案本身无法完成的事情。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:04",
      "text": "就是把transformer整个都推翻。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:07",
      "text": "我不知道他会不会推翻了，但是他的意思就是说在持续学习的这个状态下，如果你的数据是流，就是数据流会不停的进来，是无限的。而不是一个单一数据集的情况下，LM这种模型本身它是不具备可以永久训练的能力的。这个东西叫plasticity。就是举个例子，你把一个弹簧，弹簧把它拉拉拉拉到最紧了再拉就会崩掉。就是当你拉到最紧的时候，这个模型已经饱和了以后你就不再能得到更多的信息了。所以有这么一条线一直在推它，这条就偏理论了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:41",
      "text": "就落地而言，大多数人还是希望把LM和某种意义上的规划型模型将它组合起来。比如说google以及meta有一部分人也都提出了快思考和慢思考的概念。快思考就是不停的直接可以给到你QNA的结果。然后慢思考可能说我需要去做chain of flood，然后得到结果以后才能反馈给你那有一些人就是说我可能我不是做chain of thought，就是不依赖于OM，就像我现在在做这条路，就是我有个完全不一样的决策模型，然后用不一样的算法去训练。训练完了以后得到的这个结果再反馈到LM作为结果，变成一个组合型的一个AIA。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:18",
      "text": "我们现在做的做法有点像，比如说人类大脑的每个区域，它的思维方式是完全不一样的。我们21的这种训练方式就跟像多安自己一样，豆瓣越高我可能做的东西就越好，所以我的决策是跟着最后的结果好不好来的。LM可能是个知识区，我存储下来了我就怎么赔给你，也就类似于这样的一个东西。所以这两块对于我们来说，可能它的训练方式就完全不一样了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:42",
      "text": "我在最后问一个跟L相关的问题，就是因为我们之前也看过一些相关的资料，就发现之前的L大多是有一个明确的标准答案的，或者有一个绝对的一个清晰的目标的对吧？比如我就是要赢某盘棋，或者我就是要走出一个迷宫。但在现实生活当中，尤其跟LM结合的很多领域里面，场景里面，他可能没有这个东西，对吧？比如最典型的就是大家跟AI做陪伴聊天这种场景，没有一个所谓的谁比谁更好。那这个时候你去做人类的反馈，该怎么样去处理这个问题？",
      "speaker": "发言人2"
    },
    {
      "time": "00:15:12",
      "text": "我举一下我之前在meta的例子。二一个比较厉害的一个地方就在于，因为它算的是一个期望值。当我有一个一整套系统，我需要去优化整个公司的营收的时候，比如说我们优化的是广告竞价，那在某一些竞价上面我可能做的没有那么好。但有几个竞价我使得某些用户有比如说20%、30%的提升，那总体的广告效率就会提升很多。这个也是过去几年我们落地最好的一些场景。就是说你有大量的可以尝试的空间，然后你要优化的不是单一场景下的结果，而是在总体场景下的一个总结果。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:54",
      "text": "还有一个比较重要的点就是21落地要么需要一定探索能力，你可以采取的action的数量非常多，然后你很多的action都没有见到过它的结果是什么样子的。比如说我们有一个推荐系统的落地例子，就是我们在facebook real上面有一个项目是用自动老虎机，就是bandits去落地。怎么快速推荐？我们用2L的exploitation算法，然后我们发现对于那些我们不太知道他们的兴趣点是什么的用户，通过探索型的推荐算法可以使得有几十个百分点的他们的engagement的提升。而如果你只是用普通的推荐算法，那些新用户你不知道他们喜欢什么，有很大不确定的情况下，用户很快就流失了，这是我们一个实验的结果。",
      "speaker": "发言人1"
    },
    {
      "time": "00:16:38",
      "text": "而另外一个，比如说我们刚刚说的广告竞价这个例子的话，一个action是基于另外一个action之上的。所以比如说你第一个时间点上花了十美金，那就意味着第二个时间点你可能要少花点钱。而第一个时间你如果花了五美金的，第二个时间可以多花点钱。如果有这样的互相之间第二个action，基于第二个action这样子的一个性质的话，它就会让你的决策有一个多步的性质在里面。那21也会有更大的好处。而如果你所有的action就是单一一个action，然后我知道它的结果是什么，只是一个纯预测型的问题的话，那二在里面不会有什么太大的作用。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:15",
      "text": "明白。然后我们讲讲agent相关的，agent这个事儿其实去年就有？从什么凹凸GPT开始？然后今年大家又讲了一年的感觉，包括最近David就出什么的又很热。然后明年又有很多人讲明年是agent元年，agent这几年到底在发生什么？他经历了什么变化？然后为什么一直在讲，但一直在等落地的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:40",
      "text": "我觉得agent这个概念有点被玩坏了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:17:43",
      "text": "有点也有人跟我讲啥都是agent，对吧？确实什么都可以是agent。可能就是说你帮我买张机票。",
      "speaker": "发言人2"
    },
    {
      "time": "00:17:48",
      "text": "那他就买了。订机票这件事情，目前你靠工程也能完成这件事情，什么都不用，我就直接写点条件，我都可以把这个事儿做了。真正复杂一点是我比如说你的出差，然后我要去这三个地方，然后回头我还要去趟杭州，然后去完杭州以后，在两天之内我要回北京。那这种非常复杂的情况下，就会使得正常的靠工程方式来完成的事情就不可能了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:14",
      "text": "说这个真的是我的刚需，如果真的有人用AI做出来，我愿意付费的，真的吗？因为你自己搞很复杂，就你得定好了到底哪个约在哪儿，然后怎么安排，怎么订票，时间怎么样什么的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:26",
      "text": "对，这个东西是我当时创业开始的时候，我去pitch投资人pitch的第一个demo就是做的这个东西。然后我们当时做了single city，就是单一城市下多天多酒店多地点的一个规划性的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:42",
      "text": "但你看这个东西，我记得去年上半年的时候有很多黑客松。对，每个里面我觉得基本都会有一个是做AI旅游什么AI行政规划的。但那个时候为什么做不出来呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:53",
      "text": "现在还是做不出来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:18:54",
      "text": "所遇到的问题到底是什么呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:18:56",
      "text": "因为规划性的问题就在于你短途规划，你可以用LM就可以完成了。因为你很简单，但多层规划就出现了我们刚刚说平行宇宙的问题。我可能规划了十步，第十一步发现规划不下去了，这个城市被卡住了，那你往前推推到哪儿了你也不知道。就是每多一步它的复杂度都是书籍上升的。所以你需要的不是一个穷举的能力了，而是一个搜索的能力。这个搜索能力就是你需要去真正去理解我采取每一步措施对未来所产生的影响会是什么样。然后再考虑到未来的情况下，再去拆成这样的措施，才能够完成这种比较复杂的规划问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:19:39",
      "text": "我觉得LM没有这个能力，它因为是基于过去去预测下一个可能出现的token是什么。所以他不可能说知道我先去知道未来可能会发生什么，再去推理说我下一步要做什么决策。所以IL在这里面就能起到作用。对，因为我算的时候做了这件事情以后，对未来的期望是什么？比如说我有三个事情，我如果这三个措施里面有一个措施我做完了以后，我对未来期望变成零了，那我就知道说这个东西未来肯定不能完成这个任务，那我就会选别的措施。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:12",
      "text": "但这里面如果我只用L不用LM会怎么样呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:17",
      "text": "可能是个21的基础，就是transformer这种架构，能够理解人类语言或者图像的这种能力，是帮助2L去跟人类的数据进行结合的一个过程。就是我如果单有2L我只是一个抽象的跟数字打交道的一个系统。你需要一个语言模型LM或者一个vision model，从一个具体的措施变成一个抽样的措施，然后让21去做决策。",
      "speaker": "发言人1"
    },
    {
      "time": "00:20:44",
      "text": "我明白，但我从一开始讲的时候，我就在想，如果按这个逻辑，其实IL才反而是核心，对对吧？LM就变成它就是一个你的输入输出的一个翻译。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:56",
      "text": "就我们最新发布的这个产品里面，所有的决策全是二流，外部所有的IO接口是LM这么一个架构。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:04",
      "text": "你是觉得长期来讲就是这样，大概L跟LM的一个配合的关系，这是我的想法。所以我这是我下一个要问你的，就是你公正客观来看，在美国，至少美国的技术界什么的，对吧？大家的现在最主流的想法其实也是像这种吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:19",
      "text": "还是什么？不一定。二一加LM的这个大方向目前没有统一的。比如说李飞飞他们最新的AIA阵的那篇paper里面讲的更多的不是以二为核心，而是以模仿学习为核心的。所以总体来说这个路径没有被统一。可能期待第一个真正意义上的可以多步决策，而且非常可靠的这种AIA症出现。如果有这么一个东西出现的话，大家就会一拥而上变成一条路。",
      "speaker": "发言人1"
    },
    {
      "time": "00:21:52",
      "text": "但听起来是不是不管这个路径是什么，好像大家现在默认的是LM本身挺难达成不够。",
      "speaker": "发言人2"
    },
    {
      "time": "00:21:58",
      "text": "当然还是这句话，就是你可以通过LM这个架构在这之上，你比如说你把它的训练算法变了，就比如说ON和O对它并没有改LM本身的架构，它只是最后训练算法变了而已。就是它的这个模型架构是不变的，只是算法变了。所以从我的角度来说，LN本身不能解决这个问题的核心还是在算法层面上。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:20",
      "text": "不是在架构层面上。明白，就还是算法加工程的一个组合的感觉的东西。所以最后你为什么会想要做agent的这件事情呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:31",
      "text": "我想做一件其实想挺久了，我之前一直卡在一个点上，就是在大公司你有很多人帮你准备。从具象到抽象的这个过程。那你通过这个方式，你可以比如说我们在做广告竞价，推荐系统这些东西落地的时候，你就只需要把21放在算法层面，然后去把这个决策方式给他学了就好了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:22:55",
      "text": "但是你真的要放到完全开放世界里面，二维模型其实是不行的。你没有具象到抽象的这个精简过程。现在有LM了以后，把原来的人为的过程全都变成了抽象过程，就是一个模型就可以帮你搞定。并且在很多时候它可以帮你生成线下数据，让强化学习去学习。而且有了LM它也可以从某种意义上去帮你去判断说你的2 agent是不是做的好或者不好。所以从我们的角度来说，他把我们整个我一直在想的这个思维的闭环给闭环了。那我觉得就是机会出来试一下。",
      "speaker": "发言人1"
    },
    {
      "time": "00:23:35",
      "text": "所以你可以再讲一下你们现在的agent大概做的具体的是一个什么事情。",
      "speaker": "发言人2"
    },
    {
      "time": "00:23:39",
      "text": "我们最终的目标是要完成一个可以自主调用上千上万个API，然后做多步决策，能够完成非常复杂的规划和推理任务的这么一个agent。早期的话，今年我们已经贝塔发布了一个在电商方向的一个agent，它是架在HOPFIE的架构上面。但是在不到一个月的训练时间之内，我们的只有1500万个参数的r agent，加上一个十个表演不到的一个语言模型放在一块，就已经可以完整的掌握几十个刷出来的API基础的搜索跟推荐的能力，以及客服能力。而且当你把这个agent放到任何的一个shopping网站上的时候，不需要再特殊的个性化训练。所以它等于是一个非常通用型的一个agent。而且用了一个那么小的架构，加上那么短的训练时间就达到这个效果。我认为这个未来是非常可期的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:24:37",
      "text": "就是你的客户是收费的商家。对，就假设我是一个收费法商家，你就你要跟我讲的话，你提供的最核心的产品服务和价值到底是什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:46",
      "text": "就是你不再需要去安装几十个你完全没有办法控制的插件，而且你不再需要去雇佣好几个工程师。然后你也对于你自己的整个商店里面的所有的参数什么都有完整掌控。而且你所有的插件互相之间，比如说搜索、推荐、客服各方面它都互相之间都是有交互完整一体的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:12",
      "text": "就是你的这个agent它是在后端是对接各种API，对，然后在前端是对后端的所有的各种数据和API的最后整合以后重新定义或重新建立。他觉得OK的一个前端。",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:26",
      "text": "可以这么理解，就是除了展示产品页面之外，剩下的搜索、推荐、客服拆报这一系列的这种UI都是由agent基于一个模板生成出来的一些结果。",
      "speaker": "发言人1"
    },
    {
      "time": "00:25:42",
      "text": "以前其实可能售票里面也有插件，就有个A插件加上关联产品推荐，B插件可能加上搜索对吧？C插件可能就加上了一个什么客服对话。对你现在相当于说我只接你，然后你去判断说你要接哪个东西，怎么样组合起来，怎么样去呈现，以及说这几个东西还能联动起来，对吧？就是你你后台的数据是一致的，我用你就有点像招了一个网站负责人的感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:04",
      "text": "对，就是这么一个意思。而且特别好的一点在于说，原来的其实并不是你搜索就一个插件就行了。而是你搜索需要找一个搜索的插件，然后你搜索的那个品类还需要再装一个插件。然后推荐也不是一个插件加起来可能。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:22",
      "text": "有几十个插件。比如收费一共有多少个插件。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:26",
      "text": "你有算过，有几千个OK。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:28",
      "text": "但我如果用你的话，就是你是来调用他们的一些插件。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:32",
      "text": "还是你就这个事儿，就是我们现在整个可能我认为互联网世界里面的工程性的问题，就是它的层特别多。这些其实都在调用soft的底层插件。但是这些人，就是在当中插了一层，然后收你钱。但其实你可以调最底层的插件，都可以完成这个事情。可能比如说有些shop line不提供的功能，你可能自己需要做一个后端的存储。",
      "speaker": "发言人1"
    },
    {
      "time": "00:26:56",
      "text": "所以你学习的是不是就学习的这些插件。",
      "speaker": "发言人2"
    },
    {
      "time": "00:26:58",
      "text": "我学习的是P底层的那个API.",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:01",
      "text": "这个学习怎么学习呢？它底层API是学什么东西呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:05",
      "text": "我只能说他把API从具象变成一个抽象的action以后，21会去完成。就是做什么样的action会得到什么样的结果，用户是否满意的一个self play。这个我具体怎么说我不能说，但是简单来说就是通过self play 21 agent会知道这些API能解决什么样的问题。然后在什么时候应该调用什么样的API，甚至于这个API的参数应该用哪些参数，他都会自己知道。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:33",
      "text": "那你这个训练其实是纯IL的方面的训练，对吧？就是它跟我们现在讲的这个大模型本身的训练是不太一样的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:39",
      "text": "没什么关系，唯一的关系就是这个embedding ing layer那些API把它从具象的文字变成了抽象的embedding。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:48",
      "text": "但是之前如果没有语言模型做不到这件事儿有几个点。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:52",
      "text": "一个就是我要理解我做了一件事情最后的结果好不好？这个东西需要语言模型帮去告诉你说做的是不是好，然后另外一个就是需求的生成，你也需要语言模型。然后一个非常好的embedding模型也是最近有语言模型以后才出现的东西。所以这一系列都是这整个路径非常重要的一个事情。过去没有好的语言模型不行。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:15",
      "text": "也有很多人在猜说O一什么O3是不是就是用了很多IO相关的各种技术。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:20",
      "text": "对于有他们在更多是在层面上做了很多类2L的优化。比如说欧文，大家猜测是用了MCTS，就是monitor research，它是一种探索型的规划算法。就说我走这么一条路，然后看一下行不行，然后再返回来，然后再走另外一条路，然后再返回来，周而复始。可以帮助你去规避掉说你肯定不行的路径。但是它所带来的结果就是你的整个influence的价格非常高，然后时间也非常长，所以就需要常思考。所谓的长思考就是这意思，就是说我需要在influence的时候去思考这个事儿，那就非常复杂。",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:57",
      "text": "其实一样的queen我跟他聊过两次，他其实也是想做这种长思考型的规划型的。从他的概念可能没有agent这个概念，他更多的是说就是怎么通过世界模型去进行长思考。就是世界模型在你采取一个措施以后，它会自行的告诉你们下一个状态是什么样的，然后再下一个状态是什么样子。这是为什么他觉得说有个世界模型以后，所有的规划会变得非常容易。因为你会知道说你做了什么以后，下一步会发生什么。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:23",
      "text": "就还是挺IL的那个思路的。如果不是IL我在想你刚才说那个那就变成穷举法了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:30",
      "text": "对，从某种意义上来说，如果你没有像MCTS这种探索方式，或者说你没有一个word model可以帮你去知道，如果你做这件事情一定不会沉的话，就变成跟穷举法，就是我刚刚说随机。",
      "speaker": "发言人1"
    },
    {
      "time": "00:29:43",
      "text": "探索的那种状态。OK所以A政策你现在觉得大概在一个什么阶段？然后大家现在核心面临的问题是什么？",
      "speaker": "发言人2"
    },
    {
      "time": "00:29:51",
      "text": "我觉得有一些问题，首先是目前大多数的所谓agent还是基于LM可能加一些rag做出来的一些所谓的agent。他们在coding方面可能是有最多落地的。目前coding其实从某种意义上来说，应该是所有A镇里面相对来说可能最复杂的一个，但是也是可能金字塔顶尖最值钱的那个。现在最大的问题就是如果你做一个非常复杂的工程架构性问题，那目前的LM都解决不了这个问题。那我们如果退一步说，不是coding这个领域，剩下的所有的领域，可能在每一个垂类上面都有一些公司在想办法做。更多的就是接gam，接OpenAI，想办法去做一些工程上的挑战，去完成这些所谓的对于真实世界的影响的一些落地。但是通用性的这种能够横跨很多个领域的美军还不存在。所以这也是我们最终想要达到一个目的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:30:56",
      "text": "你想做一个A症的是他有点世界A症的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:00",
      "text": "就是他已经见过大多数要做这件事情需要靠什么样的API，用什么样的措施的这么一个。当你真正把它落地到某一个场景的时候，你可能几乎不需要微调。他就知道你给他这20个API哪个API可以解决什么样的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:31:17",
      "text": "你觉得一个未来的agent的就是他其实就每天在跟各种API打交道。对对对，也有可能他会跟人打交道，对吧？他比如说如果是客服之类的这种。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:27",
      "text": "也可能也是有可能你所有的东西都可以把它用interface包起来，说这是个API，你可能只发了一个email给这个人，然后等着，这也算是一个API。从我的角度来说，在现实世界当中真正需要写代码的地方其实已经越来越少。你像我举个例子，在大厂里面你真正去写一个完整不靠任何别的方式的一个function是非常少见。你基本上每一次写代码就一百行代码，这一百行代码里面大多数都是在尝试组合各种各样的API。那从我的角度来说，如果一个agent他知道怎么去整合这API去完成一个多步决策，那他可能已经完成了大多数需要完成的事情。而真正复杂可能那些在追求金字塔尖那些公司在做的事情是说OK。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:18",
      "text": "我还有个更复杂的事，就是这件事儿完全没有任何视觉上的能力可以做到。我需要有一个agent从零开始写这些代码，然后把它组合起来形成一个代码库这样的问题。这可能是他们在追求的一个终极A症。但我认为大多数的场景的话，我看下来基本上不需要这种能力。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:39",
      "text": "他就是跟各种API打交道，然后排列组合。对对对，有点像之前是谁是google anthropic还是谁的，出了一个协议是吧？好像就是要往这个方向去走。因为未来如果是这样的话，其实很多东西可能就在后端在协议层就完成了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:57",
      "text": "就类似于这种就是你可能不需要一个代码性的原因，可能就是用那种甚至command line靠几个function然后得到的real tax，然后再下一个方向就可以完成整个操作了，你根本就不需要进入代码层。",
      "speaker": "发言人1"
    },
    {
      "time": "00:33:12",
      "text": "那对于未来的用户来讲，我在想你看像David是他好像是能让你看到他每时每刻在做什么东西。我觉得体验是蛮神奇的对，但最终是不是其实也不一定需要这些过程性的东西。如果他就是完全在后端调用API，最后只要输出。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:27",
      "text": "个结果就好了。我觉得这个地方还是有一个不一样的地方，就是David和这些coding公司要解决的问题是一个跟我们剥离开的一个。我们是在业务层面，就是说已经有这些业务了，有这么一个客户要解决这样一个问题，通过现有业务怎么解决这个问题？他们是说我根本没有这个业务，我要去建立这个业务。本来需要雇20个员工去完成这件事情。那我现在一个员工都不雇，我雇20个能不能解决这个问题？这是两个商业模式的最基础的区别。就是你是基于现有业务去排列组合解决一个问题，还是我完全没有任何的基础，我就需要人去把这一切东西从零搭起来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:07",
      "text": "所以你们今天正好刚上了一个刚才讲的电商的那个然后他是一个什么？是开源还是公测。",
      "speaker": "发言人2"
    },
    {
      "time": "00:34:14",
      "text": "还是一个什么公测公测现在我们邀请50个电商商家尝试安装，然后体验一下这的产品。本来是14天的免费试用期，现在我们延长到30天。让大家给一些反馈，然后帮我们提升这个模型。各方面还有很多的我们正在做的一些功能还没有上线。比如说商户跟用户之间通过agent来进行议价。然后再比如说自动化的帮你去上线一些折扣。然后通过你的给到agent的一个prompt，去改变整个网站的推荐策略和搜索结果策略。这些东西都是正在做的事情。",
      "speaker": "发言人1"
    },
    {
      "time": "00:34:54",
      "text": "就是我可以理解你前端可以做各种的排列组合跟动作，但是如果你要涉及到折扣什么的，还是会动到后端的，对吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:00",
      "text": "可以，对，但后端本来就有API可以做到这一点。所以你只要告诉我你要干什么，这个医生就会自己去考，把这些东西帮你改了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:08",
      "text": "比如说一年以后，假设就是电商场景，你这个agent已经做到很成熟了。然后你能举一个具体的例子说大家大概会怎么用它，然后能达到一个什么效果。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:18",
      "text": "就比如说你今天是个商家，然后你说圣诞节了，我要搞个圣诞测速。那你可能需要做三件事情。第一件事情我要把里面跟圣诞节相关的产品打一个折扣，第二个我可能需要把整个运费和以及运输时间做一个修改。然后第三个我可能需要把整个线上的首页推荐，搜索各方面全部都换掉，变成一个以圣诞节为主题的这么一个。",
      "speaker": "发言人1"
    },
    {
      "time": "00:35:45",
      "text": "那现在会做什么？现在就是我要找我现在的销售，我去把这些首页的这些东西换掉，然后每个东西要写特有介绍。搜索上面我可能要需要去找个工程师去想办法把那个排序给改一改。然后推荐上面我也需要去找第三方谁给我做的这个推荐公司手动改。然后我去改那个折扣，各方面都需要我去找个工程师去手动的往数据库里面去写。而等到明年年底，如果我们一切都成型了以后，就是你告诉我你要干什么，你就直接文字写下来说现在圣诞节我需要把我的首页变成以圣诞节为主的推荐搜索结果也往圣诞节去偏帮我去上线这三个产品以及这个promotion code到我的数据库里面就完成了，你就不再需要做任何别的操作。",
      "speaker": "发言人1"
    },
    {
      "time": "00:36:35",
      "text": "所以这个需求现在就像你讲的，他现在就是很多工程师，他的产品什么的在完成。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:41",
      "text": "对吧？对，比如说我们认识的一些电商，他们每个季度要花上百万美金，就为了干这件事情。因为你原来你还需要打个电话，发个邮件，然后那边人还可能放假了，不一定理你。你现在跟他聊两句，五分钟之内就搞定了，可能最后结果还更好。我觉得这个当中的差异化还是很大的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:01",
      "text": "然后我在想他也可以说，比如我要给所有老客户发一封邮件，发个促销，对，这个也可以做到。你对于未来的region来讲，你是相信说未来会有很多很多的agent然后在各个领域，各个企业里面都会有。",
      "speaker": "发言人2"
    },
    {
      "time": "00:37:14",
      "text": "那我觉得会是的。我现在能看到的点是，首先在就比如说写代码的这种IT类公司里面，代码生成已经成为了一个非常简单的事情了。如果非工程类公司，他们更大的头疼的点就是在于他们需要跟外界的API做接触。那他怎么去整合他那么多个服务商去完成一整套系统，就跟我们电商这个场景一样。Agent也是一个必不可少的东西。",
      "speaker": "发言人1"
    },
    {
      "time": "00:37:43",
      "text": "除此以外我认为比如说在供应链制造业这方面，A证也会变得非常有用。因为很多现在的这种重复性的工作，比如看订单，派发这一系列的东西都是重复性A就可以完成的事情，而不需要人坐在那儿看。反而是我认为人可以去做那种LM生成不了的视频，生成不了的那种更有创造力的工作。可能会有更多的公司把人才往那个方向去引对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:11",
      "text": "所以未来可能每个公司都有自己的A的那就是真的是A的和A智能交接触的，完全不需要人去接触。它可能就在后台了。对，就在后台。对，比如说你刚他说的那个库存你们不管，但有可能在库存那边，他上游也是一个agent对，然后这边你只要没有库存了，然后自动就靠一个下单了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:30",
      "text": "靠你们的API然后就下单，然后那边库存就直接运过来了。是对，我们为什么不管库存？就是这个原因为我们不知道对面有没有一个可以自动化的一个流程，很多都是靠打电话。",
      "speaker": "发言人1"
    },
    {
      "time": "00:38:39",
      "text": "你可以调用API就是客服机器人什么的，要自动打个电话过去。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:43",
      "text": "如果有这样的服务，我们也会通过我们的A去调用这种API的方式去完成。但是这个效率相对比较低。因为没有通用化的情况下，你可能打个电话过去，人家完全不理你，这怎么办？你就没有办法完成闭环了。我们希望能够至少在我们亲自下场做的这些场景里面完成闭环。然后我们这个通用模型还是会在那里，就是任何人可以拿这个模型放到他们的场景里面。如果他们需要fine une，我们也会发出fine tune的这种API。",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:08",
      "text": "明白，你走IL技术路线的话，你的训练成本会低很多吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:14",
      "text": "非常低，我们到现在一个月训练下来不到。",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:18",
      "text": "1万美金。然后你在去帮客户做实施的时候的算力成本什么的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:24",
      "text": "token成本也很低。对，非常低。我们的澳洲模型可以在CPU上跑。",
      "speaker": "发言人1"
    },
    {
      "time": "00:39:28",
      "text": "但你现在也聊了蛮多投资人是吧？对，有没有人china着你们说那你这个是不是一个伟大模型的概念，讲的是一个大模型，但其实你训练和实施用的都不是大模型，对吧？大模型用来做一个意图的识别翻译而已。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:42",
      "text": "但是问题就在于为什么大家都要追捧很大的大模型呢？它能解决问题就好，不一定说我非要把一个狼头躁的超大变成一个核武器。但是这个问题明明可以拿机枪就可以完成的问题，我觉得没有什么太大的意义。所以我们从来不说我们是大模型公司，我们说的我们是A证公司，而且是强推理和规划型的工具使用A的公司。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:06",
      "text": "所以最后机构的反馈他们是认这件事情的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:10",
      "text": "大多数公司都会认。因为我们当时做了一个demo，还是比较出乎意料的一个小demo。就是你说规划形成的那个。对对对，当时这个模型大小是1000万个参数的一个二维模型，加上拉玛8B能够比当时的GPT4要好。在单一城市规划上面已经可以超过他们了。明白。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:33",
      "text": "所以未来一年你们大概的规划打算是怎么样？",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:36",
      "text": "电商方向肯定会要推下去。然后我们会把里面的很多API开放到非shop的用户。如果他们需要我们帮他们去管理他们的各种的产品或者折扣各方面，他们可以把API开放给我们我们可以靠A军去完成这些操作。",
      "speaker": "发言人1"
    },
    {
      "time": "00:40:54",
      "text": "我突然想到一个问题，就是如果你真的做成了，是不是刚才说的手续费上几千个API就都没有用？",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:00",
      "text": "可能有百分之四五十、五六十都没有用了。对。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:03",
      "text": "为啥呢？就应该是全都没有用了，就都调用你。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:06",
      "text": "然后对，就是纯工程类的东西基本上都可以被替代掉。但是有一些非工程类的我们就不去管它了。然后后面的话我们会明年争取发布一个规划类的AI agent，可以横跨几千上万个API，然后在不需要特殊prompting的情况下，就可以知道你的需求是什么。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:28",
      "text": "精准的完成API口。你的客户面向的仍然是to b的一些商家。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:33",
      "text": "对，to b的一些商家。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:35",
      "text": "就还是电商领域为主。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:37",
      "text": "不一定，我们现在有电商广告和刚刚说那个视频那些。然后后面的话我们会横跨，比如说旅行、教育、健身，再往后我们会推向法律金融这一系列的API特别金融类的API特别多，所以也是一个比较好的落地场景。",
      "speaker": "发言人1"
    },
    {
      "time": "00:41:56",
      "text": "对我觉得你都跟类似于什么API杀手之类这种感觉。就是你可以把所有领域排序的，哪个领域API越开放。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:03",
      "text": "我就先进去让这个agent学会怎么用，然后就让任何人都可以直接靠API完成很多任务。OK就比如说我举个例子，我自己在管我们自己的财务的时候，我需要建一个google sheet。建完了以后每一个东西要去靠不一样的雅虎或者google的API才能组合出一个东西来。那如果有一个H我问两句话，他自己帮我把这个API全靠了，然后把它塞进去，这事儿就完了，根本就不用花几10个小时了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:29",
      "text": "他在后台也有点像一个自动的AI coding的那么一个感觉。",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:32",
      "text": "对，但是他不是真的去扣，因为你的一个核心点在于你需要compound，而且你要保证这个代码运作的成本就会高很多。因为你的决策点不再是单1API了，你是每个token都需要保证精确，那你需要决策数量就高很多。",
      "speaker": "发言人1"
    },
    {
      "time": "00:42:49",
      "text": "你就只需要调用通过一个action，然后得到一个结果就OK了。对对对，有点像什么蚂蚁搬家什么那种感觉。对对对，OK. 最后几个问题，一个是你怎么看整体明年AI的市场，就是你跟国内的感觉不同，可能就你还是带了更多美国那边对科技公司的一些视角什么的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:11",
      "text": "对美国市场我认为大多数的投资人还是对A证很有兴趣的。所以你如果能够做垂类的A证的话，他们投资的概率是很高的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:21",
      "text": "我当他们在讲这种垂类A证的，他们的定义和想象中的是什么东西。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:26",
      "text": "跟我说的这个比较类似的这种就是你可以取代大多数内部工程解决的问题。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:33",
      "text": "现在大家遇到的最大。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:34",
      "text": "问题就是准确性、可依赖性，而且你怎么盈利？我们模型小有特殊的训练算法，可以使得它非常的可靠，而不是很贵。但是你完成我们这个能力，你需要真的去靠GPT4O那它就是我们一千倍的价格，你不可能按照我们的这个价格收费的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:43:51",
      "text": "所以明年可能会有一堆走你们技术路径的A真的出来吗？你觉得我不知道。",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:57",
      "text": "就是信我这个技术入侵，而且要懂二背景需要比较深的人也不是很多，可能会有一些做planning方向chain of到的那种方式。想办法通过工程师的方式把LM的思维路径或者是模型大小给压缩，然后放到一个单一的垂类上面。但我们的护城河在于，即便你压缩的再多，我比你不需要一个基础LM的价格还要低。那你怎么能够跟我竞争呢？明白。然后除此以外，我觉得在相对比较小型的那种市场，投资人会关注更多，而且会投那种比较小额的，因为人比较多的那种市场实在公司太多了。他们可能会希望去找到一些比如说偏science类的，偏那种supply change之类的，做的比较少的这种场景，看看有没有突破性的公司出来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:44:51",
      "text": "钱是不缺的，这个我非常确定。最近我看到AI投资的那种放的雨过春笋般的在往外冒。虽然大小都不是很大，都是千万上亿美金的盘子，但是感觉就是冒得很快，而且很多，而且非常的活跃。所以我觉得可能钱是不缺的，只是标的比较难找。因为非常混乱，而且大个子太多，导致底下那些小个子不知道怎么生存。",
      "speaker": "发言人1"
    },
    {
      "time": "00:45:22",
      "text": "你自己也算小个子，是吧？",
      "speaker": "发言人2"
    },
    {
      "time": "00:45:23",
      "text": "现在我现在算小个子只融了几百万，所以不可能跟他们融了几千万的币。明白，所以明年你觉得是agent的元年吗？我从来不觉得有个元年的说法，因为很多年前就有agent这个概念了。我觉得明年可能会是有很多公司真的能把agent落地的一年，就是真正由agent来帮你采取措施并产生结果的一年。",
      "speaker": "发言人1"
    }
  ],
  "lab_info": {
    "summary": "强化学习（RL）与自然语言处理（NLP）的融合成为解决复杂决策问题的新趋势，利用自然语言模型（LM）增强代理（Agent）的能力，使其在电商、广告推荐系统等领域展现出高效与智能。对话指出，强化学习面临的真实世界应用挑战，如环境适应性，与自然语言模型处理多步决策问题的潜力相辅相成。结合两者的策略，如通过LM辅助强化学习代理理解复杂指令和情境，已见实际案例成效。未来，AI将追求跨API决策能力与通用性代理的开发，预示着AI在商业应用中将有深远影响，展现了对AI领域结合RL与NLP代理模型解决复杂问题的乐观预期与深入理解。",
    "qa_pairs": [
      {
        "question": "Bill，能否简单介绍一下你在Meta的背景和技术方向？",
        "answer": "我在Meta工作七年半，主要负责将强化学习框架及其研究应用于广告推荐系统和其他领域。同时，我也在斯坦福读了强化学习博士，专注于相关方向。在Meta的前三年，我更多地参与了MO落地工作，例如负责Meta B2B业务的MO推荐系统以及第一批强化学习落地模型的研发。",
        "time": "00:00:29"
      },
      {
        "question": "这次邀请你来聊的主要原因是什么？你如何看待大模型（如LM）与强化学习的关系？",
        "answer": "最近海外很热门的两个话题是强化学习和agent，而我之前的工作经验和深厚的技术背景正好能深入探讨这两个领域在美国的发展和应用。大模型与强化学习不是替代关系，而是垂直提升的关系。大模型能力的增强为强化学习带来了更大的发展空间。借助大模型的能力，强化学习能够更好地理解和交互世界，从而产生更强大的解决问题的能力。",
        "time": "00:00:29"
      },
      {
        "question": "强化学习为何最近又重新火热起来？",
        "answer": "强化学习之前在游戏等简单环境中有显著突破，但在真实复杂环境中遇到痛点。而随着GPT等大模型的出现以及decision transformer等文章提出基于transformer的方法，大家发现对于更复杂的规划和推理问题，仅靠模仿学习和过往经验已无法解决问题。因此，OpenAI等研究机构开始转型探索规划型agent，强化学习因此焕发新生。",
        "time": "00:02:05"
      },
      {
        "question": "最终两者结合要解决的核心问题是什么？",
        "answer": "结合两者，最终目的是构建一个AI agent，当用户或终端提出需求时，该agent能解构需求并寻找最优路径来完成目标。在这个过程中，agent可能会根据环境的不确定性动态生成不同的行动步骤，并利用语言模型的能力来评估和优化这些步骤，最终找到最可能成功的路径并返回结果。",
        "time": "00:05:50"
      },
      {
        "question": "在决定行动步骤时，是根据预设步骤库还是现场生成？",
        "answer": "行动步骤取决于AI agent所处的具体环境。对于完全定义的动作，可以直接应用；而对于未完全定义的动作，如解决数学问题，需要通过生成式模型（如LM）进行链式推理，每一步的结果由模型自己评估并根据实际情况调整后续步骤。",
        "time": "00:06:57"
      },
      {
        "question": "在面对问题时，人类的探索方式与语言模型的探索方式有何不同？",
        "answer": "人类在探索问题时，会基于对世界的不确定性进行选择，而非随机选取。例如，在面对三家餐厅的选择时，如果其中一家是常去且满意度较高，而另外两家未曾尝试，人们更倾向于选择未曾去过的那家，因为存在最高不确定性，希望通过探索来确定最佳选择。而语言模型在寻找最佳路径时，其过程往往是随机的，缺乏对不确定性的有效利用。",
        "time": "00:08:27"
      },
      {
        "question": "语言模型如何利用不确定性进行有效探索并找到最佳路径？",
        "answer": "语言模型通过分析数据集，可以找到不确定性较高的部分并优先探索这些区域，从而更快速地发现最优路径。这种能力使得它在解决迷宫类问题或需要高效搜索解决方案的场景中表现出优势。",
        "time": "00:09:32"
      },
      {
        "question": "强化学习（RL）与语言模型（LM）在处理问题上的主要区别是什么？",
        "answer": "强化学习能够根据当前状态计算出在不同决策下取得成功的条件概率，并规划出成功概率最高的行动序列。而语言模型则不具备这种反事实推理能力，它不会模拟不同的决策路径及其结果，而是基于固定的数据集进行训练和生成输出。",
        "time": "00:12:10"
      },
      {
        "question": "当前对于如何将LM与规划型模型结合以构建最优AI方案是否存在明确结论？",
        "answer": "目前并没有定论指出哪种方案最好，而是存在多种研究方向和尝试。有些团队倾向于将LM与规划型模型整合，让它们协同工作；而其他团队则致力于开发全新的训练方式和决策模型，以实现与LM的不同思维方式结合，创造出类似人类大脑中不同区域思维方式的多元化AI系统。",
        "time": "00:13:41"
      },
      {
        "question": "是否有人尝试将RL与LM结合，构建更强大的AI方案？",
        "answer": "是的，有很多研究者如rich sutton等，正在尝试结合RL和持续学习，以期突破单一模型无法解决的问题。同时，也有团队尝试将LM与其他规划型模型结合，比如提出快思考和慢思考的概念，或者开发完全不同的决策算法来训练部分AI组件，再将其结果反馈给LM，形成组合型AI。",
        "time": "00:13:41"
      },
      {
        "question": "在现实生活和结合LM的场景中，当没有明确的标准答案或目标时，如何处理人类反馈的问题？",
        "answer": "在这样的场景下，我们可以利用期望值的概念进行优化。例如，在一个公司整体营收的优化过程中，即使在某些局部场景上表现不佳，通过优化整体流程和策略，如广告竞价策略，可以实现整体效率的显著提升。此外，对于那些探索型的场景，如AI陪伴聊天或推荐系统，采用探索型算法（如使用bandits算法的推荐系统）能够根据用户的未知兴趣点进行有效探索，从而提高用户的参与度。",
        "time": "00:15:12"
      },
      {
        "question": "21（可能是指某种决策或学习算法）在落地应用中的优势体现在哪些方面？",
        "answer": "21在实际落地中具有一定的探索能力和大量的行动空间，能够处理互相依赖、多步决策的问题。例如，在广告竞价场景中，一个决策可能基于另一个决策之上，这时21能够更好地适应这种复杂决策过程。而如果所有行动都是独立且已知结果的预测型问题时，21的优势则不明显。",
        "time": "00:16:38"
      },
      {
        "question": "agent这一概念近年来的发展状况如何？",
        "answer": "agent这一概念近年来被广泛讨论并期待其落地，但实际上定义较为宽泛，很多应用都可以被认为是某种形式的agent。去年以来，从GPT等技术开始，agent的话题热度持续，但真正复杂的应用场景，如基于多层规划的旅游路线规划或行政管理决策等，目前仍然面临挑战，尚未有成熟解决方案。",
        "time": "00:17:15"
      },
      {
        "question": "在解决复杂规划问题时，为何目前还无法实现预期目标？",
        "answer": "复杂规划问题的难点在于随着层级增加，每一步决策都会带来指数级增长的复杂度，导致无法通过穷举方式解决。需要具备理解每一步措施对未来产生的影响并据此做出决策的搜索能力，而仅依赖于LM基于过去预测下一个token的方法无法满足这一需求。这时就需要结合IL（可能是指具备规划和搜索能力的模型）来进行决策。",
        "time": "00:18:56"
      },
      {
        "question": "如果只使用transformer架构而不结合LM，会如何？从长远来看，L（可能指决策算法）和LM（可能指语言模型）之间的配合关系会是什么样的？",
        "answer": "单有transformer架构可能无法直接与具体应用场景的数据结合，但结合LM或vision model等语言模型和视觉模型，可以将具体的措施转化为抽象的抽样措施，让21决策系统能够理解并结合人类语言或图像数据做出决策。长期来看，L与LM的配合可能是核心与输入输出翻译的关系，其中LM作为输入输出的接口，而决策过程则由二流或外部接口的LM架构提供支持。不过，目前美国技术界对这一方向尚未形成统一观点，不同的研究方向如模仿学习也有其重要性，期待未来出现能够实现多步决策和可靠行为的统一框架。",
        "time": "00:20:17"
      },
      {
        "question": "那么，从你的角度看，LM是否能解决当前存在的问题，其核心问题是在算法层面还是架构层面？",
        "answer": "我认为LM本身不能解决这个问题的核心，问题的核心还是在算法层面上。虽然通过LM架构可以变化训练算法，但模型架构本身并未改变。",
        "time": "00:21:58"
      },
      {
        "question": "你为何想要尝试做agent这件事情呢？",
        "answer": "我一直想解决从具象到抽象的思维闭环问题，而通过LM等技术，可以把原来人为的过程变为抽象过程，一个模型就能完成，并能生成线下数据帮助强化学习。此外，它还可以辅助评判agent的表现好坏，从而实现整个思维闭环的闭环。",
        "time": "00:22:55"
      },
      {
        "question": "你们现在的agent具体在做什么样的事情？",
        "answer": "我们最终目标是打造一个能自主调用上千上万个API、进行多步决策、完成复杂规划和推理任务的agent。今年我们已在电商领域发布了一个基于HOPFIE架构的贝塔版agent，仅用1500万个参数和短时间训练，就实现了掌握搜索、推荐及客服等功能，且该agent具有通用性，无需特殊个性化训练。",
        "time": "00:23:39"
      },
      {
        "question": "这个agent是如何工作的？",
        "answer": "agent在后端对接各种API，在前端整合并重新定义或建立前端数据展示，除了展示产品页面外，其他搜索、推荐、客服等UI都是基于模板由agent生成的结果。",
        "time": "00:25:12"
      },
      {
        "question": "对于收费商家而言，你们提供的最核心产品服务和价值是什么？",
        "answer": "最核心的价值在于商家不再需要安装大量无法控制的插件，也不必雇佣多个工程师，对商店内所有参数拥有完整掌控权，并且各个模块如搜索、推荐、客服之间互相联动，提供一体化解决方案。",
        "time": "00:24:46"
      },
      {
        "question": "在学习过程中，agent学习的是底层API还是特定插件？",
        "answer": "agent学习的是底层API，它会将API从具象变为抽象的action，通过自我游戏（self play）来了解不同API能解决问题的类型、何时调用以及参数选择等，并通过语言模型辅助判断行为的好坏。",
        "time": "00:27:05"
      },
      {
        "question": "agent的训练是否基于大模型的训练原理？",
        "answer": "agent的训练与大模型训练没有直接关系，但embedding layer将API从具象文字转化为抽象的embedding，这在过去没有好的语言模型时是无法实现的。",
        "time": "00:27:39"
      },
      {
        "question": "O3等技术是否使用了诸如MCTS之类的IO优化技术？",
        "answer": "是的，这类技术在某些层面上做了类似于2L的优化，比如MCTS是一种探索型规划算法，可以帮助规避掉不好的路径，但同时也带来了计算价格高、时间长的问题，需要通过“长思考”来解决这些问题。",
        "time": "00:28:20"
      },
      {
        "question": "A政策现在大概处于什么阶段？大家核心面临的问题是什么？",
        "answer": "目前大多数agent是基于LM和rag技术，虽然在coding方面有较多落地，但面临的主要问题是对于复杂的工程架构性问题，现有的LM无法解决。此外，在非coding领域，虽然有一些公司在尝试工程上的挑战以实现对真实世界影响的落地，但在跨多个领域的通用性解决方案仍不存在。",
        "time": "00:29:51"
      },
      {
        "question": "未来的agent将如何与API打交道？",
        "answer": "未来的agent每天都会与各种API打交道，甚至可能涉及到与人打交道，如客服等场景。通过整合各类API，完成多步决策，就已经实现了大部分需求。真正的挑战在于如何整合API来解决复杂问题，而不是直接编写大量代码。",
        "time": "00:31:17"
      },
      {
        "question": "是否存在完全不需要视觉能力，仅需从零开始编写代码组合成代码库的终极A症？",
        "answer": "是的，存在这样的终极目标，即agent能够完全从零开始，仅通过API接口完成任务，而不依赖于传统的代码编写。但在许多实际场景中，这种能力并非必需，因为可以利用现有的API和工具来高效解决问题。",
        "time": "00:32:18"
      },
      {
        "question": "对于未来的用户而言，是否需要了解agent每时每刻的具体执行过程？",
        "answer": "用户可能并不需要关注agent执行过程的细节，他们更关心的是最终结果。例如，通过后端调用API完成任务，并将结果直接呈现给用户。",
        "time": "00:33:12"
      },
      {
        "question": "目前电商场景中的agent处于何种阶段，以及具体的应用案例是什么？",
        "answer": "目前电商场景中的agent正在进行公测阶段，邀请商家安装体验并收集反馈以优化模型。具体应用上，商家可以通过agent进行议价、自动化折扣设置、根据用户prompt调整网站推荐策略和搜索结果策略等操作。例如，在圣诞节时，商家只需通过agent设定相关产品折扣、修改运费和运输时间、更新首页推荐和搜索结果，即可实现节日营销活动的高效开展。",
        "time": "00:34:14"
      },
      {
        "question": "现在你们主要在做哪些事情？",
        "answer": "我们现在需要找销售团队更新首页内容，并为每个产品写特有介绍。此外，我们可能要找工程师调整搜索排序，第三方推荐公司手动修改推荐结果，以及调整数据库中的折扣信息。明年年底，如果一切成型，用户只需通过文字描述需求，例如在圣诞节前将首页转变为以圣诞节为主题的推荐搜索结果，并上线特定产品和promotion code。",
        "time": "00:35:45"
      },
      {
        "question": "这个需求是不是意味着很多工程师在完成他们的产品？",
        "answer": "是的，就像我们认识的一些电商公司，他们每个季度可能会花费上百万美金来实现类似需求，而现在通过与AI交互，可以在短时间内高效解决，体现出很大的差异化。",
        "time": "00:36:41"
      },
      {
        "question": "未来AI是否会在各个领域广泛应用？对于未来的公司来说，AI会是什么样的存在？",
        "answer": "我相信未来会有许多agent在各个行业和企业中发挥重要作用。在IT类公司中，代码生成变得非常简单，非工程类公司则面临与外界API对接的问题。而在供应链制造业，AI将在重复性工作中发挥巨大作用，如查看订单、派发任务等，而人可以去做更具有创造性的工作。未来每个公司可能都会有自己的AI助手，与AI进行接触，而无需人工干预，它可能就在后台自动完成工作，比如库存管理、下单等流程。",
        "time": "00:37:14"
      },
      {
        "question": "当你们的AI做得足够好时，是不是几千个API调用就变得没用了？",
        "answer": "是的，大部分纯工程类的工作会被替代，但一些非工程类工作我们不会去管。未来的目标是通过AI agent让任何人都能轻松利用API完成任务，例如构建Google Sheet等。",
        "time": "00:41:06"
      },
      {
        "question": "使用你们的IL技术路线，训练成本是否会很低？",
        "answer": "非常低，目前一个月的训练成本不到1万美金，且在帮助客户实施时的算力成本和token成本也相对较低，我们的模型可以在CPU上运行。",
        "time": "00:39:18"
      },
      {
        "question": "投资人如何看待你们的AI模型不是基于大模型的概念？",
        "answer": "大多数机构都认可这一点，我们曾通过一个小型模型演示取得了出乎意料的效果，即使在单一城市规划上，该模型的表现优于GPT4。因此，我们认为自己是强推理和规划型的AIGC工具公司，而非单纯的大模型公司。",
        "time": "00:40:10"
      },
      {
        "question": "明年的规划和产品方向是什么？",
        "answer": "我们会继续推动电商方向，将API开放给非shop用户，帮助他们管理产品和折扣。明年还计划发布一个规划类AI agent，能够横跨几千上万个API，无需特殊prompting就能理解并精准完成API调用。",
        "time": "00:40:36"
      },
      {
        "question": "你如何看待明年AI市场的整体情况，特别是垂类AIGC领域？",
        "answer": "我认为美国市场中大多数投资人对垂类AIGC有兴趣。如果能做垂直领域的AIGC，投资概率很高。垂类AIGC应能解决大多数内部工程问题，关键是准确性、可依赖性和盈利模式。虽然会有其他公司尝试通过压缩模型大小或规划路径来开发垂类AIGC，但我们的竞争优势在于即使在压缩后，也能保持比基础LM更低的成本。",
        "time": "00:43:11"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "强化学习与AI技术的未来发展",
        "summary": "讨论重点在于强化学习在AI领域的应用及潜力，特别是其在广告推荐系统和信息领域的实施。分析了强化学习面临的挑战、近年来的发展情况，以及未来强化学习与大模型、语言模型（LM）结合的潜力。指出强化学习因为其对环境、动作等有深入理解的能力，与语言模型结合后，可能在AI代理的推理能力、个性化等方面实现突破，展望了强化学习在当前技术进步背景下，尤其是在大模型能力提升后，可能迎来的更大发展机会。"
      },
      {
        "time": "00:05:43",
        "title": "探讨AI决策优化与路径选择的挑战",
        "summary": "讨论重点在于如何通过AI技术优化决策过程和路径选择。当用户向AI代理提出需求时，AI代理需解构需求，确定目标和措施，从而选择最优路径解决问题。此外，还探讨了在特定环境下的行动定义和如何处理未完全定义的行动，以及利用不确定性来更高效地探索解决方案。通过比较随机探索与基于不确定性的探索方法，强调了找到最优路径的挑战以及如何利用特定算法或方法加快找到出口的过程。"
      },
      {
        "time": "00:10:15",
        "title": "探讨强化学习与持续学习的结合",
        "summary": "对话集中在探讨反事实推理能力，特别是如何在大世界与小代理的假设下，通过假设不同情况来推理结果。讨论重点在于强化学习（RL）和语言模型（LM）的区别和结合潜力，以及它们如何处理数据流和决策问题。特别提到了一种方法，即将快速回答与需要深度思考后才能得出答案的方法结合起来，以及探索如何通过持续学习使模型能够适应无限数据流的挑战。同时，还讨论了将不同类型的学习模型结合起来的可能性，以模仿人类大脑不同区域的处理方式，从而提升决策质量。"
      },
      {
        "time": "00:14:41",
        "title": "强化学习在现代应用中的挑战与突破",
        "summary": "讨论重点在于强化学习（RL）在实际应用中的挑战，特别是当目标不明确或结果无法简单量化的场景下如何优化。通过Meta的广告竞价和Facebook的推荐系统案例，强调了在大量可行行动中寻找最优解的能力，以及如何通过探索型算法提高用户参与度。此外，还探讨了强化学习在代理（Agent）领域的进展，包括近年来的讨论和预期，以及该领域面临的挑战和未来发展方向。"
      },
      {
        "time": "00:17:38",
        "title": "探讨AI在复杂行程规划中的应用挑战",
        "summary": "对话集中于讨论AI，尤其是语言模型（LM）和指示学习（IL）在解决复杂行程规划问题上的能力与挑战。指出虽然简单的行程规划可以通过工程方法完成，但面对需要多步骤决策和未来规划的复杂任务时，LM由于其预测性质限制了其解决问题的能力。与之相比，IL通过考虑每一步对未来影响的能力，显示出解决这类复杂规划问题的潜力。同时，也提到了创业者在这一领域探索和面临的实际困难，以及市场对能够有效处理复杂规划任务的AI技术的需求。"
      },
      {
        "time": "00:20:12",
        "title": "探讨语言模型与决策系统在AI发展中的角色和关系",
        "summary": "讨论集中于语言模型(LM)与决策系统(2L)在人工智能(AI)领域中的应用与相互作用。提出观点认为，虽然语言模型是将抽象系统与人类数据连接的关键，但决策系统的本质和未来方向仍有待探索。当前技术界对AI的发展方向尚未达成共识，如模仿学习和基于决策的AI模型等不同路径并存。同时，也指出仅仅通过改变训练算法而不改变LM的架构，可能不足以解决核心问题，强调了算法创新和工程实践的重要性。此外，对于开发能够做出多步决策的可靠AI代理存在强烈期待，这可能会引导AI研究的未来方向。"
      },
      {
        "time": "00:22:30",
        "title": "打造智能电商Agent实现多步决策与复杂规划",
        "summary": "对话中讨论了开发一种能够自主调用成千上万个API、完成多步决策及复杂规划和推理任务的智能Agent。今年已经发布了一个基于HOPFIE架构的电商方向Agent，它在不到一个月的时间内，通过一个1500万个参数的r-agent加上一个小型语言模型，实现了对几十个API的基础搜索、推荐及客服能力的掌握，无需个性化训练即可应用于任何购物网站。此Agent的推出，意在提供一个通用型解决方案，减少商家对多个插件和工程师的依赖，实现数据和插件之间的全面交互和整合，从而提升电商运营效率和客户体验。"
      },
      {
        "time": "00:26:22",
        "title": "探讨互联网工程问题与底层API学习",
        "summary": "对话集中在互联网工程中遇到的问题，特别是关于插件的使用和付费问题，以及直接调用底层API的可能。讨论了学习底层API的重要性，以及如何通过self play训练模型理解API功能和参数。此外，还强调了语言模型在理解和生成需求、以及提供好的embedding方面的作用。"
      },
      {
        "time": "00:28:14",
        "title": "探讨AI技术及应用的未来方向",
        "summary": "对话中讨论了关于AI技术，特别是关于长思考型规划算法（如MCTS）及其应用的未来可能性。讨论者提出，许多现有的AI代理（agents）大多基于语言模型（LM）加上一些随机生成（rag），在编程领域有较多应用，但面临处理复杂工程问题的挑战。此外，讨论指出目前尚不存在能够跨领域应用的通用AI解决方案，而理想的AI代理应能有效整合API以解决多步决策问题，并可能涉及与人类交互的任务。最终目标是实现一个能自动处理大多数API整合任务的AI代理，同时对于需要高度定制代码的复杂任务，提出了对从零开始编写代码的AI代理的展望。"
      },
      {
        "time": "00:32:38",
        "title": "探讨API应用及电商自动化解决方案",
        "summary": "对话内容涉及利用API进行数据处理和业务自动化，特别是对于电商行业。通过API的组合使用，可以实现不需编写代码就能完成特定任务，比如调整折扣、修改运输信息、变更网站推荐和搜索策略等。这不仅简化了操作流程，减少了人力需求，还提升了工作效率。讨论还包括了一个电商自动化解决方案的例子，说明了如何通过技术手段，使得商家能在特定节日如圣诞节，快速调整线上商店的促销策略和界面布局，而无需进行繁琐的手动操作。此外，还提到了一个电商公测项目，目的是通过收集反馈来优化模型和功能。"
      },
      {
        "time": "00:37:00",
        "title": "未来工作中的AI代理应用与展望",
        "summary": "讨论集中在如何利用AI代理（Agent）在不同行业和领域内提升工作效率和自动化水平。首先，提到向老客户发送促销邮件等任务可以通过AI轻松完成。其次，展望未来，每个企业可能都会拥有自己的AI代理，特别是在IT公司中，代码生成已成为简单任务。此外，讨论也涉及非工程类公司面临的挑战，如整合多个服务商以完成系统任务，以及在供应链制造业中，AI代理如何处理重复性工作，如订单管理和派发。强调了人类应更多地从事AI无法完成的创造性和决策性工作。最后，提出了通过API调用实现库存自动管理的愿景，以及面临的挑战，如对方是否拥有可自动化的流程。整体上，讨论展现了AI代理在提高企业运营效率和自动化水平方面的潜力和面临的挑战。"
      },
      {
        "time": "00:39:08",
        "title": "AI技术公司在训练和实施成本优势及未来规划",
        "summary": "一家专注于IL技术路线的AI技术公司讨论了其在训练和实施成本上的优势，以及未来的业务规划。公司通过使用非大模型技术，大大降低了训练成本，一个月的训练费用不超过1万美金，且模型可以在CPU上运行，大幅减少了算力和token成本。他们强调了大模型并不总是必要，而是根据实际问题选择合适的解决方案。公司的未来规划包括在电商方向的推进，以及将API服务扩展到非电商用户，以帮助他们管理产品和折扣等。此外，计划发布一个能够横跨数千上万个API的规划类AI agent，实现无需特殊prompting即可精准完成需求的高效服务。公司目标定位于B端商家，旨在通过强大的推理和规划型工具，提高工作效率，减少对传统API的依赖。"
      },
      {
        "time": "00:42:49",
        "title": "探讨AI市场趋势与投资机会",
        "summary": "对话中讨论了对明年AI市场的看法，指出在美国市场，大多数投资人对AI技术特别是垂直领域的AI解决方案（A证）表现出高度兴趣。强调了准确性、可依赖性及盈利模式是当前面临的主要问题。讨论还触及了通过特殊训练算法实现模型可靠性的可能性，以及如何在不增加成本的前提下，与基于昂贵模型的服务竞争。同时，对于小型市场而言，投资人更倾向于小额投资，寻找在科学领域或供应链管理等较少被探索的场景中可能出现的突破性公司。最后，虽然对\"元年\"的概念持保留态度，但预测明年将有更多的公司能够实现AI代理的实际应用。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "基于环境反馈的学习方式"
                },
                {
                  "children": [],
                  "content": "应用于广告推荐系统、游戏策略等领域"
                }
              ],
              "content": "定义与应用"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "真实环境与游戏环境的差异"
                },
                {
                  "children": [],
                  "content": "大规模数据处理与应用效果的不确定性"
                }
              ],
              "content": "面临挑战"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "决策Transformer的出现"
                },
                {
                  "children": [],
                  "content": "强化学习在更复杂规划问题上的应用增强"
                }
              ],
              "content": "最新发展"
            }
          ],
          "content": "强化学习(Reinforcement Learning, RL)"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "通过语言理解和生成展现世界知识"
                }
              ],
              "content": "核心能力"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "作为输入输出的翻译工具"
                },
                {
                  "children": [],
                  "content": "与强化学习模型的结合提高决策质量"
                }
              ],
              "content": "在AI应用中的角色"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "生成的局限性"
                },
                {
                  "children": [],
                  "content": "需要大量数据和算力支持"
                }
              ],
              "content": "限制与挑战"
            }
          ],
          "content": "语言模型(Language Models, LM)"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "强化学习的决策能力与语言模型的理解能力结合"
                },
                {
                  "children": [],
                  "content": "提高了AI在复杂决策和推理任务中的表现"
                }
              ],
              "content": "优势互补"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "商业决策"
                },
                {
                  "children": [],
                  "content": "自动客服系统"
                },
                {
                  "children": [],
                  "content": "电商推荐系统"
                }
              ],
              "content": "应用场景"
            }
          ],
          "content": "强化学习与语言模型的结合"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "以自主完成复杂任务为目标的智能实体"
                }
              ],
              "content": "定义与目标"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "从单一任务型向多任务型转变"
                },
                {
                  "children": [],
                  "content": "技术瓶颈与解决方案的探索"
                }
              ],
              "content": "发展历程"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "精确性与可靠性"
                },
                {
                  "children": [],
                  "content": "成本与效率的平衡"
                }
              ],
              "content": "当前挑战"
            }
          ],
          "content": "AI代理(Agent)的发展"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "企业服务"
                },
                {
                  "children": [],
                  "content": "针对特定行业提供定制化AI代理服务"
                }
              ],
              "content": "商业模式的探索"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "API的高效调用与整合"
                },
                {
                  "children": [],
                  "content": "自动化决策与执行流程"
                }
              ],
              "content": "技术实施"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "投资者对AI代理技术的兴趣"
                },
                {
                  "children": [],
                  "content": "面临的竞争与挑战"
                }
              ],
              "content": "市场前景"
            }
          ],
          "content": "技术实施与商业模式"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "更多领域和行业的应用"
                },
                {
                  "children": [],
                  "content": "技术的持续优化与成本降低"
                }
              ],
              "content": "AI代理技术的发展趋势"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "持续探索更高效的学习与决策算法"
                },
                {
                  "children": [],
                  "content": "通过技术创新解决现有挑战"
                }
              ],
              "content": "强化学习与语言模型的融合"
            }
          ],
          "content": "未来展望"
        }
      ],
      "content": "对话脑图摘要"
    }
  }
}