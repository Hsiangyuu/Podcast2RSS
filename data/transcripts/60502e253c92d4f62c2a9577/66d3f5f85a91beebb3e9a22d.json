{
  "pid": "60502e253c92d4f62c2a9577",
  "eid": "66d3f5f85a91beebb3e9a22d",
  "title": "AI工程师指南：我是谁，从哪来，到哪去｜对谈硅基流动创始人袁进辉与独立开发者idoubi",
  "task_id": "kvjony7mlml4nlx3",
  "transcription": [
    {
      "time": "00:00:02",
      "text": "欢迎收听十字路口，我们关注新一代AI技术浪潮带来的行业新变化和创业新机会。十字路口是乔布斯对苹果公司的一个比喻，形容他站在科技与人文的十字路口，伟大的产品往往诞生在这里。AI正在给各行各业带来改变。我们寻找、访谈和凝聚AI时代的积极行动者，和他们一起探索和拥抱新变化、新的可能性。我是主播科技杨元成，联合创办了街旁、新世相和唐岛。我相信科技尤其是AI会在未来十年彻底改变社会，赋能人类。欢迎大家找我聊天，碰撞想法，链接下一个可能性。",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:47",
      "text": "我是主播戎慧，目前在一家专注科技投资的风险投资机构工作，之前在第一财经周刊担任驻硅谷记者。",
      "speaker": "发言人2"
    },
    {
      "time": "00:00:57",
      "text": "朋友们大家好。十字路口前不久制作了一，其内容叫做AI产品经理指南。我是谁？从哪儿来到哪儿去？我们对谈的嘉宾是字节负责AI产品的负责人玛杀。而这一期内容不管是播客还是公众号，都是我们有史以来最受欢迎的爆款内容之一。因此很多工程师的朋友也在我们的群里和评论区里呼吁，什么时候你们做一期AI工程师指南。因此我们做了认真的筹备。",
      "speaker": "发言人1"
    },
    {
      "time": "00:01:25",
      "text": "为了给大家带来第一手的经验分享，我们也邀请到了两位超级厉害的嘉宾。硅基流动的创始人袁进辉老师，还有独立开发者爱豆逼。他们在AI的研究和工程领域可谓身经百战。今天他们会用通俗易懂的方式给工程师们分享一些入行AI的小贴士，也会为大家科普AI大模型的技术知识，以及分享他们对于工程师职业路径和职业发展的思考。无论你是对AI工程师这个职业感兴趣，还是想了解这个行业的发展前景，相信这些内容都能给你带来不少的收获。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:00",
      "text": "我们先介绍袁老师，因为袁老师的这个职业经历颇具传奇色彩，特别是他在过去一年的经历像过山车一样。很多朋友也非常了解袁老师在国内的大模型市场，恐怕没有谁的2023年比袁老师的2023年更富戏剧性。正如他自己所总结的，2023，像一段坐在过山车上的岁月。年初的时候，袁老师上一家公司one flow估值1亿美金，被并购后的一个月估值飙升至10亿美金以上。而两个月之后这个数字又骤降为零。再过了一个月，袁老师创立了轨迹流动，又回到了起点。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:40",
      "text": "袁老师最近也在其他一些媒体有非常精彩的一些分享。我们今天请到袁老师是想找到一些不一样的角度，请袁老师讲一讲他在别的地方没有讲过的心得和没有分享过的故事。所以我们想问袁老师的第一个问题是，可不可以请你分享一下在自己职业生涯里面的一个最高光的时刻和一个最彷徨的时刻。",
      "speaker": "发言人1"
    },
    {
      "time": "00:03:04",
      "text": "好，谢谢袁成。非常高兴今天有这个机会参加我们十字路口的一个博客分享。应该说最高光的时刻，我觉得还是在技术上的。虽然从常规意义上来说，可能会是去年one flow被并购的时候，因为那个时候社会关注比较大，但是我个人感觉我最兴奋的时刻还是在那个one flow，做出来。而且在技术社群产生影响力的时候，特别是我们当时在整个行业最早看到说这个大模型必然会发生提前为那个大模型做了一些技术。但是很长时间行业内也没有形成共识，直到这个模型变大之后，国内外很多人关注的时候，再去想说这个适合大模型的这种系统架构是什么。然后这个时候发现，原来中国有一个初创企业one flow，已经做过这样的技术了。甚至像当时拍touch在做类似设计的时候，他们也参考了one floor的工作。所以当那个技术被认可的时候，那个时候我觉得是心情比较舒畅的。可以说是最高光时刻。",
      "speaker": "发言人3"
    },
    {
      "time": "00:04:26",
      "text": "最彷徨的时刻可能跟去年就是从光年出来的时候，我们仍然坚信那个大模型是当那个时代当今时代最好的一个机会。我们原本手里有非常好的条件，突然一下子又没有了，这个时候我们怎么何去何从？那个时候是一个彷徨的时刻，不过那个时间非常短。",
      "speaker": "发言人3"
    },
    {
      "time": "00:04:49",
      "text": "大概持续了多久？",
      "speaker": "发言人1"
    },
    {
      "time": "00:04:52",
      "text": "你给我的时间也就一个月的时间，为什么呢？我们大概是七月份，应该是说这个社会上就知道这个公司，我们要进入美团或者是要要面临这个选择，而且很多同事已经接到很多很多其他公司的offer，但我们必须在那个那个时间段段内做出一个决策，到底要不要重新出发，重新创业。所以如果是再长的时间，其实我们也拖不起。可能每个人的offer也就过期了，其他的选择就过期了。所以我们必须在那么短的时间内做出一个我们大多数人都认同的一个方向。那个时候我讲一点夸张的，就是我们大多数工程师，当时都拿到了那种所谓的三倍、五倍，甚至甚至还有十倍的这种offer。所以在那个时候对于我们每个人都是一个很巨大的考验。",
      "speaker": "发言人3"
    },
    {
      "time": "00:06:00",
      "text": "所以在这一个月之内你就决定要做轨迹流动。",
      "speaker": "发言人1"
    },
    {
      "time": "00:06:04",
      "text": "主要的决定是一个月之内决定了要继续创业。虽然我们在光年之外这有半年时间，很多其他公司已经传到了很多资源，我们又回到起点0，但是整个行业还处在非常早期。另外就是我们这个团队在这个info这个方向的战斗力或者能力还是整个行业最拔尖的。在有这个所谓的杀手锏或者是绝活，在这个刚起步的一个巨大的浪潮之前，还是有很大的机会。所以这是一个基本的判断，我们重点就是说手里这个金刚钻用什么样的切入点能够保证我们在这个浪潮里面，比如说坐在牌桌上，而且能有后面发挥的机会，这是基于这个大前提。那剩下的问题就是找到具体的切入点，搞定融资设立公司等等这么多事情。",
      "speaker": "发言人3"
    },
    {
      "time": "00:07:08",
      "text": "因为规矩流动上线到现在，在我的朋友圈子里面，大家的好感度和口碑都很高。如果今天袁老师要用一句话向所有的AI应用开发者来介绍规则流动，你会用一句什么样的话来安利大家？",
      "speaker": "发言人1"
    },
    {
      "time": "00:07:25",
      "text": "我们的目标是让不会AI的开发者也能够去开发AI的应用。实际上就是希望能把这个应用里面关于AI的部分都帮大家搞定。",
      "speaker": "发言人3"
    },
    {
      "time": "00:07:40",
      "text": "最近我们其实也用硅基流动的API开发了一个AI应用，叫做AI遗嘱。是鼓励年轻人在AI的引导和陪伴之下去思考一下死亡，写一份模拟的遗嘱。希望用这个方式让大家思考在自己的生活当中，生命当中，什么是最重要。从而可以更好的去做选择和更好的过每一天。",
      "speaker": "发言人1"
    },
    {
      "time": "00:08:04",
      "text": "确实我们开发这个程序的工程师，他也是一个过去的产品经理，是他写的第一个从零到上线的一个程序。用了硅基流动确实速度非常的快，他甚至说用硅基流动去接deep seek的API速度过快。而我们这个应用为了让大家沉浸在一个慢一点的、冷静一点的、严肃一点的一个思考氛围里面。他有刻意的把这个AI的响应速度给降下来，没有让回复和token的展示直接像API那么快。所以他当时就向我感慨，就没想到轨迹流动可以把deep sick已经很快的响应再提一倍。好，那我们再和爱豆B聊一聊，因为爱豆B也是在独立开发者的圈子里面，大家认为神一样的存在。那可不可以先请你快快介绍一下自己做独立开发之后做过哪些项目，然后你自己最喜欢的，最引以为豪的项目是哪？",
      "speaker": "发言人1"
    },
    {
      "time": "00:09:05",
      "text": "我应该是去年10月份的时候开始从腾讯辞职，辞职出来之后就一直进入了独立开发的这个圈子。然后最早做的一款产品是做GPDS的一个应用导航，就是第三方应用商店。后来基本上保持在每个月都会上一个新产品的这样的一个速度。",
      "speaker": "发言人4"
    },
    {
      "time": "00:09:28",
      "text": "然后去年快过年的前三天做了一个AI红包封面，然后那时候那个项目就火了一段时间。很多其实那个项目是我在星巴克花了1个小时写的，然后那段时间传播的就比较厉害。后来出了红包封面之后又做了AI壁纸网站。二月份的时候又做了个AI音乐播放器。然后我上周也开源了，三月份的时候做了个AI搜索引擎，四月份的时候有在做那个AI事宜，基本上就是在五月份之前，就从我去年10月份辞职到5月份，基本保持每个月发布一个新作品的这样的一个节奏。等三月份做了AI搜索之后，就发现这个事情还是需要很多的精力去投入的。所以我从五月、六月、七月这三个月基本上就没有再发布新的东西了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:10:23",
      "text": "然后八月份就这个月我又在做一个新的做那个AI landing page generate，在做这个一一键式生成一个网页的这个产品。官网的这个产品可能过段时间也会发布。我觉得最印象深刻的主要就三个。一个是那个导航站，是我第一次用全站开发的这种方式去做一个独立的产品。因为以前我在微信，我是做后台开发的，我是写购，然后做KYS，做集群架构这一块的。但是独立全站的话，其实GBDS导航是我的第一个全独立全站项目。然后第二个就是那个红包封面，那个我觉得就属于无心插柳的一个项目。就是在星巴克那么随便的他做了1个小时，然后就有非常高的热度，就一下子给了我非常大的一个信心。然后也是从那个项目开始，我不管是极客，还是twitter，还是我的个人的知名度，其实就从那个项目开始慢慢的积累起来了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:11:26",
      "text": "然后第三个印象最深刻就是这个AI搜索了。因为这个项目应该是属于大家知道我最多的一个项目，就觉得好像我一个人做了一个AI搜索引擎，然后这个方向又是非常有热度的。所以我这个项目也是为我带来了很多以前没有的一些体验。",
      "speaker": "发言人4"
    },
    {
      "time": "00:11:45",
      "text": "所以就是在你做独立开发之后，做的项目又快又多，而且看上去是完全不可能完成的任务，对吧？一个人做了一个AI搜索引擎。在你的这个开发过程当中，就是AI帮上了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:11:58",
      "text": "多大的忙呢？我觉得AI还是帮上了很大的忙的。首先比如印象最深的就是写那个AI音乐播放器的时候，因为以前如果没有AI的辅助，如果我要写一个类似于网易云音乐的那种一个播放器组件，我估计要写可能很长时间。但是借助AI我告诉他，我要实现这么一个播放组件，它要有基本的这种三种切换的模式，我可能就不到1个小时我就完全把它给做出来了。所以我觉得AI最大的一个好处就是它有一些标准化的一些东西。比如像这种音乐播放器组件，它是有标准答案的。然后借助AI辅助的话，实际上是能够让我的这个编码速度，实现速度都是非常的快的。",
      "speaker": "发言人4"
    },
    {
      "time": "00:12:45",
      "text": "我自己之前学计算机，然后在北航读本科研究生都是学计算机专业。但是我毕业之后就一直做产品经理，因此差不多有十年没有写代码了。然后最近这个cloudy的这个工具出来之后，我正好又遇到一个需求。就是我给十字路口公众号有时候会排版，然后之前交给别人排，每次排完之后我觉得去调整那个排版，如果不调我就觉得发不出去，如果要调我又得花很多时间。就经常在这个问题上自己纠结，然后有了那个，所以有一天我突发奇想，我是不是可以用cloudy来帮我写一个排版器？然后like就可能用了不到10分钟就写了一个排版期。现在大家看十字路口公众号每篇文章的排版非常统一，那个是我每篇文章的排版现在大概只需要5秒钟，只要我在notion里面把格式写好了，5秒钟就排一篇公众号出来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:13:38",
      "text": "就那一天，就那一刻我就觉得自己好像就真的很难形容那种感觉。对，就是我想不到更好的比喻，真的是插上了代码的翅膀。我就觉得我过去学的这个计算机专业的很多东西，它就复活了。因为原来其实不会写代码，是因为你没有掌握那些细节的技巧和技术，但其实还是有一些程序思维在自己脑子里面。所以我大概知道要把一个东西从零做出来，需要就怎么去下指令。产品经理最会的不就下指令写需求文档吗？",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:10",
      "text": "现在就可以直接把这个需求文档下给AI我那天写出来的时候，那个代码嘣嘣嘣嘣从屏幕跳出来，然后他还要让我配置一个开放环境，我也不会配。我说那你教我配，然后给我的那个指令也是具体到我觉得我是个傻子，我都搞得定。这真的很感慨。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:29",
      "text": "好，我们开始来聊一聊，当我们在聊AI工程师的时候，我们究竟在聊些什么，首先AI工程师好像并不是一个有明确定义的职业。当我们说到AI工程师的时候，往往是一个非常宽泛的一个含义和指向。所以第一个问题也想请袁老师来给我们讲一讲，在现在的AI公司里面，有哪几类典型的AI工程师。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:54",
      "text": "的确这个AI工程师是咱们定义的一个，我理解咱就可以说和AI相关的工程师都叫AI工程师。这里面我比较熟悉的是产出AI技术的这一类工程师。那这个怎么使用AI的工程师呢？爱豆比更加熟悉。我就说说怎么产出AI技术的这一类工程师。",
      "speaker": "发言人3"
    },
    {
      "time": "00:15:18",
      "text": "这里面其实大概分两类。有一类工程师是怎么让AI的效果更好。比如说怎么让它语音识别的更准，图像识别的更准，生成的图片更清晰，更符合我们的需求语义，保证这个模型效果的，让他智商提高一些。还有一类工程师是怎么让AI效率更高。就是有的时候比如说语音识别或者图像，它的效果已经很不错了。但是如果它工作过程中计算特别慢，可能要么是成本太高，要么是放到我们产品里面体验太差，就是没有那种实时的体验。所以前一类工程师，大概上一般我们过去称作是算法工程师，保证这个模型或者AI的效果准确率。",
      "speaker": "发言人3"
    },
    {
      "time": "00:16:08",
      "text": "后一类我们一般叫做系统工程师，或者是现在也叫infer工程师、infrastructure工程师。他是说在模型效果就是准确率不受影响的前提下，怎么让这个模型或者这个AI在这个底层的算力上或者芯片上跑得更快，或者是运行的规模更大等等。这里面包括怎么让这个模型训练过程中又快又稳，规模又大。所以现在大家也在讲这个scaling law，就是怎么扩展到几百张GPU，几千张上万张GPU上，就是训练过程中有一些infrastructure。",
      "speaker": "发言人3"
    },
    {
      "time": "00:16:45",
      "text": "还有一类是当这个模型生产出来之后上线部署。比如说有几千万DAU或者什么甚至更高。它上面的负载非常高，它是需要超多的GPU去服务这个用户的请求。那怎么让这个推理的速度更快也是一类的。因为功能，所以大概来说在模型的AI能力的生产过程中有算法工程师和info工程师大概这两类。算法工程师里面还有很多细分的类型，一会儿我们也可以补充一下。",
      "speaker": "发言人3"
    },
    {
      "time": "00:17:16",
      "text": "具体说这个AI能力生产出来之后，无论放在手机上端上还是放在云上。这个时候应用过程中又衍生出一些新的工种，新的品类。比如说现在有prompt，怎么能设计出更好的prompt，把这个问题问好，让这个模型更加容易理解我们需求，产出符合我们需求的这个回答。甚至现在说模型有幻觉什么，要附加我们新鲜的或者是准确的知识库。有用rap成为新的需求，新的工种，以及说现在还有agent像这个workflow等等，也有搭建这些脚手架或者叫应用开发框架的工程师。比如说我们有些知名的项目，比如说像defi，像cos开发dev和开发cos这样的。广义上我们以这样的工程师我们也称作info工程师。",
      "speaker": "发言人3"
    },
    {
      "time": "00:18:06",
      "text": "所以info工程师从开始说怎么把一个神经网络，一个深度学习模型，比如说transformer在这TPU上怎么实现的快做这项工作。逐渐延伸说怎么把这个模型能力在应用框架里面，让大家能用的更加方便。比如说又开发了各种各样的workflow，像文生图领域，还有开发UI的SDYUI等等这样的，这些都是属于叫系统工程师或者info工程师这个范畴。再往上就是属于怎么应用这些AI的能力开发的应用和产品了。这一块艾德比就最熟了，可以请他来讲一下。",
      "speaker": "发言人3"
    },
    {
      "time": "00:18:44",
      "text": "李阳老师基本上把这个AI的从底层到上层，基本上都我感觉都覆盖的很全面了。我可能比较熟悉的一点还是在上层应用这一块。就比如我从打个实际的例子，如果我们要做一个AI我们第为叫做AI的一个应用的话，我们应该怎么去做？那么简单一点的AI应用就比如说像之前像什么红红模拟器之类的这种，它也可以算是一个AI应用。但是它是一个零代码的一个应用，它就是在扣子或者define，或者是他之前用的像质谱什么智能体的基础上，通过内嵌一段提示词，然后告诉这个模型在得到用户的一个输入之后，我怎么样去跟这个模型进行多轮的交互，然后产生一个结果。这种是最最基础的一层。",
      "speaker": "发言人4"
    },
    {
      "time": "00:19:35",
      "text": "我们要做一个AI应用的话，就是你需要设计一套比较好的提示词。然后提示词这个领域这一年多，其实也发展到了很多，像是学科类的一些东西，它有一些这种类似于方法论之类的，告诉你怎么样去写一套比较好的体育词。然后有这个总分总，或者有给他定义角色，然后再分步骤让他按照这个去不断的去进行，甚至说需要他去追问。其实还有专门的人出书就专门讲提示词怎么写的。所以我觉得提示词是成为了我们现在做一个AI应用的它的一个地基。",
      "speaker": "发言人4"
    },
    {
      "time": "00:20:13",
      "text": "我基本上觉得我们一个AI native的应用的话，它的第一步都是构建在这个提示词基础上的。包括我们比如说AI搜索引擎这种产品，或者说我做一个像什么artists fake的这种艺术产出的这种产品一样。它作为一个AI应用，它离不开提示词。我必须要告诉这个模型，我给他的的这些东西他应该如何去交互，如何去处理，如何去理解，如何消化。最后他应该给到我一个什么样的一个形式。",
      "speaker": "发言人4"
    },
    {
      "time": "00:20:45",
      "text": "然后另外一点，我觉得AI应用现在的一个发展，就是大家习惯于去朝着低代码的方向去发展。以前虽然低代码这个概念已经火了很多年了也也在这个AI之前也有很多做这种低代码的平台。但是AI的出现让低代码它的发展我觉得是更迅速了。包括昨天是VSL，它又发布了一个V0的chat的一个工具。就是你输入一个简单的，你跟他聊天聊一下，它就能够直接给你快速的生成代码，并且渲染成一个组件，就类似cloud的那个差不多。然后我最近也在做这个AI two landing配置，就是说只要你输入一个你想做的一个东西，然后你只要比如说我要做个AI搜索引擎，名字叫think，他就一键帮我把整个网页完整的从整个页面结构到这个上面的一些术语、内容，SEO的这种东西全部给我生成好了。我就不需要再花时间去投入到我这个页面的构建了。所以我觉得除了提示词之外，低代码的发展也是在上层应用大家都会去。",
      "speaker": "发言人4"
    },
    {
      "time": "00:22:00",
      "text": "研究的一个重点的方向。再举最后一个例子，就是前阵子比较火的word while他们推出了一个rose的做吐槽这种它其实也是属于零代码或者叫低代码。它可能也需要写一些代码，但它也是构建在提示词之上的。他就一下子就传播开来了，把他的这个主产品一下子带到了非常高的热度。所以我觉得以后这类的产品肯定会越来越多，大家会充分的利用各种AI搭建起来的工作流，让你更快的去创建一些应用。而不是像以前一样，我们需要投入很多时间去写代码，去写页面什么的。所以我觉得这是一个发展的趋势。",
      "speaker": "发言人4"
    },
    {
      "time": "00:22:41",
      "text": "我其实还想补充一点，这是我一个感悟。在移动互联网那波浪潮里的时候，后来做出影音影响力产品的好多是应用层的工程师或者产品经理。大家有产品的sense，那个时候不一定说你底层的技术做的多么好，多么牛，然后就能做出这个云影响力的产品。因为那个时代就是这种应用工程师和产品经理的黄金时代。这样的素质的人是最有可能做出有影响力的，就像今天的super APP这样的产品。",
      "speaker": "发言人3"
    },
    {
      "time": "00:23:13",
      "text": "大多数下面搞底层系统的，其实像系统工程师和info工程师在AI之前也存在。那个时候大家都在做什么高并发、分布式。像这类型的工程师，我感觉就在一个很好的产品里面一直在做锦上添花的事儿。就是当他这个产品已经厉害起来的时候，这些系统工程和硬核工程师才有用武之地。因为他那个用户量DNU逐渐往上走的时候已经很高了。它才需要高并发，才需要分布式，然后这些系统工程才进去。但是在这个产品刚起来出圈，什么刚火爆起来，他绝对是应用和产品sense好的人能做出来。",
      "speaker": "发言人3"
    },
    {
      "time": "00:23:55",
      "text": "所以我们今天听到的这个我觉得传奇的这种产品经理，张小龙、张一鸣，我觉得都属于我。因为我是系统工程师，我心里有点不舒服。我说这些搞系统的工程师，什么时候他才能走向前台，才能做出这样的说一个公司做出一个影响全社会的产品等等。后来当AI起来之后，AI里面其实有蛮多的技术，就包括刚才提到的这些算法效果这个系统的。比如说怎么让这个AI模型训练的更快，推力更快。",
      "speaker": "发言人3"
    },
    {
      "time": "00:24:26",
      "text": "一度以为我说这些搞底层技术的黄金时代到了。但是后来这些底层技术就发现它还是在下面。他还没有到这个产品层次，没有到我们的场景或者解决我们的直接的需求。应该说过去这十年，很多很多这种同行搞AI的搞系前赴后继跳进来。其实我客观来说，我从这个技术角度出发的东西，并没有达到原来想象的那种预期。甚至到这个大模型起来之后，这个里面技术壁垒特别高。这些搞技术的人的黄金时代到达，我们以为这个事情成为现实。",
      "speaker": "发言人3"
    },
    {
      "time": "00:25:05",
      "text": "我个人觉得，这里头大家一提这个open I一提这anthropic或者什么，它里面都是一些传奇的科学家，还有很牛的系统工程师，我们觉得这些人终于站到前台了。但是当这些核心技术就是说它仍然是处在一个产品中的一个要素而已，一个模块而已。他最终要通过形成一个产品才能发挥出终端价值来。而且这个技术商品化非常快，就像现在开源模型，这些很多很多大模型训练的技术也追上去什么的。最终这个部分发现即使做出那么好的技术，单独作为一个商业模式也面临挑战。很快我发现又回到之前的那个状态了。就是当这些技术刚出来的时候，我们对它抱有很高的期待。",
      "speaker": "发言人3"
    },
    {
      "time": "00:25:57",
      "text": "但是当它逐渐commoditized，就是它变成一个我们的脚手架。就像今天我们搞前端使用JS使用react使用等等，它就变成一个我们做产品中间的一部分而已。这些搞下面技术的同行，搞算法的，搞infer的。现在好像又回到了之前那种，我觉得说不客气一点，就好像又到了锦上添花那种身位了。今天要做出这种影响力大的产品，我感觉还是要在应用层。我觉得这个层面还是机会，想象空间更大的。",
      "speaker": "发言人3"
    },
    {
      "time": "00:26:36",
      "text": "这个很像幕后英雄，然后我觉得其实这个在很多领域也都类似。比如说我们看到这个电影导演、电影明星，对吧？因为他们做了作品，所以他们被人记住了名字，甚至这个维基百科可以流芳百世。但是其实这个背后，比如说就是索尼摄像机的发明者或者胶片的发明者。因为我们今天说不出他们的名字，他们可能才是幕后做脚手架或者去铺铁路的英雄。",
      "speaker": "发言人1"
    },
    {
      "time": "00:27:02",
      "text": "其实这个我觉得是不是也有另外一个角度，就当我们聊到自己如何选择自己的职业生涯的时候，心理这个动机会影响最后的决定。可能有些人对于在维基百科上有一个特别大的名字，这是他非常大的动力，那可能就会默默地引导他去拍电影，走向台前，然后去向公众对话。但也有一些人可能他追求的是就不断的超越昨天的自己，不断的做出更牛逼的脚手架。那他就已经有非常强的在小圈子里面得到认可带来的这种快乐。对，但我觉得可能袁老师讲这个就在我的观察里面，就在我们几次接触下我的观察里面，我觉得其实袁老师您是对这个to c的impact还是有比较大的追求的。我觉得这个非常好，因为我也是这样的人。所以我觉得刚才你的那个感慨在我听来可能是如果是看自己内心的这个优先级的话，可能是因为这个原因，你觉得呢？",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:04",
      "text": "对，最终我认为就是我们所有的这些，无论搞算法，搞info还是搞我们应用的，大家都在追求创造价值和追求impact。客观来说离场景和应用更近的，我认为就是说那个环节能够产生的这种杠杆，或者产生这种效应更直接一些，这个是更迷人一些。也有一些朋友啊同行，就是我就追求我在技术上的发明创造，或者单点上追求到极致，做到世界第一。也有这样也能给人带来很大的快乐，也存在不同的追求。但是如果希望看到说我们做出来的技术能给人带来什么直接的帮助，价值创造，这个时候还是在做产品这一端更爽。",
      "speaker": "发言人3"
    },
    {
      "time": "00:28:56",
      "text": "所以爱爱逗逼是不是深有感受？",
      "speaker": "发言人1"
    },
    {
      "time": "00:28:59",
      "text": "我感觉每个做工程师的大部分就是会享受那种创造的快乐。就比如说我如果是像杨老师像可能做一个深度学习框架。然后大家知道我这个框架，然后用我这个框架能做出很多很好的产品。那我会觉得我作为一个框架的创造者，我会很快乐。",
      "speaker": "发言人4"
    },
    {
      "time": "00:29:19",
      "text": "但是像我我比如说我做不了这么牛逼的框架，在我能力范围内，我以前可能一年我只能做五个应用。但现在借助AI我可能加个是加个API我可能就是一天或者一周就能做一个，那我一年能做几十个。然后每个产品它又能解决不同的人群的不同的问题。然后我觉得在这个创造新产品的这个过程中，其实是非常有成就感的。不断的有一些正反馈进来。那么我就很享受这种不断的去做产品的这种快乐。所以我觉得这个时代就比起过去获取这种快乐的这种方式可能会更多一些。",
      "speaker": "发言人4"
    },
    {
      "time": "00:29:57",
      "text": "我再补充一下，做那个底层技术的快乐来自哪里？就是底层它就是一个东西，一个技术或者一个产品，它比较通用，它能够用在各种很多很多的场景和很多很多的产品中去。如果真的做到了这一步，那的确还是很快乐的。",
      "speaker": "发言人3"
    },
    {
      "time": "00:30:17",
      "text": "只不过在非常底层这一块，一般来说不会存在很多样性的，它就会赢者通吃。比如说同时有好几个算法，最后是最牛的那个算法。比如transformer就把过去的RN给超过了，那大家现在都选transformer了。框架逐渐的只留下了一个patch ch。所以它很残酷，就是必须做到你是最后最好的被大家选择这个时候才能体会到这个快乐。否则的话它就是一个过程，就是一个垫脚石或者是中间的牺牲者而已。",
      "speaker": "发言人3"
    },
    {
      "time": "00:30:51",
      "text": "我认为在产品和应用产品这一块也是存在的。你也必须最后胜出，你才能体会到这种快乐。但是应用这块我就觉得它非常多样。你看有to to b的场景，有C端的场景，生产力娱乐的里面也有各种各样的。它每个这个场景里面都可能有产品出来。但是它下面的技术，它通常留下来的东西就特别少。所以这个是一个它下面这个工种的残酷的地方。",
      "speaker": "发言人3"
    },
    {
      "time": "00:31:22",
      "text": "但他的快乐就是说当你做出来一个东西全好用，都在用的时候，他就会感觉很有成就感。比如说发明transformers的人一定非常自豪，他就是我发明了一个东西，全世界今天都在用。我觉得写拍照纸的人，他们可能也非常快乐。像在谷歌的jeff dean，也是我们这个info这方向大家觉得传奇的大神。那他也肯定我觉得是非常快乐的。因为他当年做的mapreduce就架起了谷歌的整个系统，然后后来又做了tense flow，有很多很多。所以这个不同工种确实有一些这样的乐趣的不同。离价值更终端更近的还是应用这一块，这个我觉得是给人带来的快乐不同的地方。",
      "speaker": "发言人3"
    },
    {
      "time": "00:32:09",
      "text": "袁老师刚刚说的那个做底层技术的被认可的期待，然后好像有点变化，然后好像又回到从前。我想问一下硅谷跟国内的情况，就袁老师了解的话是一样的吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:32:21",
      "text": "我三月份去过一次硅谷，然后最近主要通过媒体也关注这个情况。我感觉就是现在你看这个行业内发生了大家讨论的这几起。比如说做底层模型的公司的这个并购adapt inflation，capital AI等等。这个趋势现在公开讨论，比如说大模型变缓，以及现在的大模型技术是否能通向AGI。",
      "speaker": "发言人3"
    },
    {
      "time": "00:32:47",
      "text": "现在公开讨论这个课题话题的人开始变多了。所以现在更关注应用，更关注他这个投资的回报价值，这个是一个比较明显的一个趋势。就像前一段时间是只有红杉的那个投资人说AI2000亿美金的问题，到后面变成6000亿美金的问题。他就是说现在大家在AI上做的投入是蛮高的是吧？投入了几百亿美金，一千亿美金，必须要挣2000亿美金或者挣6000亿美金回来，这个投资这个故事才是成立的。原来只有他唱独角戏，但是现在这种他这种观点越来越受大家的认可等等。所以这是应该代表了一种思维的潮流的变化。这个技术传奇和神话的确要在应用里面体现出价值。来了，开始追问这个问题了。",
      "speaker": "发言人3"
    },
    {
      "time": "00:33:39",
      "text": "两位能不能结合自己的经历讲一讲对AI工程师这个工作的观察变化，把大模型当成一个分水岭。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:46",
      "text": "我在读博士的时候是搞算法研究的，可以说是算法工程师。后来出来工作就开始逐渐的开始搞工程，就是过渡到info这一块，这两个有什么区别呢？我的一个感觉就是说我为什么从算法转到info呢？就是算法的竞争更加残酷，就是刚才说的底层是winner take all是吧？但是算法更是这样，当你想不出来这个方向最先进的idea的时候，就没有人用一个算法。科学家能不能想出rest net，想能不能想出这种VGG，后来想出RN，想出transformer。它有很高的偶然性，每年全世界发表大几千上万篇论文，只有少数的算法或者idea被留下来，被行业认可，被大规模的使用。而且那个idea的产生当然也包括持续不断的探索，勤奋投入。",
      "speaker": "发言人3"
    },
    {
      "time": "00:34:45",
      "text": "我认为还有一部分，我感觉就有点像产品经理那里面的一部分内容，那种灵感的眷顾，所以他那里面就是只有少数人能体会到里面的成就感，只有到就是你做出rest night，做出transformer这样的人。但是大部分人我不是说没有价值，但是他那种成就感绝对就到不了这个程度。所以做算法，这个里面非常残酷。同时它里面的这个idea，很多他是靠聪明那种巧的感觉。就是这个想法一旦出来，它就像捅破一个窗户纸一样。所有人都知道，就像现在大家都知道attention is all you need。",
      "speaker": "发言人3"
    },
    {
      "time": "00:35:31",
      "text": "但是如果说我们想用这个算法做一家商业公司，这个时候会面临一些问题。因为他就它这个传物质捅破之后就很难作为一个商业壁垒，这是算法的一个特点。但是info它会带来一个什么样不一样呢？就是它里面既有那种灵光一现的那种聪明的idea，但是大部分要靠工程实践时间去积累。它不是说我想到了这个idea或者传物质捅破了就能立刻别人能复现出来或者是复制出来一遍。他是要靠很多工程师他那个聪明的才华，或者他持续的日积月累的一天一天往里投入，连续投入几年。",
      "speaker": "发言人3"
    },
    {
      "time": "00:36:18",
      "text": "比如说一个info的系统一般是要这种年为维度的。就像今天说的黑神话悟空，他要搞四年一样。他投入100人像这种info的也是大几十人，100人连续投入几年做出来一个。同时通常比如说别人有类似的idea了，如果没有几百或者是上千人年的投入，几百人年的投入也无济于事。所以这是我后来为什么从算法搞到info呢？",
      "speaker": "发言人3"
    },
    {
      "time": "00:36:49",
      "text": "觉得说这个同样是底层技术，但是做系统软件还是有可能成为一个商业产品的，能成为一个公司的。就好像过去比如说大家大数据系统，数据库产品等等，比如说snowflake data icks、oracle等等，都还是成立商业公司了。这是我的一个小体会。",
      "speaker": "发言人3"
    },
    {
      "time": "00:37:13",
      "text": "还有一个变化就会问到说这个大模型给这些底层技术的人带来什么变化呢？大模型和过去的模型有一些区别，最大的区别就是它是一个资源密集的。像过去我们算法工程师做一个实验，或者是发明一个新的算法，有一块GPU或者几块GPU，这个实验就可以做，我们就可以有这个实验平台，我就可以去创造去发明。但是现在这些算法工程师，如果说没有一个大模型的团队，没有一个什么大家通常是几千块GPU的这么一个实验的条件，就很难去做这样的工作了。所以有机会继续做算法工程师的，现在的人数要比过去少了。Open s topic以及像国内的大公司或者大模型公司这种才有条件去做这个工作。",
      "speaker": "发言人3"
    },
    {
      "time": "00:38:09",
      "text": "除了这一点，还有一个变化趋势是说模型结构今天已经非常收敛了。像过去是百花齐放，百花百家争鸣的，有很多种算法。过去有CN里面就有很多变种，reset VGG、inception等等。到今天大家都是transformer transformer，而且还长得一几乎都一样，都是那个结构。在这个情况下，算法工程师比如说我们怎么再能再突破，再比如说甚至推翻transform码，就变成一个这些算法的同行一个巨大的挑战。",
      "speaker": "发言人3"
    },
    {
      "time": "00:38:44",
      "text": "但是要推翻这个东西或者要超越这个，要颠覆这个东西又极其挑战。因为今天已经大量的资源投入在transformer这个架构下，把这个transformer他能在什么条件下工作的更好，他什么超参数最work都探索的非常充分了。新的想法比较难拿到这么多资源去做充分的探索就很难再出来。所以在这种模型结构逐渐收敛，而且已经投入巨大资源的情况下，好多做算法的其实在今天怎么在做出这种神作，怎么在做出这种颠覆什么的更难了。所以好多只能在大多数只能在transformer这个架构下再去发挥做incremental的工作。",
      "speaker": "发言人3"
    },
    {
      "time": "00:39:34",
      "text": "这个时候只能做什么工作呢？说我们去做数据的工作。因为大家发现说在模型结构的给定情况下，模型效果怎么好呢？大部分来源于数据的工作。比如说用多少数据，用什么数据，这些数据怎么配，中文、英文代码数据，甚至是私域数据怎么配等等，这些变成里面的关键的诀窍了。",
      "speaker": "发言人3"
    },
    {
      "time": "00:39:57",
      "text": "对这个我们之前跟一个朋友聊，他说到一个是我自己在湾区的一个听到别人说话的时候，发现有一个大家说话的口气的变化。就是以前好像不会说实施谁家，比如说两个工程师收入比较高，其中一个可是data scientist。就是以我觉得以前大家不会这样说话，然后现在好像就是data set是一个脑袋上冒金光的一个工作。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:22",
      "text": "对我补充一下，就是说他不是绝对的。我只是说在大模型公司里面做算法的人特别少，他们甚至是以人均卡数作为一个指标。比如说他公司有1万张卡，他可能就十个人用这个十个算法工程师在用这一万张卡。所以他人均就是比如说500卡或者人均1000卡。他们认为它的生产效率不是说我有多少算法工程师，而是有多少特别top的算法工程师。但是每个工程师能驾驭的卡数很多。但是这是我觉得是离我们大多数人都太远了。因为毕竟我们很多人都不在这个大模型公司里面做这个大模型的岗位。在学术界还有大量的工作在做，比如说怎么把模型微调更好，怎么能够把这个alignment做的更好，怎么能解决这个幻觉问题等等，以及说这个模型它现在大家都说是一个黑盒的，它不可解释的，神经网络就是不可解释的那怎么探索出一个理论能把神经网络深度学习，大模型为什么work解释清楚？这些都还是民意，这些还仍然需要这些搞算法搞理论的同行去攻克。",
      "speaker": "发言人3"
    },
    {
      "time": "00:41:37",
      "text": "杨老师你觉得这个大模型它从如果以ChatGPT出现到现在，那你觉得他的这个能力的演化，对工程师的能力有什么特别明显的变化呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:51",
      "text": "对算法工程师来说，其实蛮需要跨界的，蛮需要交叉学科的。就是他的idea要来自不一定是传统科班的计算机工程，它可能来自于物理，可能来自于生物。所以像欧派里面其实蛮多算法背景的人，他是别的学科过来的，有颇有一些是物理的那对info来说，其实就是你比如说搞训练，就是训练的info的话，他就要对分布式，对那些大规模集群，那些高性能的网络等等，他需要非常hands on coding能力非常强。而且要对那些非常复杂的系统问题要有洞察，要有很强的很好的直觉，这是总体上归结来说，首先要考察的就是工程能力，coding能力要非常强，一上手就能把那些非常底层的非常挑战的问题给搞定。",
      "speaker": "发言人3"
    },
    {
      "time": "00:42:58",
      "text": "再往上的这些AI，刚开始是稀缺的，就是AI的技能是稀缺的。但是随着它被大众所认可，它逐渐商品化了，它就变成基础设施，像水、空气一样，应该是大家都需要但是感知不到的东西。所以这个分工也正在往这个方向发展。再往上就是像我觉得就是像爱德比这种全栈的工程师，很强的这种产品的sense，很强的产品的洞察，渗透到行业业中去，各个场景中去，变成我们这个工作生活中离不开的等等。",
      "speaker": "发言人3"
    },
    {
      "time": "00:43:37",
      "text": "对我其实下一个问题也想问爱豆比你之前在大厂里面工作的时候，作为工程师跟现在你自己完全可以说是一个艺人公司的话，你自己的工作方式有什么样特别大的变化？",
      "speaker": "发言人2"
    },
    {
      "time": "00:43:50",
      "text": "我其实上大学之前，我基本上是我都没有个人电脑，我都没有碰过计算机的。所以我当时因为对专业不懂，我就选了个武大的一个核工程。但是我大二的时候就偶然接触到了这个IIT，我就觉得特别有意思。我就在网上看一些视频，然后我就去自学。然后又一直有一些这种做出东西的这种反馈，然后就觉得特别有这种驱动力，然后就不断的自学，然后就持续的对这个行业很有热情。",
      "speaker": "发言人4"
    },
    {
      "time": "00:44:20",
      "text": "现阶段如果有人想走我这条路的话，比如说也是学了一个。不感兴趣的专业。比如有些大学生刚入学他想自学，现在的门槛其实是要低很多的。因为现在就是有很多的资源，然后又能AI这个copilot的辅助编程。然后你不懂的问题，你只要贴过去，立马就给你解释的非常透彻。所以我觉得如果放在现阶段，像我们要自己去学会全栈开发，或者学python，或者学什么，其实你的这个进度也好，门槛也好，非常低，进度非常快，你可以学到在短时间内学会更多的东西。所以我的第这个观点，我就觉得现在是非常好的一个时代，就借助AI大家可以学到更多的东西。",
      "speaker": "发言人4"
    },
    {
      "time": "00:45:05",
      "text": "然后第二个就关于刚刚问到的这个工作的一些变化。其实我觉得我以前在在腾讯的话，我们基本这种大厂它都是有明确的分工的。比如刚才袁阳老师讲的那种，可能从底到上就是分的每一层。但其实每一层它又有很多这种垂直的切分。我们刚刚那个是水平的切换，垂直切分。",
      "speaker": "发言人4"
    },
    {
      "time": "00:45:29",
      "text": "比如说应用层，应用层它又分为前端开发、后台开发，然后还有这个数据库工程师。就比如说我在我之前上一个项目，我在微信我们做一个海外的支付系统，比如说我要有五个前端工程师，然后有五个后台开发工程师。后台工程师我不需要关心别的，我只要关注这个钱包账户金额的变动，然后写API，然后做RPC接口，然后再部署竖起来给到前端去调用。前端工程师他就不需要关心后台的数据是怎么设计的，数据表怎么设计的，然后他只要去调这个接口，按照接口文档去对接，然后能把整个流程跑通就好了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:46:13",
      "text": "所以比如我我作为我可能我之前也做架构设计，做运维。那我运维的话我也不需要关心任何的业务，我只要保证我能搭建一个K8S集群，我把整个微服务切分好，我选什么IPC框架，然后网络通信是走内网还是走VPC私有网络什么的。我把这些给规划好了，然后让每个人他做好的东西，他能够在我的这一套集群上面跑起来就可以了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:46:43",
      "text": "所以我不需要关心他业务逻辑总结一下，也就是说大厂每个工种分的特别的细，你只在你的这个专业里面做到足够的好就可以了。然后我们晋级比如说有不同的通道，每个通道比如说我完全不懂前端，完全不会自己写写应用，不会写产品。但是我依然可以是一个后台开发的专家，对吧？专家他可能完全不懂前端。",
      "speaker": "发言人4"
    },
    {
      "time": "00:47:09",
      "text": "所以现阶段就比如我辞职出来之后，我作为一个独立开发前端开发的话，那我的工作方式肯定是有了翻天覆地的变化。我不需要再跟谁去对一个接口，我也不需要跟谁商量我们的数据链路应该是怎么样的。然后这个文档怎么写，这个数据怎么传。我只要就比如说选定一个全站开发框架，我快速的写个接口，然后快速的自己给它调通。所以实际上以前比如我们做一套系统，我可能要一个月，然后要投入五个人。但是现在我们做同样的一个系统，我可能只需要一个人，我可能三天甚至一天我就能把它洗完。所以一方面就是工作方式变了，就是你不需要太多的这种协助，你的效率会有很大的提升。",
      "speaker": "发言人4"
    },
    {
      "time": "00:47:57",
      "text": "第二点就是你以前比如我们在微信做项目，你是有一些固定的依赖的组件的。我需要依赖微信的它的这个架构团队做的一些什么事件中心，这个消息队列，数据库什么的。但我们现在就是说我不需要依赖这些，我让AI给我一个建议，我应该用什么组件，然后我直接按照他的这个接口文档对接一下。所以实际上这个效率是有非常大的一个提升的。个人开发跟这个公司开发它的工作流程、模式，肯定是有非常大的区别的。",
      "speaker": "发言人4"
    },
    {
      "time": "00:48:34",
      "text": "刚才那个荣会长问我，就是说从后来创业之后，从这个公司的角度来说，希望有什么样的人才？那那我说就是爱多比这种就是这种全栈的工程师，全栈的工程师非常需要，就是我觉得也就是好多公司都非常需要。因为它这里面现在这个AI也出现了，它的产品机会在哪里？有很多不确定性，它需要有很多idea，需要快速的迭代。这个时候其实就像说的，如果是用一个正规军大部队，然后就分工来配置的话，他那个速度太慢了，就是我们见效也太慢了。",
      "speaker": "发言人3"
    },
    {
      "time": "00:49:16",
      "text": "大家有的时候会说这个程序员即使都很厉害，但是大家互相之间协作沟通，传输的带宽还是比较窄的。所以你如果是我们一个全栈工程师，他自己和自己沟通？都在这个脑子里面，都在自己脑子里面，那个带宽就好像无限的。但是如果是两个人，其实现在的沟通还是用语言，语言还是带宽很窄的。",
      "speaker": "发言人3"
    },
    {
      "time": "00:49:41",
      "text": "一比如说像爱豆比，觉得曾经大厂的工作流程是这样子，但是其实已经出现越来越多像你这样的超级个体户，有什么工作会消失吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:53",
      "text": "消失了消失我觉得应该没有那么绝对，只是说可能会有一些也就是降低，比例会有一些降低。以前比如说我们在公司工作，你会有这种测试工程师。他可能就是你要把根据后台给的这个接口文档，或者根据产品给的这个PID文档，然后你要验收。最后这个完成的流程。",
      "speaker": "发言人4"
    },
    {
      "time": "00:50:22",
      "text": "其实就一个产品它涉及到的角色特别多，有设计师、有产品经理、有测试工程师、前端、后台。但是到了微信，就是微信的一些管理理念就提出工程师要对自己的代码负责。所以在微信实际上是没有测试工程师。是的，就这个岗位是没有的，就是每个人自己写的代码自己自测，自测完了之后，然后再自己发布上线。如果说我们自己出来做的话，比如说自己做一个产品，那我不但没有测试，我可能也没有这个产品了，对吧？也没有什么前端，没有后台了。实际上就是属于你把很多个角色都融合在一起了。有一些传统的工种，我觉得就随着如果越来越多的人出来做独立开发，做自由职业的话，我觉得你很多岗位它的边界就会变得越来越模糊，就没有说分的那么的细了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:51:21",
      "text": "刚才说到个人开发者和超级个体，其实这个也是现在在国内外都是一个潮流。这里面背后还有一个原因是就是这个分工越来越明确。甚至很多工种他现在就是所谓的开发者工具或者开发者平台也蛮完善的。比如说我们要做这个K8S或者说如果有一定阶段有需要，但是也不需要自己去做。因为云上已经有这种KYS的托管了或者什么的。如果是做AI也有云上的托管的。比如说现在除了OMI的API，还有各种各样大模型的API，文生度的API。甚至说做个网站托管，服务器租赁，包括是这些CDN好多好多东西也不需要自己搞了。",
      "speaker": "发言人3"
    },
    {
      "time": "00:52:07",
      "text": "也有前几天爱多比还写了一个博客，把那个搞到从我sale搞到cloud flare对吧？其实刚开始大家都用我sale，那那好，那已经帮助大家省了很多事儿了。后来他他发现这个成本太高，说我需要用那个更自主化一些，然后用CDN去搞。也有cloud flare flare这样的产品。所以其实整个IT的基础设施，这种产品，云服务，也给这种情况提供了蛮好的条件。如果我们一位工程师在大部分都有这个能力，或者另一部分通过外界的这个产品和服务然后来补充，也能一样能把一个完整的产品打通。也为其实超级个体，还有我们这种小公司创造了很好的条件。前一段时间不是还有这种流行的这种思路，就是说有很多小公司他收入非常高，说那个me journey就二十来个人，还是一年几亿美金。还有很多很多这种非常小的公司，他商业闭环都都做的很不错了。",
      "speaker": "发言人3"
    },
    {
      "time": "00:53:16",
      "text": "我突然想到一个问题是，其实感觉像袁老师也比较想要招到的，像爱豆比，就是具有这种比较全面能力的人。但是像他这样拥有全面能力的人，自己就可以搞一个艺人公司，可以自己赚钱。这个矛盾对杨老师这样的雇主要怎么解决呢？然后以及爱豆比你会怎么想？",
      "speaker": "发言人2"
    },
    {
      "time": "00:53:37",
      "text": "一定程度上我非常理解这种超级个体爱豆米有这种折腾的镜头，因为我就是这么走过来的。以前我也是，我就想自己我怎么做成一个什么事情，然后impact，然后折腾，中间是很困难的，很挑战的。但是自己内心里面有那个想法、愿望或者一团火的话，其实那些困难都会去克服。那这种我们就应该去去创业，去搞事，这种其实无论是创业公司还是大公司是招不到的，就是最有创业精神这一群人。但是这个人的谱系它是两个轴，一个轴是能力，还有个轴的就是冒险。特别喜欢冒险的人，他就是有的人越有冒险精神又有能力，那这种人就应该去创业。还有的人他不喜欢冒险，有能力，比如说特别不喜欢冒险就去大公司。但是折衷中等程度的冒险，可以加入别的创业公司。",
      "speaker": "发言人3"
    },
    {
      "time": "00:54:44",
      "text": "当然也有那种比如说像当年像字节很多业务，它也是通过像并购或者什么进去的那这个也可能是中间的一种解决思路，就是虽然加入了这个，比如说一个公司，但是是被并购进来的，以及并购进来还是单独做一个业务，做这种新业务。比如说当时抖音应该就是被并购进来，然后再发展起来的，是吧，所以这也都存在着这种种可能。这是我的一个理解。",
      "speaker": "发言人3"
    },
    {
      "time": "00:55:18",
      "text": "我很朴素的一个想法就是我觉得我尊重我自己的个性，我是一个非常喜欢自由的人。然后就比如属于那种自由随性，就想到什么做什么的那种。所以我其实在腾讯待了五年，我觉得已经算是非常久的一段职业经历了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:55:35",
      "text": "我之前在腾讯之前，我还有待过两家公司，基本上都是不到一年我就跳槽了。所以我觉得在腾讯待了五年，已经到了我的一个职业的极限了。所以我就是当时去年的时候，我怎么样我都想着我要一定要裸辞。因为我感觉我每天脑子里有太多的想法，然后我又没有太多的时间去把它落地，然后我上班就会上的很痛苦。",
      "speaker": "发言人4"
    },
    {
      "time": "00:56:00",
      "text": "对我就裸辞出来，裸辞出来我就觉得我这段时间其实还是非常快乐的。因为虽然你刚刚讲的就是可能一个人公司就是靠自己能赚到很多钱，也不需要去打工，这个我其实是持保留的态度的。至少从目前来看，我是没有赚到什么钱的。就是在在商业这个价值方面，我还没有做出什么证明。但是在做产品，还有积累个人的这个影响力方面，我觉得我是应该有九个多月了，就辞职出来，我觉得还是收获了特别多的。然后我觉得最大的一个感受就是我可以每天随心所欲的。按照我的想法，我突然有一个灵感，然后我就很快的把它上线，然后发布出去被很多人看到，然后我就会觉得这种感觉特别棒。",
      "speaker": "发言人4"
    },
    {
      "time": "00:56:48",
      "text": "所以也有一些像袁老师，然后还有莫妮卡、小红哥，还有其他的一些老板其实也有邀请过我，就看要不要加入一起搞。我觉得一方面我很尊敬像袁老师、小红之类的创业者，我觉得也是有非常值得我学习的一些品质。但我现阶段我是觉得我还有太多的这种想法，我没有完全把自己给它做出来，把我很想做的一个东西把它做的更好一点。然后再后面再看看有没有什么别的一些机会。如果能努力自己赚到钱，我觉得那肯定是最好的一个方向了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:57:28",
      "text": "我觉得就像你说的，你的当下优先级别，根据自己个性最最需要的东西的一个调整。",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:34",
      "text": "我也是从原来就是不福建做工程师，然后觉得不应该局限在一个能力范围内或者影响力范围内。然后这么走过来的。创业，确实它的好处就是它没有天花板，能折腾到什么影响力是能什么成就，没有人设这个线。但是在大公司一定程度上这个肯定是要服务服从，所以整个公司的规划什么等等这些。",
      "speaker": "发言人3"
    },
    {
      "time": "00:58:03",
      "text": "另外就是创业的确是对人的成长帮助很大。从单一技能到更多更全面的技能，对吧？你不仅是要做研发产品，还要有运营增长、融资商业化，也有商业的思维，这个是弄成闭环，这是成长。",
      "speaker": "发言人3"
    },
    {
      "time": "00:58:24",
      "text": "但是成长背后是挑战，就是面临的挑战也很多。但是如果自己非常enjoy自己的idea这种这种愿望的实现的话，这些好像这些都应该不在话下，都能克服。但他确实是非常难的。这些我相信每一位创业者，其实在整个过程中，这些都在冷暖自知。对这个问题挑战会非常多。但是应该就是既然选择这个出发点，可能都心里有准备。",
      "speaker": "发言人3"
    },
    {
      "time": "00:58:57",
      "text": "我比较想好奇的是你觉得最难的事情是哪些事情？",
      "speaker": "发言人1"
    },
    {
      "time": "00:59:01",
      "text": "对你来讲，直观来说，大家会第一反应说融资难。的确融资是挺难的，但是它是个表面的表表象最难的是改变自己，或者意识到自己的局限，无论遇到什么困难总有人能帮他解决。但是如果不改变自己，自己不一定能解决。比如说碰到融资，可能融资有融资的规律，有的人融资就很顺利，看上去有的人就非常难。这个时候中间是有就是要找到那个规律。这个时候可能要挑战自己说我是否自己太坚持，我自己太自以为是了或者什么的等等。或者说什么方面的能力要提高，把这个自我放下，然后意识到可改进的地方，以及那部分能力补全有可能是自己去补全的，也可能是通过团队协作来补全的。所以最挑战的还是自己的成长。我觉得但这一次。",
      "speaker": "发言人3"
    },
    {
      "time": "01:00:01",
      "text": "其实你还是义无反顾又开始了一次新的创业。然后才知道了这个有千难万难之后，那你觉得这个内心最大的动力来自哪里？",
      "speaker": "发言人1"
    },
    {
      "time": "01:00:12",
      "text": "其实一直以来就主要就是一直以来的一个追求没有实现。一直在一直说是在踏踏实实的搞技术，搞研发，搞这个就是要追求做的东西能给别人带来价值，能能创造价值，自己能产生impact，然后自己有成就感，有回报。这是从最初开始出来创业的时候就是这么想的，但是一直没有实现。那现在要是中间不做了，那可能后面就会后悔。就是肯定说中间前面付出了那么多，坚持那么长时间。现在按说这是个更好的时机。大家公认说这大模型AI是一个像移动互联网，甚至像PC一样的革命，这是这么好的一个时机，可能一辈子也碰不到几次。然后本来原来已经出发做好了蛮多的积累与成长团队，那中间再不做了，这是肯定后面会后悔的，肯定会的。所以为了不后悔，就是原来的梦想没有实现，还得继续干。",
      "speaker": "发言人3"
    },
    {
      "time": "01:01:24",
      "text": "其实从头到尾都是希望看一下自己的极限在哪里，自己的到底能够折腾什么样子，能能做出什么样的事业。然后原来是在研究上说我研究上能做到什么位置，说我能做出什么样的创造力。比如说paper能放到什么地方，能有什么section，然后做出来。后来做东西更重视对产品，对业务的影响，就是说能帮公司赚多少钱。在后面就是说整个行业还不一定看得清楚。",
      "speaker": "发言人3"
    },
    {
      "time": "01:02:00",
      "text": "未来的情况下，你通过自己的研究思考，能够超前做一些预判判断。然后为未来要发生的重要的事情提前做好什么样的准备，或者做好什么样的技术或者产品的准备，能产生最终其实换下来就是所谓的一个词就是impact。一直在追求这个，就是希望能靠自己，靠团队能够产生多大的impact，能折腾个什么样的事情。是这个事儿。",
      "speaker": "发言人3"
    },
    {
      "time": "01:02:35",
      "text": "你是什么时候意识到自己是有如此强的impact的驱动的？",
      "speaker": "发言人1"
    },
    {
      "time": "01:02:40",
      "text": "这个可早了，到现在我觉得会更大一些。特别小的时候，其实一直在追求这种所谓的卓越。比如说你追求学习成绩多好，追求full paper多好，那时候都是可能是眼光特别短，特别小，就是局限在一个实际意义没有那么大的一个问题上。到后面就是更追求实际给人的这种带来的正向的推进作用。比如说让人生活的更幸福，让让这个工作效率更高，让所谓的这个世界走向更好的方向等等。",
      "speaker": "发言人3"
    },
    {
      "time": "01:03:27",
      "text": "爱豆比其实你做的事儿也是有蓬勃的创造力，就在很多人看来是难以想象的，怎么可以有那么多的idea，并且有那么强的执行力。所以你自己如果看自己内心的话，你觉得这个驱动力是来自于和袁老师一样的，就是对影响力的追求，对卓越的追求，还是有来自于不一样的角度。",
      "speaker": "发言人1"
    },
    {
      "time": "01:03:51",
      "text": "我觉得一方面也跟袁老师一样，也是希望自己能够有更大的影响力。第二就是当你做出来的产品，真正解决某些人的问题，然后别人很喜欢的时候，其实是有非常大的成就感的。我觉得我一直是一个成就感驱动型的，包括我不管是最早自学计算机也好，还是我现在自己做一些产品也好，我觉得最大的一个本质还是靠成就感驱动。然后做这个东西能够给我带来持续的成就感。",
      "speaker": "发言人4"
    },
    {
      "time": "01:04:23",
      "text": "然后另外一方面，其实也是不断的去，像李老师刚才也讲了，就是想看一下自己的这个能力边界在哪里。以前比如说我可能之前几年工作我都是做后端。那我看一下我做前端是不是也很容易。其实我发现好像做这个东西对我来讲也不是那么难。我因为有一些积累，然后我学一门新的技术，我发现就特别简单。我可能把官方文档过一遍，然后了解一下它背后的这个技术架构，我觉得很快就能上手去做出东西了。",
      "speaker": "发言人4"
    },
    {
      "time": "01:04:56",
      "text": "包括我三月份去做这个AI搜索的时候，当时因为我之前也有想过要做，但我总觉得这个东西它应该是一个很大的东西。像谷歌、百度做几十年的，我觉得不是我这种人能轻松的进去做的。但后来我去了解了一下AI搜索它背后的一些技术技术站能力什么之后，我发现其实他好像也在我的一个能力范围内。因为我可能不需要再从头走一遍以前做传统搜索引擎的那条路。",
      "speaker": "发言人4"
    },
    {
      "time": "01:05:28",
      "text": "我在现有的AI的一些能力之上，我觉得我甚至可以在一天内或者两天内我就能把这个东西给做出来。所以我慢慢的探索的越多，我会发现我对这个行业，就我经常讲的一个词就叫趣味。我就觉得好像基本上好像我看到的每个行业好像基本都是没有特别高的这个技术门槛。所以我就基于这个认知之后，我就慢慢的就会有更多的想尝试的这个欲望。",
      "speaker": "发言人4"
    },
    {
      "time": "01:05:59",
      "text": "我觉得只要在我能力范围内的，然后我经常会看到的或者会用到的一些软件，我都想自己能够动手把它写一遍。这样的话我就会觉得不同的产品它可能会带给我不同的这样的一个成就感。然后也能接触到不同的这样的一个人群，然后我就对每个行业就会有更多的这样的一个认识。所以我觉得基于这些元素，能够让我就一直有我不断的有新的学习的欲望。我不断的去补充我的这个知识库，不断的把我学到的东西再通过一个实际的产品去做出来，然后再覆盖到不同的这个领域。所以这也是我持续创作的这么一个动力。我觉得。",
      "speaker": "发言人4"
    },
    {
      "time": "01:06:45",
      "text": "其实我现在不是工程师了，因为我现在说实话我也不写代码了。我觉得蛮遗憾的，我特别羡慕艾德比这种状态，就是他有什么样的idea和产品想法，他立刻就能去把他就实施，看到效果。我以前写代码的时候，我也非常enjoy这种状态。但现在有点儿不爽的是，现在觉得有什么想法，自己做起来没那么快了，要同时去做，还要讨论半天，他也不一定听我的。所以这个时候，其实还是这种我觉得作为工程师，这种自由还是非常令人向往了。",
      "speaker": "发言人3"
    },
    {
      "time": "01:07:32",
      "text": "那你会考虑用dev这样的agent吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:36",
      "text": "一这个我还没有上手用，但是我听他会解决，初步的一些问题。因为我还是相信工程师，就像现在说AIGC有些画画或者写作能超过这个画师，超过这个作者，超过作家。但是我还是觉得他最顶级的那些还是超过不了，就像写代码，我们最顶级的这些工程师，这些AI的coding的agent还是搞不定的这里面还是含了蛮多我觉得AI现在还理解不了的智慧的。",
      "speaker": "发言人3"
    },
    {
      "time": "01:08:14",
      "text": "我们的听众中，可能有的人他是对进入这个行业感兴趣，有的人可能他身在其中。就是袁老师对这种从比如说从过去是所谓古典工程师的话，进入AI的这些公司有什么最先上岸的一些领域。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:31",
      "text": "基于这些大模型或者是生成式AI的API去做用prompt，用像define去带一些好玩儿的东西，这些我觉得这是比较快的。很多这种项目都有开源的去观摩去玩儿，就是下载到开源代码去have，然后去改成自己想要的形状或者什么，这是比较快，他动手会更快。现在当然也有很多很多的教程、教材、视频等等。这也是可能会对那些想更深入的理解这个背后的Y这些问题有好奇心的这些工程师可能有他可以去学习这个所谓的深度学习后面的这个呃比如说原理，就比如说梯度下降，矩阵attention到底是怎么回事，怎么算的等等这些，反正有一些正规的课程，比如说像斯坦福历来就有很多这种非常好的。当时是CS231，对，就是教育了一代人的很多很多这样的。我觉得网上的资源现在还是非常充沛的，B站上youtube上都有很多。但是最直接的我认为还是从代码入手，就是做从开源的这种项目入手。",
      "speaker": "发言人3"
    },
    {
      "time": "01:09:53",
      "text": "袁老师你作为雇主的话，你们公司在招工程师的时候，你最看重什么？",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:59",
      "text": "一个素质就是自驱，这是创业公司非常需要的。因为创业公司团队非常小，组织结构也比较扁平，也就是什么事情都要做的尽可能简单。对，就是他有研发的动力去进步，去学习，有好奇心。这个顶其他的很多就是说有这一点的话，他会持续的自己去解决很多很多问题。而且未来像这种天花板也比较高。另外一个就是还是要有一定的在过去的经历中要有一些record。你要么是成绩好成绩好，说明你还是比较自律的，比较投入的也可以。成绩不好好也许他兴趣不在这儿，他是兴趣在别的地方，但是总能讲出就比如说一点亮点，比如说他博客写的好，或者我视频做的好等等，总要有一个热爱的东西，我觉得这也是比较重要的。",
      "speaker": "发言人3"
    },
    {
      "time": "01:11:02",
      "text": "我问一个比较残酷的问题。就是因为很多这个人，包括我自己在内，我们招这个新同事的时候都希望说他自驱力强。越创业公司越希望自驱力强。但其实这个世界上很多人自驱力他就不强。比如说袁老师你会给这些人什么样的建议？",
      "speaker": "发言人1"
    },
    {
      "time": "01:11:21",
      "text": "其实刚才说的自驱力和第二个问题就是要有兴趣，根本上还是要找到自己的热爱。无论前面有什么障碍，我一定要干这事儿，我一定要把什么东西搞明白，这种他内心里面的一个好奇心兴趣。因为现在我们绝大部分人应该都脱离了温饱的阶段，就是所谓的那个需求，应该更加去follow自己的内心，follow my heart. 如果是这种情况下，按照这个追求的话，也我认为也比较容易解决温饱问题或者生存问题，甚至在那个专业上能能到更高的高度，所以还是要有自己的爱好和兴趣，按照自己的兴趣和的职业去发展，这是比较重要的。",
      "speaker": "发言人3"
    },
    {
      "time": "01:12:10",
      "text": "其实自驱是一个结果，对吧？自驱是热爱的结果。所以就像去年power graham就YC的创始人写了一篇超长长文，前所未有，就讲说如何成就伟大事业里面再讲，还是要先从自己去发现，回到自我。然后里面找到的第一点就是有什么是你异乎常人的热情。比如你就是对毛毛虫特别感兴趣，那你可能就是在别人看来是怪咖。但是如果你沿着这个兴趣去做的话，你成了这个毛毛虫的专家，也可能解决温饱问题自然不在话下，很可能他还是你成就伟大事业的起点。",
      "speaker": "发言人1"
    },
    {
      "time": "01:12:50",
      "text": "我们说AI能做越来越多的事情，能取代人很多很多能力。其实它取代不了的是人的这种个性化和人的这种内在的追求和创造性。所以我觉得未来趋势也是应该鼓励这些人。我们人是按照个性来发展，按照兴趣来发展。世俗来讲也是为对个人生存来说是更合适的一种道理，更合适的做法。",
      "speaker": "发言人3"
    },
    {
      "time": "01:13:21",
      "text": "刚才那个问题没有问完，后半个问题是问爱豆比，刚刚问袁老师关于AI工程师的工作，我在想可以可能也有很多人想要走你这条路，更自由，更freestyle，当然也需要冒很多风险。如果对想要走你朝着你这个方向发展的工程师，有什么样的工程师背景的人。",
      "speaker": "发言人2"
    },
    {
      "time": "01:13:42",
      "text": "有什么样的建议？首先建议的话就是不管是有工程背景还是说零基础的，其实我觉得要做AI应用层的开发，其实相对来讲是比较容易的，可能底层会难一些。底层比如说说要做的袁老师要做的那种事，像我去从现在开始要去做这个行业，我估计我都要很长时间。那么我觉得做我们这一行，做AI应用开发这一行，就对于比如说你这个融汇你来做的话，我觉得可能你也是适合的。其实我觉得主要就是三点。",
      "speaker": "发言人4"
    },
    {
      "time": "01:14:15",
      "text": "第一点就是那个零代码。零代码的话因为现在有很多了，像defi扣子这种，就是你只要你有创意，你可以通过零代码的方式，你用他的那个流程就可以做出一个能够给你的朋友用起来的一个应用。这个应用能够比如说像之前航空模拟器之类的，或者像上次那个吐槽这种，他就一下子能够积累特别多的流量。那就能够给你一些正反馈。那你就会觉得你对这个事情就更加热爱，你就会去创造更多。所以其实零代码是能让你很快的进入到这个AI应用的这个行业的。",
      "speaker": "发言人4"
    },
    {
      "time": "01:14:52",
      "text": "然后第二点就是做这个低代码，低代码的话现在也有很多的这种框架，比如说这个radio，还有stream net之类。对的，就是你只要用python，你不需要自己去熟悉前端，写很多的这个HTML代码。如果说你有了这个创意，然后又有一个低代码的这种框架让你用，你就做出了一个只要让你朋友上传一张图片，他就能看到一个自己穿一个红色T恤的这什么的效果。他就会能够给你也是带来一方面带来成就感，甚至也会有一些经济的收益，我觉得这是第二点。",
      "speaker": "发言人4"
    },
    {
      "time": "01:15:26",
      "text": "第三点就是做有代码的，这个就是可能对技术要求会比较高一点。相对十年前我们现在要学习代码开发也是非常容易的。比如说get up上有很多这种开源的课程，也有一些这种东西。实际上我从去年12月开始，我也在做一个全站开发的一个课程。然后也有一些做产品经理的，然后他也进到我的社群之后，他也学会了一些写代码去做这些东西。其实它是非常简单的。",
      "speaker": "发言人4"
    },
    {
      "time": "01:15:59",
      "text": "我觉得最重要的一点，如果零基础的，你就是要跟就有一套从0到1的一个项目。你完整的你不需要理解它的原理，你先把它复刻，能把它做出来，能跑起来，然后基本都是一些标准化的流程。不懂的问一下AI基本上一个零基础的产品经理，他可能也会在一个月或者两个月之内也能自己实现写代码做idea的这么一个过程。",
      "speaker": "发言人4"
    },
    {
      "time": "01:16:27",
      "text": "对于稍微有一点技术的人，比如说以前是做算法的，以前做后台的，他可能没有做过全栈应用。这种人是更容易学习的，可能甚至一周以内就完全能自己做东西。因为有太多的这种开源的东西了，而且全站开发你家AI的这种辅助编程，做一个东西是非常简单的。所以我觉得总结我的建议，我觉得就可以参考零代码、低代码，还有写代码的这三种路线，选择适合自己的一个方向。如果你你自己看得懂代码，你就去学习一下写不同类型的代码。以前你写后台，你先可以写一点前端。如果你只是想做出一个自己的东西，那你有太多的这种低代码或者低代码的工具可以用。",
      "speaker": "发言人4"
    },
    {
      "time": "01:17:15",
      "text": "我觉得本质上还是回到刚刚讲的一个持续的热情的这么一个话题，就是一定要有有自己想做出一个东西来的这么一个想法。就你突然发现一个你很想做这个东西，市面上没有人做，然后你特别想自己把它实现。那么有了这个动力之后，你才会去找各种实现的手段，你才会想怎么样把这个给落地出来。所以我觉得我的建议就是说先要有自己的一个idea，然后再去找各种各样的工具来完善。现阶段我觉得但凡自己有想法的人，有一点自驱力的人，基本上要入行这个AI应用开发其实是非常容易的对。",
      "speaker": "发言人4"
    },
    {
      "time": "01:17:57",
      "text": "已经有一定经验的工程师，他要怎么样精进自己，来提高自己的竞争力呢？就是在你们分别所在的这种infer层面跟应用层面做事的人。因为现在环境也对比较挑战，整体这个市场也会有一些波动，然后就是可能也会有一些人淘汰。",
      "speaker": "发言人2"
    },
    {
      "time": "01:18:17",
      "text": "那未来什么样的工程师更有竞争力呢？我觉得是有有两种发展方向。一个是做的特别深，某个方向做的特别深，你就变成世界上最top的那个小群体里面的之一。还有一种就是做的广，融会贯通，更复杂的系统都能驾驭自如。就像我们说有的同事他就是在研究算法，去正常在这个GPU上或者在华为升腾上怎么跑的更快。他就要对那个GPU底层的系统结构、指令集，各种什么share memory、带宽，memory bank，这好多东西细节都要弄的。我认为就是它甚至不能比这个原厂差，甚至不能比英伟达的工程师理解要弱等等。所以这是深的，它可以算的非常深入。还有一种就是往全面的角度，我觉得AI这个虽然AI可以做一部分代码，但是他在这个整体像系统架构这层面，我不觉得现在的AI能够驾驭。这个时候其实是比如说像以爱豆比为代表的这种全栈的工程师，整个行业非常需要的这样的OK。",
      "speaker": "发言人3"
    },
    {
      "time": "01:19:34",
      "text": "我在袁老师基础上补充一下。首先深度这一块确实是必要的，深度就对应着一些专业的领域。比如说我们一开始比如做全站开发，我做一个产品很简单，但是如果这个产品它有幸做的特别大我打个简单的比方，就是莫妮卡她最近也上了那个AI吐槽的，她就五天之内跑了几千万的PV几百万的用户，都来了。像这种你说做一个莫妮卡的吐槽的这个功能，甚至说之前那个word well的那个吐槽的一样做的话，基本上可能像我们这种人做一天甚至半天就做出来了。做出来。但是如果说有几千万的流量进来了，我能不能扛住？所以我觉得这就是袁老师讲的叫做专业的深度的问题了。你只有经过一些大流量的这种项目的经验，你自己懂得如何做高并发、做分布式、做容灾，做这种这种多集群的这种抗压。",
      "speaker": "发言人4"
    },
    {
      "time": "01:20:37",
      "text": "然后关于管部的这个问题，我觉得只要有一个全局的视野，其实大家可能很多人对全栈工程师了解的不够多。以前大家理解的全栈工程师，其实就是说我自己写API，自己写页面，然后自己对接。一般以前的一个狭义的定义，全站就是说用next的，用node JS一把输。就我node JS把我整个项目写完了，我不需要去对接别人的API，这就是别人理解的全栈工程师。但我觉得光有这个其实是不够的，你要做一个广度的延伸的话，你必须要有一个全局的视野。",
      "speaker": "发言人4"
    },
    {
      "time": "01:21:15",
      "text": "你不单是能够前后端自己把这个项目搞定。第二你自己比如说你要知道如何去设计数据库，能有更好的扩容的能力。你如果懂这个K8S集群的部署，比如说我以前在微信，我是做系统架构的。那么我做任何一个项目，我就会想到我应该怎么去把它部署会更好一点。",
      "speaker": "发言人4"
    },
    {
      "time": "01:21:39",
      "text": "我一开始为了图方便，我可能就直接丢到这种云托管，这个VC就很快的上线了。但是为什么后来我要签？一方面是我觉得这种方式它只是便利，但是它很贵。第二方面，但凡我如果也是几千万的流量进来了的话，他这套架构绝对是扛不住的。那么我会想着我要签到我自己搭的这个K8S集群。",
      "speaker": "发言人4"
    },
    {
      "time": "01:22:02",
      "text": "我一开始我就在设计这个代码的时候，我就会想到我如何用道口去快速的给它部署，如何在集群里面也能够跟在托管平台一样的这种运行的方式。所以你但凡有个全局的视野，你就不仅仅是知道这个应用是怎么做出来的。你而且要知道它怎么样去把它部署起来会运行的更好。然后如果流量起来了，我怎么样扩容能够更快速、更平滑，不需要宕机。所以你就会看得更远一点，如果一开始这个设计的不好，比如说我知道代码它所有的组件都是依赖那个VCL的，它不太容易在dock里面去运行的话。那么我这个应用他只要做大一点，我肯定我就要花很多的时间去改造，去迁移，那可能就会影响这个体验。",
      "speaker": "发言人4"
    },
    {
      "time": "01:22:52",
      "text": "所以我觉得做做这个应用层的，除了刚刚讲的这个深度以外，广度这一块最重要的还是要有视野。视野这个有可能不是你一下两下能够学会的，可能还是我觉得跟工作经验，还有你的一些项目经历有关。你做过前端跟后台，然后也做过运维，也做过架构的话，你可能对这个事情理解起来就会更透彻一点。",
      "speaker": "发言人4"
    },
    {
      "time": "01:23:19",
      "text": "所谓的AI初级一些的AI工程师会被取代，是你们是不是同意这个观点？",
      "speaker": "发言人2"
    },
    {
      "time": "01:23:25",
      "text": "我觉得初级可能还是刚刚讲的那个，就是你的视野比较局限，就是能力比较单一。比如说我只会调别人的API，或者说我只会套个壳，然后做出来就是套壳是可以很好的快速的验证。但是如果你想要，比如说公司我作为袁老师这样的雇主，如果要招一个人的话，你只是会套壳，只是会调API，只是会写个页面，我觉得可能还是不够的。因为它的产品形态可能会更多样，以后的扩展性流量可能会更大。那么肯定如果说袁老师要招聘一个更合格一点的人，他肯定会觉得不仅仅会套，可你更多的是你能理解为什么要这么套，可你怎么样套会比较合理一点，或者说你有没有其他的一种方式能让这个做的更好一点，更完善一点。所以我觉得被取代的也不能说完全被取代。但我觉得这种人可能会慢慢的没有那么大有竞争优势。",
      "speaker": "发言人4"
    },
    {
      "time": "01:24:29",
      "text": "如果只是限制在某个领域，不了解某一个东西它的背后的东西，你只是看到它表面怎么用，我觉得可能是没有太大的竞争优势。如果要提升自己的一个竞争力优势的话，一方面就是你要了解更多的可以用的方式，第二你要了解它背后的一些东西。如果说你不能用别人的了，你必须要自己搭一个。你至少得知道为什么要这么搭，我应该怎么去搭。我觉得这样的人会比较有优势。",
      "speaker": "发言人4"
    },
    {
      "time": "01:25:01",
      "text": "补充一个角度就是除了纯技术方面就是去更完善，视野更广，还有个就是领域要交叉学科，或者说要跨界。因为现在很多我们的软件，现在逐渐就是由模型加人写的软件来组合起来的。你直接用模型的话，它完成的是一个比较通用的能力。它在某个方向某个领域知识、行业知识这方面，目前还有这个挺多是做不太好的。像我们除了在工程上搞好，我同时还对法律行业非常了解。他这个时候就特别适合把这个通用的知识，通用的模型能力，软件架构工程的能力，怎么在这个行业里面能发挥的更好，他就能做的比别的人更好。",
      "speaker": "发言人3"
    },
    {
      "time": "01:25:55",
      "text": "那你们觉得接下来会发生什么？就是有一些趋势的判断。",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:01",
      "text": "整个在AI这个行业里面，大家现在基本上可以分成应用和底座。前一段阶段主要的投资资源其实是放在底座上了。无论是建集群训模型还有等等这种层面。这个很多人也分析过了，其实如果应用不爆发的话，不发展起来的话，这个是不可持续的。所以像未来应该是重心，很多人也都意识到了，重心是要看到这个技术在应用层面创造的价值，发挥的作用。我觉得这是后面应该会发生的。而且我也相信这个技术的进步是实实在在的，他一定会在很多很多应用场景里面发挥出来我们意想不到的这个作用。",
      "speaker": "发言人3"
    },
    {
      "time": "01:26:55",
      "text": "只是说这个确实是需要一个过程，而且这个过程还需要一定的前提条件。就是说就包括那些技术。比如说模型能力、模型成本，还有一些就是参与程度。比如说这个模型能力能不能像过去一些技术的模块一样，变成人人都可以用得上的，人人都触手可及的，而不是一个非常小的狭义的AI工程师才能摸得着，玩的起来的。就会出现一些意想不到的东西或者是化学反应。",
      "speaker": "发言人3"
    },
    {
      "time": "01:27:30",
      "text": "因为很多这种产品，我还是感觉他没有这个偶然性的。可能他就和某一个人独特的成长或者发展经历有关，他才能想出那个idea。但是如果这个人他离这个技术很远，他就摸不着，玩不上，他就很难发生这个化学反应。所以怎么通过这种基础设施的完善，让更多的人有能力有机会参与。",
      "speaker": "发言人3"
    },
    {
      "time": "01:28:00",
      "text": "这些技术来做一些有趣的东西。当这个事情发生的时候，应用的爆发以及所谓的super up的出现，我觉得都是顺理成章的。对我对这个还是非常乐观的。",
      "speaker": "发言人3"
    },
    {
      "time": "01:28:13",
      "text": "我觉得首先可能有一些人的观点，他会觉得AI可能是个泡沫，就觉得泡沫要破了。但是我觉得AI它可能也只是刚刚开始而已。其实AI是可以未来我觉得5到10年内，应该还是相对来讲是个主流的一个趋势。",
      "speaker": "发言人4"
    },
    {
      "time": "01:28:32",
      "text": "其实我们很多人有一个观点，就是会拿AI的这个发展跟当年的移动互联网去比。实际上我觉得跟移动互联网比可能不是那么的恰当。移动互联网主要是因为有很多新的需求，然后以前从来没有被满足，所以就产生了很多新的机会，出现了很多super apple。但是现在AI的话，实际上你没有太多新的机会，你可能更多的是做这个体验的提升。",
      "speaker": "发言人4"
    },
    {
      "time": "01:28:59",
      "text": "我实际更想类比，我觉得是类比这个云计算的时代。因为云计算之后，很多的趋势以前是大家独立的机房，然后做oracle，什么IBM的那些东西去部署自己的应用。然后后面的云计算出来之后的一个趋势就是流行叫做上云。然后就大家会慢慢的把自己的一些业务搬到云上面去，上云就成了一个趋势。在后面就慢慢的变成了一个叫做cloud，cloud native，就云原生。然后后来，到了后面的一些大家做一些新的项目，他就会用云原生的方式去做。就第一天就在云上面去部署，去开发，然后去做微服务。然后以前的那种传统的开发的范式可能就慢慢的发生了变化。",
      "speaker": "发言人4"
    },
    {
      "time": "01:29:50",
      "text": "所以我觉得AI类比云计算的话，就是我们会有更多的叫做AI native的一个应用的一个出现，可能会有更多的第一天就用AI来构建整个的产品的流程，整个产品的开发的体验的这种方式。后面我觉得这个AI应用肯定是会蓬勃发展的。特别的是这种AI native的应用就是它所有的能力都是构建在这个AI的基础上的。用AI去让这个应用它的体验会变得越来越好。然后把过去的一些这种apple的体验，用AI去进行升级。我觉得这样可能会是一个趋势，也许不是1到2年的趋势。他可能我觉得会比较长一点，就可能5到10年有可能都会朝着这个方向发展。",
      "speaker": "发言人4"
    },
    {
      "time": "01:30:40",
      "text": "那你觉得未来1到2年短期内会发生什么呢？",
      "speaker": "发言人2"
    },
    {
      "time": "01:30:45",
      "text": "短期内我觉得应该会是工具类应用爆发的一个时机。所谓工具的应用，比如说做这种网页生成，UI组件的生成，或者做这种设计的这种海报类的设计元素类的这种东西。反正就是用工具加上AI来提升你各方面的这种效率。所以我觉得这一个会是一个趋势。之前不知道是不是李开复老师讲的，好像说是有几个阶段，从工具再到娱乐，再到电商，还是再到什么，就会有这么一个趋势。但我个人是觉得我亲身感受到就是最近一两年我觉得AI工具肯定是发展的最快的。",
      "speaker": "发言人4"
    },
    {
      "time": "01:31:34",
      "text": "好，今天谢谢二位的时间。我们一开始是想聊一聊大家来给想转行到AI的工程师的建议。当我们发现朝这个话题来聊，慢慢的就聊了职业，聊了内心，甚至聊到了自己的冲动、野心和欲望，我觉得这些其实都是要成就伟大事业的。第一步就看清自己热情在哪里，找到自己的动力在哪里，让自己成为一个积极行动的有自驱力的人。其实这也是我和容慧今年年初想做十字路口的一个起点吧。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:08",
      "text": "觉得身边在经济环境不好的2024年大家都怨声载道。我俩想说我们要多认识一些积极行动者，要去把积极行动的热情传播给更多人。而我觉得今天这一期其实就是十字路口这个做播客起点的题，或者完美的一个呈现。所以我今天挺开心的录下来，不但得到了很多知识，也得到了很多能量。好，再次谢谢二位，也欢迎你们再来做客时。",
      "speaker": "发言人1"
    },
    {
      "time": "01:32:35",
      "text": "好的，谢谢，拜拜。",
      "speaker": "发言人4"
    },
    {
      "time": "01:32:37",
      "text": "再见。",
      "speaker": "发言人3"
    },
    {
      "time": "01:32:41",
      "text": "如果你认为有朋友也会喜欢本期十字路口的内容，请转发微信推荐给他们。最后欢迎你加入十字路口的会员群，我们会在群里每天放送AI全球新闻，并且鼓励大家在群里聊天互动，交朋友，寻找未来的同路人。",
      "speaker": "发言人1"
    }
  ],
  "lab_info": {
    "summary": "本次对话深入探讨了技术专业人士，尤其是全栈工程师，所需技能与深度、广度的重要性，强调了系统架构、数据库设计及Kubernetes集群部署在处理大规模流量中的关键作用。同时，讨论了AI技术的未来趋势，指出应用层发展的重要性及AI原生应用的潜力，预测AI将在未来5至10年内成为主流。讨论还涉及了AI工具应用的爆发，AI在提升效率方面的潜力，以及看清个人热情和动力对于职业发展的重要性。此外，讨论了新一代人工智能技术对各行各业的影响，以及它带来的创业机会。强调了AI产品经理和工程师面临的挑战与机遇，包括技术快速发展、应用层与底层技术的融合，以及在AI领域中找到个人位置的重要性。通过案例分析和经验分享，强调了创新、持续学习和个人成长的重要性，并探讨了AI如何重塑社会并赋能人类。最后，呼吁听众积极参与AI领域的讨论与实践，共同探索未来可能性。",
    "qa_pairs": [
      {
        "question": "袁老师在一个月内决定创立轨迹流动的原因是什么？",
        "answer": "决定创立轨迹流动是因为在那一个月内，团队意识到虽然面临从光年离职后的低谷，但行业仍处于早期阶段，且团队在这个方向上的战斗力很强。他们希望通过找到合适的切入点，在AI浪潮中占据一席之地，并利用自身优势争取后续发展机会。",
        "time": "00:06:04"
      },
      {
        "question": "袁老师能否分享一下自己职业生涯中的最高光时刻和最彷徨的时刻？",
        "answer": "最高光的时刻是在技术上，特别是在one flow项目时期，当团队做出的技术成果获得行业认可，并且在大模型领域取得领先时感到非常兴奋。最彷徨的时刻是去年从光年离职后，面临公司估值变化和团队去向选择的问题，但这个阶段很短，仅持续了一个月左右。",
        "time": "00:03:04"
      },
      {
        "question": "袁老师如何向AI应用开发者推荐轨迹流动？",
        "answer": "轨迹流动的目标是让不会AI的开发者也能开发出含有AI应用的产品，致力于解决AI部分的技术难题，让开发者能够更便捷地开发出高质量的AI应用。",
        "time": "00:07:25"
      },
      {
        "question": "爱豆B可以介绍一下自己独立开发的职业生涯以及最喜欢的项目是什么？",
        "answer": "爱豆B从去年10月份开始独立开发，期间完成了多个项目，如GPDS应用导航、AI红包封面、AI壁纸网站、AI音乐播放器等。其中，AI搜索项目最为印象深刻，不仅因其热度高，也因为它体现了AI技术对其开发速度的显著提升作用。",
        "time": "00:09:28"
      },
      {
        "question": "在AI公司中，有哪些典型的AI工程师类别？",
        "answer": "确实，AI工程师是一个广泛的称呼。其中较为典型的AI工程师是那些产出AI技术的工程师，比如负责设计和开发大模型、系统架构等核心技术的人员。而爱豆B作为独立开发者，他的经历则更多地体现了AI技术应用的灵活性和广泛性。",
        "time": "00:14:54"
      },
      {
        "question": "AI领域工程师主要可以分为哪几类？",
        "answer": "AI领域的工程师大致分为两类，一类是算法工程师，他们致力于提升AI模型的效果，如语音识别准确率、图像识别准确率、生成图片的质量等，确保AI智商的提高；另一类是系统工程师或称为inference工程师、infrastructure工程师，他们的重点在于，在保持模型准确率的前提下，优化模型在底层算力和芯片上的运行效率，扩大模型训练的规模，并实现快速稳定的训练过程。",
        "time": "00:16:08"
      },
      {
        "question": "当AI模型上线部署后，还会出现哪些新的工种或岗位需求？",
        "answer": "在AI模型生产并上线部署后，新的工种包括prompt设计工程师，负责设计更好的提示词以帮助模型更好地理解用户需求并产出符合需求的回答；以及针对AI模型可能出现的幻觉问题，需要附加新鲜准确的知识库的工程师；此外，还有agent或工作流搭建工程师，他们负责开发应用开发框架，例如defi、cos等项目，为使用AI能力开发应用和产品提供支持。",
        "time": "00:17:16"
      },
      {
        "question": "在AI应用构建过程中，提示词的作用是什么？",
        "answer": "构建AI应用时，提示词扮演着至关重要的角色，它是应用的基础，决定了模型与用户交互的方式、处理信息的方法以及最终产生的结果形式。无论是简单的AI模拟器还是复杂的AI搜索引擎、艺术创作工具，都需要精心设计的提示词来指导模型理解并回应用户的输入。",
        "time": "00:20:13"
      },
      {
        "question": "AI技术的发展是否推动了低代码方向的发展？",
        "answer": "是的，AI技术的发展极大地推动了低代码方向的发展。现在，不仅有像VSL这样的工具能够通过简单的对话生成代码并渲染成组件，还有诸如AI落地配置工具，只需输入想要实现的功能，就能一键生成完整的网页结构、内容及相关SEO优化，大大减少了构建应用所需的时间和精力投入。",
        "time": "00:20:45"
      },
      {
        "question": "在移动互联网时代，应用层工程师和底层系统工程师的角色有何差异？",
        "answer": "在移动互联网浪潮中，应用层工程师和产品经理往往更受重视，他们具备较强的产品sense，即使底层技术不够成熟，也能创造出影响力广泛的产品。而底层系统工程师在AI之前就已存在，他们的工作更多是锦上添花，当产品用户量增长到一定程度后才显现出重要作用。随着AI技术的兴起，虽然底层技术和算法工程师的重要性有所提升，但真正将核心技术转化为终端价值的仍然是应用层的产品和解决方案。",
        "time": "00:22:41"
      },
      {
        "question": "在底层技术领域，是否也存在残酷的竞争，只有最好的技术得以留存？",
        "answer": "是的，在底层技术领域确实存在残酷的竞争，往往是赢者通吃。比如在算法领域，只有最优秀的算法才能被广泛采用和留存下来，其他竞争者则可能成为垫脚石或牺牲品。",
        "time": "00:30:17"
      },
      {
        "question": "产品和应用产品方面是否也有类似底层技术的竞争现象？",
        "answer": "在产品和应用产品领域同样存在残酷的竞争，必须有最终胜出的产品才能体验到成功的快乐。但这个领域下的技术多样性和复杂性更高，每个场景都有可能诞生不同的产品，而底层技术留下的相对较少。",
        "time": "00:30:51"
      },
      {
        "question": "底层技术工程师被认可的期待是否有所变化，与硅谷和国内的情况是否一致？",
        "answer": "我三月份去过硅谷，并通过媒体关注到行业内的动态。现在行业内开始公开讨论关于底层模型公司被并购以及大模型技术是否能通向AGI等话题，更关注应用的价值和投资回报率，这代表了思维潮流的变化。",
        "time": "00:32:21"
      },
      {
        "question": "大模型出现对底层技术人带来哪些影响？",
        "answer": "大模型需要大量GPU资源进行实验和训练，使得真正能够从事底层技术研发的算法工程师人数减少。此外，当前模型结构趋于收敛，颠覆现有模型架构的挑战加大，许多算法工程师不得不在transformer架构下进行增量式工作，而数据工作变得尤为重要。",
        "time": "00:37:13"
      },
      {
        "question": "能否结合自身经历谈谈对AI工程师工作的观察变化，尤其是将大模型视为分水岭？",
        "answer": "我从算法研究转向info领域，感觉两者主要区别在于算法竞争非常激烈且偶然性极高，只有少数人能创造出被行业认可、广泛应用的算法。而info领域虽然也有灵光一现的创新，但更多依赖于工程实践和持续积累，形成较高的商业壁垒，更容易将创新转化为商业产品。",
        "time": "00:33:46"
      },
      {
        "question": "大模型能力演化对工程师能力有何明显变化？",
        "answer": "对于算法工程师而言，需要具备跨学科的创新能力，并具备强大的工程能力和coding能力，能够解决底层复杂问题。随着AI商品化成为基础设施，工程师分工将进一步细化，全栈工程师将具备更强的产品洞察力和行业应用能力。",
        "time": "00:41:37"
      },
      {
        "question": "从大厂工程师转变为自由职业者，工作方式有何显著变化？",
        "answer": "转变为自由职业者后，工作方式的变化包括从传统的层级分明的大厂分工转向更灵活和自主的探索，利用AI等工具加速学习和创新，以及借助自身热情和持续反馈调整职业方向。",
        "time": "00:43:37"
      },
      {
        "question": "在大厂中，不同工种是如何分工合作的？",
        "answer": "大厂中，应用层分为前端开发、后台开发和数据库工程师等角色。例如在微信海外支付系统项目中，前端工程师负责调用接口并确保流程跑通，无需关心后台数据设计；后台工程师则关注钱包账户金额变动，编写API和RPC接口，并部署至前端调用。运维人员只需搭建K8S集群，合理切分微服务、选择IPC框架和网络通信方式，确保团队各自完成的部分能在集群上正常运行。",
        "time": "00:45:29"
      },
      {
        "question": "独立开发与公司开发的工作方式有何变化？",
        "answer": "独立开发时，工作方式有了翻天覆地的变化。不需要与他人对接接口或商量数据链路设计，可以快速选择全站开发框架，自己编写和调通接口，大大提升了工作效率。同时，不再依赖固定的公司组件，而是通过AI获取建议并直接对接所需组件，进一步提高开发效率。",
        "time": "00:47:09"
      },
      {
        "question": "对于创业公司而言，希望招到什么样的人才？",
        "answer": "创业公司非常需要全栈工程师，因为他们能独立完成从构思到实现的全过程，适应AI等新技术带来的产品机会不确定性，快速迭代。传统岗位如测试工程师等比例可能会降低，因为在微信等公司，工程师已逐渐承担起自测和自发布上线的责任。",
        "time": "00:48:34"
      },
      {
        "question": "随着个人开发者和超级个体的兴起，哪些岗位会消失或发生变化？",
        "answer": "一些传统的工种边界将变得模糊，比如测试工程师的角色可能会减少，因为独立开发者往往自己编写和测试代码。随着IT基础设施云服务的发展和完善，很多基础工作如服务器租赁、CDN等可以通过外部产品和服务解决，为超级个体和小公司创造了良好的条件。",
        "time": "00:50:22"
      },
      {
        "question": "如何解决全面能力的人既可独立创业也能被大公司吸引的问题？",
        "answer": "全面能力的人有两种倾向，一种是有强烈的创业精神，他们会寻找机会去创业；另一种虽有能力但更倾向于稳定，会选择加入创业公司或大公司。对于雇主而言，关键在于识别并吸引那些具有创业精神且能力出众的人才。",
        "time": "00:53:37"
      },
      {
        "question": "对于个人开发者来说，选择创业还是加入大公司，最大的动力是什么？",
        "answer": "最大的动力来自于个人成长和实现想法的愿望。创业能提供无限可能和成长空间，而加入大公司则需服从整体规划。重要的是根据自身个性需求调整优先级别，选择最适合自己的发展路径。",
        "time": "00:57:28"
      },
      {
        "question": "你是什么时候意识到自己是有如此强的impact驱动的？",
        "answer": "这个意识很早就有了，到现在感觉更大一些。小时候追求的是学习成绩、发表高质量论文等，但后来更注重实际对人们带来的正向推进作用，如提高生活质量、工作效率等。",
        "time": "01:02:40"
      },
      {
        "question": "你的驱动力是来自于对影响力的追求，还是有来自不同的角度？",
        "answer": "一方面希望自己能有更大的影响力，另一方面，当自己做出的产品真正解决他人问题并得到认可时，所带来的成就感非常大。我一直是一个成就感驱动型的人，无论是自学计算机还是做产品，都是为了获得持续的成就感。",
        "time": "01:03:51"
      },
      {
        "question": "你会考虑使用dev这样的AI agent吗？",
        "answer": "还未上手使用过dev，但听闻它可以解决初步问题。相信顶级工程师的编码能力仍无法被AI完全替代，尤其在复杂的软件开发领域。",
        "time": "01:07:36"
      },
      {
        "question": "袁老师作为雇主，在招工程师时最看重什么？",
        "answer": "最看重的是自驱力和过往经历中的record，即有一定的自律性和投入度，或者有自己热爱的事物如博客写作等。此外，也要具备一定的自驱力和兴趣爱好。",
        "time": "01:09:59"
      },
      {
        "question": "对于自驱力不强的人，袁老师有什么建议？",
        "answer": "建议首先要找到自己的热爱，兴趣是根本，跟随内心去追求自己真正喜欢的事情，这样更容易解决温饱问题并在专业上取得更高成就。",
        "time": "01:11:21"
      },
      {
        "question": "对于想要走爱豆比这条路（即从事AI应用开发）的工程师，有什么背景或建议？",
        "answer": "对于有工程背景或零基础的工程师，建议可以从零代码或低代码入手，迅速构建AI应用并获得正反馈和成就感。如果愿意投入时间和精力学习，也可从有代码开发开始，现在有许多在线课程资源可供学习。",
        "time": "01:13:42"
      },
      {
        "question": "对于零基础的人想要进入AI应用开发领域，您有什么建议？对于有一定技术背景的工程师来说，如何快速提升自己以适应AI应用开发的发展？",
        "answer": "建议先选择零代码或低代码路径，通过标准化流程和开源工具来实现自己的产品想法。如果有编程基础，比如会写后台，可以尝试学习前端开发，并利用AI辅助编程在一个月或两个月内掌握基本的代码编写和idea实现。这类工程师可以利用现有的开源技术和AI辅助编程，在一周内迅速掌握并制作出东西来。建议根据自身情况选择零代码、低代码或直接学习写代码，特别是从前端开始尝试后台开发。",
        "time": "01:16:27"
      },
      {
        "question": "AI工程师如何精进自己并提高竞争力？",
        "answer": "有两种发展方向：一种是深入某个领域，成为顶尖专家；另一种是拓宽知识面，具备复杂系统驾驭能力。例如，深入研究GPU底层系统结构、指令集等；或是拥有全局视野，不仅擅长前后端开发，还能设计数据库、理解K8S集群部署等。",
        "time": "01:18:17"
      },
      {
        "question": "对于初级AI工程师是否会被取代的问题，您怎么看？在经济环境不好的情况下，对想要转行到AI领域的工程师有何寄语？",
        "answer": "初级工程师如果仅限于调用API、套用模板，缺乏对技术和业务的深度理解，可能会在未来的竞争中处于劣势。而那些能理解原理、灵活运用并具备全局视野的工程师将更具优势。鼓励大家看清自己的热情所在，找到内在动力，积极行动起来，成为一个有自驱力的人。同时，强调认识并学习积极行动者的经验，将这种热情传播给更多人，共同成长与发展。",
        "time": "01:24:29"
      },
      {
        "question": "接下来AI行业有哪些发展趋势？",
        "answer": "未来AI发展的重心会转向应用层面，技术进步将使得模型能力、成本以及参与程度逐渐提升，让更多人有机会参与其中，从而推动应用爆发和超级应用的出现。同时，AI将从补充工具角色转变为构建新一代基于AI的应用，提升用户体验，形成类似云计算之后的云原生应用趋势。",
        "time": "01:29:50"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "探索AI工程师的职业道路与发展前景",
        "summary": "本期节目聚焦于AI工程师的职业发展，邀请了两位在AI研究和工程领域有着丰富经验的嘉宾分享入行AI的贴士、AI大模型的技术知识以及工程师职业路径的思考。无论是对AI工程师职业感兴趣的新手，还是希望了解行业发展前景的从业者，都能从这次分享中获得有价值的见解和启发。"
      },
      {
        "time": "00:01:59",
        "title": "袁老师的职业生涯过山车：从技术突破到再创业",
        "summary": "袁老师在过去一年经历了职业生涯的起伏，他的公司one flow在被并购后估值由1亿美金飙升至10亿美金，随后估值骤降至零。袁老师在技术突破上的最高光时刻是在one flow获得技术社群认可的时候。最彷徨的时刻则是公司在面临巨大变动时的未来不确定性。尽管面临挑战，袁老师和他的团队在短时间内决定重新创业，成立了轨迹流动，显示了团队在技术方向上的强大能力和对未来的积极展望。"
      },
      {
        "time": "00:07:08",
        "title": "规则流动和独立开发者的项目旅程",
        "summary": "规则流动因其高效性在开发者圈子中获得高度评价，成功使不熟悉AI的开发者也能开发AI应用。一个突出的例子是AI遗嘱应用，鼓励年轻人思考生命意义。而爱豆B，一位从腾讯辞职的独立开发者，分享了其独立开发之旅，包括GPDS应用导航、AI红包封面等多个项目，展现了其高产和创新精神。特别地，AI搜索项目为其带来显著的知名度提升。"
      },
      {
        "time": "00:11:45",
        "title": "AI技术在独立开发中的应用与影响",
        "summary": "讨论重点在于AI技术如何显著加速独立开发者的项目完成速度，特别是在创建复杂项目如AI音乐播放器和公众号排版器时。AI的帮助使得原本可能需要长时间编码的任务能够在极短时间内完成，大大提升了编码速度和效率。此外，还探讨了AI工程师在行业内的不同角色和职责，包括提升AI效果的算法工程师和优化AI效率的系统工程师，以及他们如何在模型效果和运行效率之间找到平衡。"
      },
      {
        "time": "00:17:15",
        "title": "AI技术应用及开发新趋势",
        "summary": "AI技术的发展催生了新的职业和工作领域，如prompt设计、知识库更新以及AI应用开发框架的工程师等。特别地，prompt的设计成为AI应用开发的基础，其质量直接影响模型的理解和回答的准确性。此外，低代码开发平台的发展使得AI应用的开发更加便捷，降低了技术门槛，促进了AI技术的广泛应用。通过实际例子说明，AI技术正在推动传统软件开发向更加智能化、低代码化的方向发展，使非专业开发者也能快速创建复杂应用。"
      },
      {
        "time": "00:22:40",
        "title": "移动互联网时代的产品创新与技术角色变迁",
        "summary": "在移动互联网浪潮中，许多具有影响力的影音产品多由应用层工程师或产品经理创建，他们凭借对产品的感觉胜过底层技术的深入掌握。这一时期是应用工程师和产品经理的黄金时代，他们能够迅速推出符合市场需求的产品，如super APP。系统工程师和信息工程师虽然在技术层面贡献巨大，如处理高并发和分布式系统，但往往是在产品已经获得成功后，才得以发挥其价值。随着AI技术的发展，虽然底层技术人才期望能站上舞台中央，但事实证明，即便是在AI领域，技术最终仍需融入产品之中才能实现其价值。技术的商品化速度极快，开源模型的普及使得底层技术人员再次面临挑战，回到辅助角色。这表明，即便在技术快速发展的今天，应用层面的创新和直面用户需求的产品设计仍然是创造社会影响力的关键。"
      },
      {
        "time": "00:27:02",
        "title": "职业生涯选择中的心理动机与追求",
        "summary": "对话中讨论了职业生涯选择时心理动机对决策的影响。一些人可能因为追求在大范围内获得认可而选择特定的职业路径，如向公众展示自己的工作。而另一些人则可能追求不断超越自己，享受在特定小圈子内获得认可的快乐。讨论强调了对to C影响的追求，并指出无论是从事技术发明创造还是产品开发，人们都在追求创造价值和产生影响。特别提到了做底层技术的快乐来源于技术的通用性和广泛适用性，而做应用和产品的人则能从直接解决问题和帮助他人中获得快乐。此外，还提到了技术胜出和被广泛使用时所带来的成就感，以及在不同工种中快乐和满足感的差异。"
      },
      {
        "time": "00:32:09",
        "title": "AI技术发展与商业价值探索",
        "summary": "AI行业经历了从追求技术突破到重视应用和投资回报的转变，特别是大模型技术的发展被视作一个分水岭。在硅谷和国内，对于底层技术的商业价值和实现路径的讨论逐渐增多。一方面，算法研究的竞争激烈，只有极少数的创新能够获得行业认可和广泛应用；另一方面，系统软件和工程实践需要长期投入和团队协作，更有可能形成商业壁垒和产品。这种转变反映了AI领域内对技术实用性和商业可持续性的双重关注。"
      },
      {
        "time": "00:37:12",
        "title": "大模型对算法工程师的影响及技术发展展望",
        "summary": "随着大模型时代的到来，算法工程师面临一系列变化和挑战。过去，算法工程师可以借助少量GPU资源进行实验和创新，但现今，大型模型的开发需要数千块GPU的支持，使得个人或小团队难以开展此类工作，导致能够从事算法工程的人数减少。此外，模型结构逐渐趋于统一，大多数创新集中在Transformer架构上，对于颠覆性创新的探索变得极其困难。在这种背景下，算法工程师的工作重心转向如何优化数据使用，探索模型与数据的高效组合。同时，随着大模型的普及，对算法工程师的要求不仅仅是专注于技术，更需要跨界知识和对复杂系统问题的洞察力。大模型的发展也让AI技能逐渐成为基础设施，未来的发展方向强调全栈工程师的培养，要求具备强大的产品洞察力和技术实施能力。"
      },
      {
        "time": "00:43:36",
        "title": "从工程师到独立开发者的转变与挑战",
        "summary": "分享者起初在腾讯担任工程师，负责明确分工下的具体任务，如架构设计和运维，不需关心业务逻辑，只专注于自身专业领域。在转换为独立开发者后，他体验到了工作方式的巨大变化：不再需要与他人对接接口或数据链路，而是可以自主完成从前端到后端的全栈开发，大大提升了工作效率和灵活性。同时，他也强调了自学和利用AI工具如copilot辅助编程的重要性，指出现代技术让自学编程变得更加容易和高效。"
      },
      {
        "time": "00:48:33",
        "title": "全栈工程师在现代企业中的重要性及未来工作趋势",
        "summary": "当前企业，尤其是创业公司，对全栈工程师的需求显著增加，这是因为AI等新技术的不确定性要求产品快速迭代。传统的团队合作模式已不能满足快速发展的需要，全栈工程师能大大提升工作效率。随着更多人成为独立开发者或自由职业者，传统岗位的界限将逐渐模糊，同时也出现了一种潮流，即个人开发者和超级个体的兴起。云计算和开发者平台的完善为这一趋势提供了技术支持，使得小公司或个人也能完成复杂产品的开发和维护，高效地实现商业目标。"
      },
      {
        "time": "00:53:15",
        "title": "探讨个人职业发展与创业精神",
        "summary": "对话内容涉及个人职业发展的不同路径，包括创业与在大公司工作。发言者分享了个人对于自由工作的偏好及对创业的考虑，同时也表达了对于在腾讯工作的经历和离职的思考。此外，讨论了有全面能力的人倾向于自己创业，以及对于冒险精神与个人能力的评估如何影响职业选择。最后，发言者强调了尊重个人性格和追求内心想法的重要性，以及对现阶段个人发展的看法。"
      },
      {
        "time": "00:57:33",
        "title": "创业路上的挑战与成长",
        "summary": "讨论了创业与在大公司工作的区别，强调创业虽无限制但也充满挑战，特别是个人成长与挑战的必要性。指出最难的不是融资，而是自我改变和认识到自己的局限。创业的动力来自于对实现自己idea的渴望，以及不希望未来后悔的强烈意愿。此外，还探讨了对于影响力和成就感的追求是驱动力的核心，以及这种追求如何从小的成就感驱动到更大的社会影响力。"
      },
      {
        "time": "01:04:22",
        "title": "探索个人能力边界与技术学习的无限可能",
        "summary": "对话者分享了通过尝试不同领域的技术挑战，如从前端到AI搜索的转变，来探索自己的能力边界和学习新技术的简便方法。通过实际动手实践和利用现有AI能力，他意识到很多行业并没有想象中的高技术门槛，从而激发了对多领域尝试的渴望。虽然已经不再亲自编码，但他依然向往工程师通过代码实现想法的自由。同时，也强调了对于希望深入AI领域的个人，从开源项目和现有资源入手是一个快速有效的方法。"
      },
      {
        "time": "01:09:52",
        "title": "创业公司招聘工程师最看重的素质",
        "summary": "在创业公司招聘工程师时，最看重的素质是自驱力，因为创业公司的团队小且组织结构扁平，需要员工有强烈的学习和研发动力，能够自主解决问题并持续进步。此外，候选人过去的经历中需要有一些亮点，无论是优秀的学业成绩还是在其他领域的兴趣和成就，这些都是重要的考虑因素。对于自驱力不强的人，建议找到自己的热爱和兴趣点，因为自驱是热爱的结果。按照兴趣和爱好发展职业，不仅能够解决生存问题，还可能达到更高的专业成就。"
      },
      {
        "time": "01:13:20",
        "title": "AI应用开发入门建议",
        "summary": "对于想要进入AI应用开发领域的人，建议可以从零代码、低代码和有代码三种方式入手。零代码适用于有创意但编程基础薄弱的人，通过现有工具快速实现想法。低代码则适合希望快速开发原型而不想深究底层代码的人，有多种框架和工具可以使用。有代码的方式适合对技术有一定基础并希望深入学习的人。无论哪种方式，重要的是保持持续的热情和自驱力，找到自己的想法并努力实现。"
      },
      {
        "time": "01:17:57",
        "title": "工程师如何提升竞争力",
        "summary": "在当前挑战性的市场环境中，工程师可以通过两种方式提高竞争力：一是深耕某一专业领域，成为该领域内的顶尖专家；二是拓宽知识面，成为能够驾驭复杂系统的全栈工程师。深耕专业领域需要对技术细节有深入的理解和掌握，比如GPU底层系统结构、指令集等，以便在特定技术领域内达到甚至超越原厂工程师的水平。而成为全栈工程师，则需要有全局视野，不仅能够独立完成前端和后端开发，还要懂得数据库设计、系统架构和部署等，以确保应用能高效、稳定地运行。同时，具备应对大流量、高并发情况的经验和能力也是专业深度的体现。视野的开阔与丰富的工作经验、项目经历息息相关，通过不断学习和实践，工程师可以在广度和深度上不断进步，从而在竞争激烈的市场中保持优势。"
      },
      {
        "time": "01:23:19",
        "title": "AI工程师职业发展与技能提升策略",
        "summary": "在AI行业，初级AI工程师可能因技能单一、视野局限而面临被取代的风险。仅仅掌握调用API、套用模板等基础技能已经不够。为了增强竞争力，工程师需要理解技术背后的原理，探索更合理的应用方法，并掌握多样化的技能。同时，跨界学习和理解不同领域的知识也变得尤为重要，这能让通用技术在特定行业中发挥更大的价值。"
      },
      {
        "time": "01:25:55",
        "title": "AI行业的未来趋势与个人发展建议",
        "summary": "在AI行业中，目前投资主要集中在底座建设上，如模型训练等，但未来的发展重心将转向应用层面，以发挥AI技术的更大价值。AI的进步将为众多应用场景带来意想不到的效果，但需要技术的普及和降低成本，以及更多人的参与，以激发创新。短期看，工具类AI应用将快速发展，提供效率提升。长期而言，AI可能会像云计算一样，改变应用开发方式，催生AI native应用。此外，对于想转行到AI领域的工程师，建议首先明确自己的热情所在，积极行动，自驱力是成就伟大事业的首要步骤。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "AI产品管理的挑战与机遇"
                },
                {
                  "children": [],
                  "content": "如何优化AI产品体验"
                }
              ],
              "content": "AI产品经理指南"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "AI工程师的必备技能"
                },
                {
                  "children": [],
                  "content": "AI项目开发流程"
                }
              ],
              "content": "AI工程师指南"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "医疗"
                },
                {
                  "children": [],
                  "content": "金融"
                },
                {
                  "children": [],
                  "content": "制造"
                },
                {
                  "children": [],
                  "content": "教育"
                }
              ],
              "content": "AI在各行业的应用案例"
            }
          ],
          "content": "AI技术及应用"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "职业背景"
                },
                {
                  "children": [],
                  "content": "成就与挑战"
                }
              ],
              "content": "发言人自我介绍"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "对AI行业感兴趣者的建议"
                },
                {
                  "children": [],
                  "content": "转行AI的准备和途径"
                }
              ],
              "content": "职业转型建议"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "跨界转型经历"
                },
                {
                  "children": [],
                  "content": "创业故事"
                }
              ],
              "content": "成功故事分享"
            }
          ],
          "content": "个人成长与职业发展"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "技术难题"
                },
                {
                  "children": [],
                  "content": "商业应用"
                }
              ],
              "content": "大模型的挑战与机遇"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "底层技术优化"
                },
                {
                  "children": [],
                  "content": "应用层面的创新"
                }
              ],
              "content": "AI技术发展方向"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "工具类应用的爆发"
                },
                {
                  "children": [],
                  "content": "AI native应用的发展"
                }
              ],
              "content": "对AI技术未来趋势的预测"
            }
          ],
          "content": "AI技术探讨"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "效率提升"
                },
                {
                  "children": [],
                  "content": "生活便利"
                }
              ],
              "content": "AI应用在个人生活中的影响"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "AI与人类智慧的比较"
                },
                {
                  "children": [],
                  "content": "AI对人类工作与生活的潜在影响"
                }
              ],
              "content": "AI引发的哲学思考"
            }
          ],
          "content": "AI与个人生活"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "找到自己的热情所在"
                },
                {
                  "children": [],
                  "content": "通过行动实现自我价值"
                }
              ],
              "content": "热情驱动的职业发展"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "个人成长故事"
                },
                {
                  "children": [],
                  "content": "对社会的贡献与影响"
                }
              ],
              "content": "AI领域内的积极行动者"
            }
          ],
          "content": "行动与热情"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "竞争力的提升"
                },
                {
                  "children": [],
                  "content": "职业路径的多样化"
                }
              ],
              "content": "对AI工程师的未来展望"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "学习资源推荐"
                },
                {
                  "children": [],
                  "content": "实践项目经验分享"
                }
              ],
              "content": "对初入AI领域的建议"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "传播积极行动"
                },
                {
                  "children": [],
                  "content": "鼓励自我驱动和探索"
                }
              ],
              "content": "十字路口播客的目的与愿景"
            }
          ],
          "content": "未来展望与建议"
        }
      ],
      "content": "十字路口播客脑图摘要"
    }
  }
}